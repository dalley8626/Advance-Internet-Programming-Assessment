{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/__components/subject/dashboard/dashboard.component.css","webpack:///./src/app/__components/subject/dashboard/dashboard.component.html","webpack:///./src/app/__components/subject/dashboard/dashboard.component.ts","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.css","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.html","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.ts","webpack:///./src/app/__components/subject/subject-add/subject-add.component.css","webpack:///./src/app/__components/subject/subject-add/subject-add.component.html","webpack:///./src/app/__components/subject/subject-add/subject-add.component.ts","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.css","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.html","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.ts","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.css","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.html","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.ts","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.css","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.html","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.ts","webpack:///./src/app/__components/ui/footer/footer.component.css","webpack:///./src/app/__components/ui/footer/footer.component.html","webpack:///./src/app/__components/ui/footer/footer.component.ts","webpack:///./src/app/__components/ui/header/header.component.css","webpack:///./src/app/__components/ui/header/header.component.html","webpack:///./src/app/__components/ui/header/header.component.ts","webpack:///./src/app/__components/ui/layout/layout.component.css","webpack:///./src/app/__components/ui/layout/layout.component.html","webpack:///./src/app/__components/ui/layout/layout.component.ts","webpack:///./src/app/__components/user/login/logging/logging.component.css","webpack:///./src/app/__components/user/login/logging/logging.component.html","webpack:///./src/app/__components/user/login/logging/logging.component.ts","webpack:///./src/app/__components/user/profile/profile.component.css","webpack:///./src/app/__components/user/profile/profile.component.html","webpack:///./src/app/__components/user/profile/profile.component.ts","webpack:///./src/app/__components/user/register/registering/registering.component.css","webpack:///./src/app/__components/user/register/registering/registering.component.html","webpack:///./src/app/__components/user/register/registering/registering.component.ts","webpack:///./src/app/__guards/auth.guard.ts","webpack:///./src/app/__guards/notAuth.guard.ts","webpack:///./src/app/__models/rating.ts","webpack:///./src/app/__models/subject.ts","webpack:///./src/app/__routes/app-routing.module.ts","webpack:///./src/app/__services/authService/auth.service.ts","webpack:///./src/app/__services/messageService/message.service.ts","webpack:///./src/app/__services/ratingService/rating.service.ts","webpack:///./src/app/__services/subjectService/subject.service.ts","webpack:///./src/app/__services/validateService/validate.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".checked {\\r\\n    color: orange;\\r\\n}\\r\\n\\r\\n.stars-outer\\r\\n{\\r\\n  position: relative;\\r\\n  display: inline;\\r\\n}\\r\\n\\r\\n.stars-inner\\r\\n{\\r\\n  position: absolute;;\\r\\n  top:0;\\r\\n  left:0;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  width: 0%;\\r\\n}\\r\\n\\r\\n.stars-outer::before {\\r\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\r\\n  font-family: FontAwesome;\\r\\n  font-weight: 900;\\r\\n  color: lightgrey;\\r\\n}\\r\\n\\r\\n.stars-inner::before {\\r\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\r\\n  font-family: FontAwesome;\\r\\n  font-weight: 900;\\r\\n  color:red;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  margin:10px;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<!-- Container -->\\r\\n<div class=\\\"container\\\">\\r\\n  <br>\\r\\n\\r\\n  <!-- Spinner -->\\r\\n  <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\">\\r\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\r\\n  </ngx-spinner>\\r\\n\\r\\n  <!-- Search Bar -->\\r\\n  <h3>Search For Subjects</h3>\\r\\n  <div class=\\\"row\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n    <form [formGroup]=\\\"form\\\" style=\\\"width:100%;\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <select class=\\\"float-left col-md-3\\\" style=\\\"height:38px;\\\" name=\\\"searchType\\\" formControlName=\\\"searchType\\\">\\r\\n            <option value=\\\"\\\" disabled selected>Filter By</option>\\r\\n            <option value=\\\"subjectNumber\\\">Subject Number</option>\\r\\n            <option value=\\\"subjectName\\\">Subject Name</option>\\r\\n          </select>\\r\\n          <input style=\\\"width:100%;\\\" type=\\\"text\\\" class=\\\"form-control float-left col-md-8\\\" placeholder=\\\"Search subject...\\\"\\r\\n            name=\\\"subjectDetail\\\" formControlName=\\\"subjectDetail\\\">\\r\\n          <button class=\\\"btn btn-primary float-left\\\" type=\\\"button\\\" (click)=\\\"checkSubject()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <!-- Search Bar end-->\\r\\n\\r\\n  <!-- Search Results Start -->\\r\\n  <div *ngIf=\\\"displaySearch\\\">\\r\\n    <h3 class=\\\"text-success\\\"> {{searchedSubject.length}} Subjects Found </h3>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"card shadow text-center\\\" style=\\\"width: 15rem;\\\" *ngFor=\\\"let subject of searchedSubject\\\">\\r\\n        <div class=\\\"card-header text-center\\\">\\r\\n          <h5>{{ subject.subjectNumber }}</h5>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <p class=\\\"card-text\\\">{{ subject.subjectName }}</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div>\\r\\n            <div class=\\\"stars-outer\\\">\\r\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <br />\\r\\n            {{subject.numberOfReview}} reviews\\r\\n            <br>\\r\\n            <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-primary\\\">Find Out More </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <h1 class=\\\"text-center text-danger\\\" *ngIf=\\\"doNotDisplaySearch\\\">No Results Found</h1>\\r\\n  <!-- Search Results End -->\\r\\n\\r\\n  <!-- Highly Rated Subject -->\\r\\n  <h3 style=\\\"margin-top: 50px;\\\">High Rated Subjects</h3>\\r\\n\\r\\n  <!-- Row -->\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <!-- Show Each Subject  -->\\r\\n    <div class=\\\"card shadow text-center\\\" style=\\\"width: 15rem;\\\" *ngFor=\\\"let subject of subjects\\\">\\r\\n\\r\\n      <!-- Card Header -->\\r\\n      <div class=\\\"card-header text-center\\\">\\r\\n        <h5>{{ subject.subjectNumber }}</h5>\\r\\n      </div>\\r\\n\\r\\n      <!-- Card Body -->\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"><span class=\\\"badge badge-pill badge-danger\\\">Hot!</span>\\r\\n        </h5>\\r\\n        <p class=\\\"card-text\\\">{{ subject.subjectName }}</p>\\r\\n      </div>\\r\\n\\r\\n      <!-- Card Footer Start -->\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <div>\\r\\n          <div class=\\\"stars-outer\\\">\\r\\n            <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Show Ratings -->\\r\\n          <br />\\r\\n          {{subject.numberOfReview}} reviews\\r\\n          <br>\\r\\n          <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-primary\\\">Find Out More </button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br><br>\\r\\n\\r\\n  <!-- Most Recent Ratings  -->\\r\\n  <h3>Most recent Ratings</h3>\\r\\n\\r\\n  <!-- Row -->\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <!-- Recent Ratings -->\\r\\n    <div class=\\\"card shadow text-center\\\" style=\\\"width: 15rem;\\\" *ngFor=\\\"let rating of ratings\\\">\\r\\n      <!-- Card Header -->\\r\\n      <div class=\\\"card-header text-center\\\">\\r\\n        <h5>{{ rating.username }}</h5>\\r\\n      </div>\\r\\n\\r\\n      <!-- Card Body -->\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"><span class=\\\"badge badge-pill badge-success\\\">Recent!</span>\\r\\n        </h5>\\r\\n\\r\\n        <div class=\\\"stars-outer\\\">\\r\\n          <div class=\\\"stars-inner\\\" [style.width]=\\\"rating.star*20 + '%'\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <br>\\r\\n\\r\\n        <p class=\\\"card-text\\\">{{ rating.ratingDescription }}</p>\\r\\n        <p style=\\\"clear:left;float:bottom;font-size:10px\\\">\\r\\n          {{rating.created | date : \\\"d MMM, y h:mm:ss a\\\" : \\\"en-AU\\\"}}\\r\\n        </p>\\r\\n\\r\\n      </div>\\r\\n      <!-- footer start -->\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <button [routerLink]=\\\"['/subjects/detail/', rating.subjectID]\\\" class=\\\"btn btn-info\\\">Find Out More\\r\\n        </button>\\r\\n      </div>\\r\\n      <!-- footer end-->\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Row End -->\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SubjectService } from '../../../__services/subjectService/subject.service'; //subject service\r\nimport { Subject } from '../../../__models/subject'; //subject model\r\nimport { RatingService } from '../../../__services/ratingService/rating.service'; //rating service\r\nimport { Rating } from '../../../__models/rating'; //rating model\r\nimport { NgxSpinnerService } from 'ngx-spinner'; //spinner service\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; // modules for building forms\r\nimport { AuthService } from '../../../__services/authService/auth.service'; //authentication service\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\n\r\n\r\n//This component is the dashboard which displays search bar, high rated subject and recent ratings. \r\nexport class DashboardComponent implements OnInit {\r\n\r\n  //subjects variable to load the Subject Details\r\n  subjects: Subject[] = [];\r\n\r\n  //ratings variable to load the Rating Details\r\n  ratings: Rating[] = [];\r\n\r\n  //form instance stored in a variable\r\n  form;\r\n\r\n  //variable to store the result (subjects) of the search\r\n  searchedSubject: Subject[] = [];\r\n\r\n  //a boolean variable to hide and unhide a div which shows the result of the search bar\r\n  displaySearch;\r\n\r\n  //a boolean variable to hide or show the div that contains errors\r\n  doNotDisplaySearch;\r\n\r\n  //constructor\r\n  constructor(\r\n    private subjectService: SubjectService, // instance of Subject Service\r\n    private ratingService: RatingService, // instance of Rating Service\r\n    private spinner: NgxSpinnerService, // instance of Spinner service\r\n    private formBuilder: FormBuilder, // instance of form Builder (used to make Reactive Forms)\r\n    private authService: AuthService  // instance of authentication service\r\n  ) { }\r\n\r\n  //on initialization\r\n  ngOnInit() {\r\n    //creating a form\r\n    this.createForm();\r\n\r\n    //getting the highly rated subjects\r\n    this.getSubjects();\r\n\r\n    //getting the recent ratings\r\n    this.getRatings();\r\n  }\r\n\r\n  //function to load highly rated subject\r\n  getSubjects(): void {\r\n    //display spinner\r\n    this.spinner.show();\r\n\r\n    //calling the subject service to get the subject data\r\n    this.subjectService.getDashboardSubjects()\r\n      // Displaying the top 4 highy rated subject\r\n      .subscribe(result => this.subjects = result['subjects'].slice(0, 4));\r\n\r\n    //timeour for the spinner\r\n    setTimeout(() =>\r\n      //hide spinner\r\n      this.spinner.hide(), 1000\r\n    )\r\n  }\r\n  \r\n  //function to load the recent ratings\r\n  getRatings(): void {\r\n\r\n    //calling the rating service to get the rating data\r\n    this.ratingService.getDashboardRatings()\r\n      // Displaying 4 recent ratings\r\n      .subscribe(result => this.ratings = result['ratings'].slice(0, 4));\r\n  }\r\n\r\n  //function to create a reactive form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      searchType: [''], //searchType Field\r\n      subjectDetail: [''],  //subjectDetail Field\r\n    })\r\n  }\r\n\r\n  //function to search for the subject\r\n  checkSubject() {\r\n    //spinner display\r\n    this.spinner.show();\r\n    const subjectDetail = this.form.get('subjectDetail').value; //get data from the search bar\r\n    const searchType = this.form.get('searchType').value; //get data from the search type beside the search bar\r\n\r\n    //if the search type is subject number => search the database by subject Number\r\n    if (searchType === \"subjectNumber\" && subjectDetail.length != 0) {\r\n      this.authService.checkSubjectNumber(subjectDetail).subscribe(data => {\r\n        //if the search is a success\r\n        if (data.success) {\r\n          //if the result more than 0 data we display search results\r\n          if (data.subjects.length > 0) {\r\n            this.searchedSubject = data.subjects;\r\n            this.displaySearch = true;\r\n            this.doNotDisplaySearch = false;\r\n          }\r\n          //display No Result\r\n          else {\r\n            this.displaySearch = false;\r\n            this.doNotDisplaySearch = true;\r\n          }\r\n        }\r\n        //display No Result\r\n        else {\r\n          this.doNotDisplaySearch = true;\r\n          this.displaySearch = false;\r\n        }\r\n      })\r\n    }\r\n    //if the search type is subject Name => search the database by subject name\r\n    else if (searchType === \"subjectName\" && subjectDetail.length != 0) {\r\n      this.authService.checkSubjectName(subjectDetail).subscribe(data => {\r\n        //if the search is success\r\n        if (data.success) {\r\n          //if there are more than 1 items found\r\n          if (data.subjects.length > 0) {\r\n            this.searchedSubject = data.subjects;\r\n            this.displaySearch = true;\r\n            this.doNotDisplaySearch = false;\r\n          }\r\n          //display no result\r\n          else {\r\n            this.displaySearch = false;\r\n            this.doNotDisplaySearch = true;\r\n          }\r\n        }\r\n        //display no result\r\n        else {\r\n          this.displaySearch = false;\r\n          this.doNotDisplaySearch = true;\r\n        }\r\n      })\r\n    } \r\n    //error condition; if user tries to send wrong values; we display error without sending request to the server\r\n    else {\r\n      this.doNotDisplaySearch = true;\r\n      this.displaySearch = false;\r\n    }\r\n\r\n    //timeout for the spinner\r\n    setTimeout(() =>\r\n    this.spinner.hide(), 500\r\n  )\r\n  }\r\n\r\n}\r\n","module.exports = \"@import url(//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css);\\r\\n\\r\\nfieldset{ margin: 0; padding: 0; border: 2px; }\\r\\n\\r\\nlabel{ margin: 0; padding: 0;}\\r\\n\\r\\nbody{ margin: 20px; }\\r\\n\\r\\nh1 { font-size: 1.5em; margin: 10px; }\\r\\n\\r\\n/* */\\r\\n\\r\\n.card\\r\\n{\\r\\n    margin:10px;;\\r\\n    font-family: 'Trebuchet MS';\\r\\n    font-size: 12px;\\r\\n    min-width: 100px;\\r\\n}\\r\\n\\r\\n.close {\\r\\n  color: red; \\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.reviewComment\\r\\n{\\r\\n  margin-top:-20px;\\r\\n}\\r\\n\\r\\n.reviewComment button\\r\\n{\\r\\n  margin-left: 3px;\\r\\n}\\r\\n\\r\\n/****** Style Star Rating Widget *****/\\r\\n\\r\\n.rating {\\r\\n  border: none;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.rating > input { display: none; }\\r\\n\\r\\n.rating > label:before {\\r\\n  margin: 5px;\\r\\n  font-size: 1.25em;\\r\\n  font-family: FontAwesome;\\r\\n  display: inline-block;\\r\\n  content: \\\"\\\\f005\\\";\\r\\n}\\r\\n\\r\\n.rating > .half:before {\\r\\n  content: \\\"\\\\f089\\\";\\r\\n  position: absolute;\\r\\n}\\r\\n\\r\\n.rating > label {\\r\\n  color: #ddd;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/***** CSS Magic to Highlight Stars on Hover *****/\\r\\n\\r\\n.rating > input:checked ~ label, /* show gold star when clicked */\\r\\n.rating:not(:checked) > label:hover, /* hover current star */\\r\\n.rating:not(:checked) > label:hover ~ label { color: #FFD700;  }\\r\\n\\r\\n/* hover previous stars in list */\\r\\n\\r\\n.rating > input:checked + label:hover, /* hover current star when changing rating */\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > label:hover ~ input:checked ~ label, /* lighten current selection */\\r\\n.rating > input:checked ~ label:hover ~ label { color: #FFED85;  }\\r\\n\\r\\n.stars-outer\\r\\n{\\r\\n  position: relative;\\r\\n  display: inline;\\r\\n}\\r\\n\\r\\n.stars-inner\\r\\n{\\r\\n  position: absolute;;\\r\\n  top:0;\\r\\n  left:0;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  width: 0%;\\r\\n}\\r\\n\\r\\n.stars-outer::before {\\r\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\r\\n  font-family: FontAwesome;\\r\\n  font-weight: 900;\\r\\n  color: lightgrey;\\r\\n}\\r\\n\\r\\n.stars-inner::before {\\r\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\r\\n  font-family: FontAwesome;\\r\\n  font-weight: 900;\\r\\n  color: #FFD700;\\r\\n}\\r\\n\\r\\n.addRatingButton {\\r\\n  margin-top:15px;\\r\\n  border-radius: 20px;\\r\\n}\\r\\n\\r\\n.subjectdetail{\\r\\n  min-height: 100px;\\r\\n}\\r\\n\\r\\n/*  Bars   */\\r\\n\\r\\nbody {\\r\\n  font-family: Arial;\\r\\n  margin: 0 auto; /* Center website */\\r\\n  max-width: 800px; /* Max width */\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.heading {\\r\\n  font-size: 25px;\\r\\n  margin-right: 25px;\\r\\n}\\r\\n\\r\\n.fa {\\r\\n  font-size: 25px;\\r\\n}\\r\\n\\r\\n.checked {\\r\\n  color: orange;\\r\\n}\\r\\n\\r\\n/* Three column layout */\\r\\n\\r\\n.side {\\r\\n  float: left;\\r\\n  width: 15%;\\r\\n  margin-top:10px;\\r\\n}\\r\\n\\r\\n.middle {\\r\\n  margin-top:10px;\\r\\n  float: left;\\r\\n  width: 70%;\\r\\n}\\r\\n\\r\\n/* Place text to the right */\\r\\n\\r\\n.right {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n/* Clear floats after the columns */\\r\\n\\r\\n.row:after {\\r\\n  content: \\\"\\\";\\r\\n  display: table;\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n/* The bar container */\\r\\n\\r\\n.bar-container {\\r\\n  width: 100%;\\r\\n  background-color: #f1f1f1;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/* Individual bars */\\r\\n\\r\\n.bar-5 {height: 18px; background-color: #4CAF50;}\\r\\n\\r\\n.bar-4 {height: 18px; background-color: #2196F3;}\\r\\n\\r\\n.bar-3 {height: 18px; background-color: #00bcd4;}\\r\\n\\r\\n.bar-2 {height: 18px; background-color: #ff9800;}\\r\\n\\r\\n.bar-1 {height: 18px; background-color: #f44336;}\\r\\n\\r\\n/* Responsive layout - make the columns stack on top of each other instead of next to each other */\\r\\n\\r\\n@media (max-width: 400px) {\\r\\n  .side, .middle {\\r\\n      width: 100%;\\r\\n  }\\r\\n  .right {\\r\\n      display: none;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\" height=\\\"10000px;\\\">\\r\\n      <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\r\\n</ngx-spinner>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- User rating chart  -->\\r\\n  <br />\\r\\n  <!-- Display all the Subject content  -->\\r\\n  <!-- Show all the reviews -->\\r\\n  <div class=\\\"col-md-12 card-deck\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card shadow subjectdetail\\\" *ngIf=\\\"subject\\\">\\r\\n        <h5 class=\\\"card-header\\\">{{subject.subjectNumber}} {{subject.subjectName}}</h5>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title text-justify\\\" style=\\\"font-size: 14px;\\\">{{subject.description}}</h5>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button *ngIf=\\\"user.usertype === 'admin'\\\" [routerLink]=\\\"['/subjects/edit', subject._id]\\\" class=\\\"btn btn-danger float-right btn-sm\\\">Edit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Something to work on start -->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card shadow subjectdetail\\\" *ngIf=\\\"subject\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div style=\\\"top:15px;\\\">\\r\\n            <h5>\\r\\n              <small class=\\\"float-left\\\"> Average User Rating of {{averageRating}}&emsp;</small>\\r\\n            </h5>\\r\\n          </div>\\r\\n          <div class=\\\"stars-outer\\\">\\r\\n            <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <!-- User Ratings  -->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"side\\\">\\r\\n              <div>5 star</div>\\r\\n            </div>\\r\\n            <div class=\\\"middle\\\">\\r\\n              <div class=\\\"bar-container\\\">\\r\\n                <div class=\\\"bar-5\\\" [style.width]='fiveRatingPercentage'></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side right\\\">\\r\\n              <div>\\r\\n                {{fiveRating}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side\\\">\\r\\n              <div>4 star</div>\\r\\n            </div>\\r\\n            <div class=\\\"middle\\\">\\r\\n              <div class=\\\"bar-container\\\">\\r\\n                <div class=\\\"bar-4\\\" [style.width]='fourRatingPercentage'></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side right\\\">\\r\\n              <div>{{fourRating}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side\\\">\\r\\n              <div>3 star</div>\\r\\n            </div>\\r\\n            <div class=\\\"middle\\\">\\r\\n              <div class=\\\"bar-container\\\">\\r\\n                <div class=\\\"bar-3\\\" [style.width]='threeRatingPercentage'></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side right\\\">\\r\\n              <div>\\r\\n                {{threeRating}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side\\\">\\r\\n              <div>2 star</div>\\r\\n            </div>\\r\\n            <div class=\\\"middle\\\">\\r\\n              <div class=\\\"bar-container\\\">\\r\\n                <div class=\\\"bar-2\\\" [style.width]='twoRatingPercentage'></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side right\\\">\\r\\n              <div>\\r\\n                {{twoRating}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side\\\">\\r\\n              <div>1 star</div>\\r\\n            </div>\\r\\n            <div class=\\\"middle\\\">\\r\\n              <div class=\\\"bar-container\\\">\\r\\n                <div class=\\\"bar-1\\\" [style.width]='oneRatingPercentage'></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"side right\\\">\\r\\n              <div>\\r\\n                {{oneRating}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- User rating ends -->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n\\r\\n<!-- Modal -->\\r\\n    <ng-template #content let-modal>\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <label for=\\\"dateOfBirth\\\">Are you sure you want to delete this rating?</label>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"modal.close('Cancel click')\\\">Cancel</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(deleteRating); modal.close('Save click');\\\">Delete</button>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n      \\r\\n      <hr>\\r\\n      \\r\\n      <pre>{{closeResult}}</pre>\\r\\n\\r\\n    <!-- Rating Dialog -->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <div style=\\\"margin-left: auto; margin-right: auto;\\\">\\r\\n            <fieldset class=\\\"rating ml-auto\\\" style=\\\"zoom:2;\\\">\\r\\n              <input type=\\\"radio\\\" id=\\\"star5\\\" name=\\\"rating\\\" value=\\\"5\\\" (click)=\\\"updateStar(5)\\\" />\\r\\n              <label class=\\\"full\\\" for=\\\"star5\\\" title=\\\"Awesome - 5 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star4half\\\" name=\\\"rating\\\" value=\\\"4.5\\\" (click)=\\\"updateStar(4.5)\\\" />\\r\\n              <label class=\\\"half\\\" for=\\\"star4half\\\" title=\\\"Pretty good - 4.5 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star4\\\" name=\\\"rating\\\" value=\\\"4\\\" (click)=\\\"updateStar(4)\\\" />\\r\\n              <label class=\\\"full\\\" for=\\\"star4\\\" title=\\\"Pretty good - 4 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star3half\\\" name=\\\"rating\\\" value=\\\"3.5\\\" (click)=\\\"updateStar(3.5)\\\" />\\r\\n              <label class=\\\"half\\\" for=\\\"star3half\\\" title=\\\"Meh - 3.5 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star3\\\" name=\\\"rating\\\" value=\\\"3\\\" (click)=\\\"updateStar(3)\\\" />\\r\\n              <label class=\\\"full\\\" for=\\\"star3\\\" title=\\\"Meh - 3 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star2half\\\" name=\\\"rating\\\" value=\\\"2.5\\\" (click)=\\\"updateStar(2.5)\\\" />\\r\\n              <label class=\\\"half\\\" for=\\\"star2half\\\" title=\\\"Kinda bad - 2.5 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star2\\\" name=\\\"rating\\\" value=\\\"2\\\" (click)=\\\"updateStar(2)\\\" />\\r\\n              <label class=\\\"full\\\" for=\\\"star2\\\" title=\\\"Kinda bad - 2 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star1half\\\" name=\\\"rating\\\" value=\\\"1.5\\\" (click)=\\\"updateStar(1.5)\\\" />\\r\\n              <label class=\\\"half\\\" for=\\\"star1half\\\" title=\\\"Meh - 1.5 stars\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"star1\\\" name=\\\"rating\\\" value=\\\"1\\\" (click)=\\\"updateStar(1)\\\" />\\r\\n              <label class=\\\"full\\\" for=\\\"star1\\\" title=\\\"Sucks big time - 1 star\\\"></label>\\r\\n              <input type=\\\"radio\\\" id=\\\"starhalf\\\" name=\\\"rating\\\" value=\\\"0.5\\\" (click)=\\\"updateStar(0.5)\\\" />\\r\\n              <label class=\\\"half\\\" for=\\\"starhalf\\\" title=\\\"Sucks big time - 0.5 stars\\\"></label>\\r\\n            </fieldset>\\r\\n          </div>\\r\\n          <textarea [disabled]=\\\"hasRated === true\\\" name=\\\"ratingDescription\\\" [(ngModel)]=\\\"rating.ratingDescription\\\"\\r\\n            class=\\\"form-control\\\" id=\\\"ratingDescription\\\" [placeholder]=\\\"hasRatedText\\\"></textarea>\\r\\n\\r\\n          <button [disabled]=\\\"hasRated === true\\\" class=\\\"btn btn-primary w-100 addRatingButton\\\" type=\\\"submit\\\" (click)=\\\"addRating();\\\">Add\\r\\n            Rating\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Review -->\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card shadow text-center\\\" *ngFor=\\\"let rating of ratings\\\">\\r\\n        <div *ngIf=\\\"rating.editFlag == false\\\">\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n            <textarea class=\\\"form-control w-100\\\" [disabled]=\\\"true\\\">{{rating.ratingDescription}}</textarea>\\r\\n\\r\\n            <div class=\\\"stars-outer float-left\\\">\\r\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"(rating.star)*20 + '%'\\\"></div>\\r\\n            </div>\\r\\n            <p style=\\\"clear:left;float:left;\\\">\\r\\n              {{rating.username}}\\r\\n            </p>\\r\\n            <p style=\\\"clear:left;float:left;\\\">\\r\\n              written: {{rating.created | date : \\\"d MMM, y h:mm:ss a\\\" : \\\"en-AU\\\"}}\\r\\n            </p>\\r\\n            <div class=\\\"reviewComment float-right\\\" *ngIf=\\\"rating.userID == user.id\\\">\\r\\n              <button class=\\\"btn btn-danger\\\" title=\\\"delete rating\\\" (click)=\\\"open(content, rating)\\\">Delete\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-primary\\\" title=\\\"edit rating\\\" (click)=\\\"edit(rating)\\\">Edit\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"rating.editFlag == true\\\">\\r\\n\\r\\n          <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"username\\\">User Name</label>\\r\\n              <input name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\"\\r\\n                disabled>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"ratingDescription1\\\">Rating Description</label>\\r\\n              <textarea name=\\\"ratingDescription1\\\" [(ngModel)]=\\\"rating.ratingDescription\\\" class=\\\"form-control\\\" id=\\\"ratingDescription1\\\"\\r\\n                placeholder=\\\"Enter Rating Description\\\"></textarea>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)='editRating(rating)'>Save</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Rating } from '../../../__models/rating'; // Rating Model\r\nimport { FormBuilder, Validators } from '@angular/forms'; // FormBUilder for reactive form\r\nimport { SubjectService } from '../../../__services/subjectService/subject.service'; //Subject service\r\nimport { ActivatedRoute, Router } from '@angular/router'; //Activated Route to get URL; router for navigation purpose\r\nimport { DatePipe, Location } from '@angular/common';\r\nimport { RatingService } from '../../../__services/ratingService/rating.service'; // Rating Service\r\nimport { Subject } from '../../../__models/subject';  //Subject Model\r\nimport { FlashMessagesService } from 'angular2-flash-messages'; //Flash Message Service\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap'; // Modal module\r\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\r\nimport { NgxSpinnerService } from 'ngx-spinner'; // Spinner module (loading animation)\r\n\r\n@Component({\r\n  selector: 'app-subject-add-review',\r\n  templateUrl: './subject-add-review.component.html',\r\n  styleUrls: ['./subject-add-review.component.css']\r\n})\r\n\r\n//This class provides with the details of the subject\r\n//As well as enables user to add user rating or view all the user ratings\r\nexport class SubjectAddReviewComponent implements OnInit {\r\n\r\n  //Attributes Start ====================================================\r\n  //=====================================================================\r\n\r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\r\n  //false means user can edit or click\r\n  //true means user cannot\r\n  processing = false;\r\n\r\n  //variable to store the current URL\r\n  currentUrl;\r\n\r\n  //form instance stored in a variable \r\n  form;\r\n\r\n  closeResult: string;\r\n\r\n  subjectPosts;\r\n\r\n  //variable to display or not display the edit form (This option is only accessible by \"admin\" users)\r\n  loadEditForm = true;\r\n\r\n  @Input() subject: Subject;\r\n\r\n  //variable to store rating\r\n  public rating: Rating;\r\n\r\n  //variable to store array of ratings\r\n  ratings: Rating[];\r\n\r\n  //variable to store the date\r\n  pipe = new DatePipe('en-US');\r\n\r\n  // Variables to store the number of users that rated the subject\r\n  //for example: there is one star rating by 5 user; the oneRating will be equal to 5 \r\n  oneRating: number = 0;\r\n  twoRating: number = 0;\r\n  threeRating: number = 0;\r\n  fourRating: number = 0;\r\n  fiveRating: number = 0;\r\n\r\n  //variables to store the percentage that will define the length of the bar\r\n  oneRatingPercentage = '0';\r\n  twoRatingPercentage = '0';\r\n  threeRatingPercentage = '0';\r\n  fourRatingPercentage = '0';\r\n  fiveRatingPercentage = '0';\r\n\r\n  //variable to store the average rating of a subejct\r\n  averageRating;\r\n\r\n  //variable to store the user\r\n  user;\r\n\r\n  //variable to either enable or disable the user from rating\r\n  hasRated: boolean;\r\n  //if the user has already rated; the has Rated Text variable value is displayed\r\n  hasRatedText = 'Write a Review';\r\n\r\n  //variable to store the Rating that is to be deleted\r\n  deleteRating: Rating;\r\n\r\n  //Attributes End ====================================================\r\n  //=====================================================================\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder, // instance of form builder\r\n    public subjectService: SubjectService, // instance of subject service\r\n    private activatedRoute: ActivatedRoute, // instance of activated Route\r\n    private router: Router, // instance of router\r\n    private location: Location, // instance of location\r\n    private flashMessageService: FlashMessagesService, // instance of flash service\r\n    private ratingService: RatingService, // instance of rating service\r\n    private modalService: NgbModal, // instance of modal service\r\n    private spinner: NgxSpinnerService // instance of spinner service\r\n  ) {\r\n\r\n    //initializing a new rating to add\r\n    this.rating = new Rating();\r\n\r\n    //initializing a new rating to delete\r\n    this.deleteRating = new Rating();\r\n\r\n    //creating a form\r\n    this.createNewSubjectForm();\r\n\r\n    //getting the user information from local storage\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  ngOnInit() {\r\n    //getting the details of the subejct\r\n    this.getSingleSubject();\r\n  }\r\n\r\n  //Open the confirmation dialog\r\n  open(content, rating) {\r\n    this.deleteRating = rating;\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      console.log(`Closed with: ${result}`);\r\n    }, (reason) => {\r\n      console.log(`Dismissed ${this.getDismissReason(reason)}`);\r\n    });\r\n  }\r\n\r\n  //Close the confirmation Dialog with ESC \r\n  private getDismissReason(reason: any): void {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      console.log('by pressing ESC');\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      console.log('by clicking on a backdrop');\r\n    } else {\r\n      console.log(`with: ${reason}`);\r\n    }\r\n  }\r\n\r\n  //function to get the details of the subject\r\n  //the url consists of the id of the subject which is used to make request to the database\r\n  getSingleSubject() {\r\n    this.spinner.show();\r\n    //taking the subject Id from the url and storing in currentUrl varialbe\r\n    this.currentUrl = this.activatedRoute.snapshot.params;\r\n\r\n    this.subjectService.getSingleSubject(this.currentUrl.id).subscribe(data => {\r\n      //if error\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = 'Subject Not found';\r\n      }\r\n      //if success\r\n      else {\r\n        //storing the subject\r\n        this.subject = data.subject;\r\n        //disabling the visibility of edit form\r\n        this.loadEditForm = false;\r\n\r\n        //get all the ratings of that particular subject\r\n        this.getRatingsbySubjectID();\r\n\r\n        //\r\n        this.ratingService.ratingAdded_Observable.subscribe(res => {\r\n          this.clearRatingStar();\r\n          this.getRatingsbySubjectID();\r\n        });\r\n      }\r\n    });\r\n\r\n    //spinner hide\r\n    setTimeout(() =>\r\n      this.spinner.hide(), 1000\r\n    )\r\n  }\r\n\r\n  // function for validation of subject Number\r\n  subjectNumberValidation(controls) {\r\n    const regExp = new RegExp(/^[0-9]+$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'subjectNumberValidation': true };\r\n    }\r\n  }\r\n\r\n  //function for validation of subject Name\r\n  subjectNameValidation(controls) {\r\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'subjectNameValidation': true };\r\n    }\r\n  }\r\n\r\n  //function to create a new form using form builder\r\n  createNewSubjectForm() {\r\n    this.form = this.formBuilder.group({\r\n      //subject Number field\r\n      subjectNumber: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(5),\r\n        Validators.minLength(5),\r\n        this.subjectNumberValidation\r\n      ])],\r\n      //subject Name field\r\n      subjectName: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(100),\r\n        Validators.minLength(3),\r\n        this.subjectNameValidation\r\n      ])],\r\n      //description field\r\n      description: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(25000),\r\n        Validators.minLength(8),\r\n      ])],\r\n    });\r\n  }\r\n\r\n  //function to update the star\r\n  updateStar(star) {\r\n    this.rating.star = star;\r\n  }\r\n\r\n  //function to go back\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  //function to get the rating according to the subject id\r\n  getRatingsbySubjectID() {\r\n    this.ratingService.getRatingsbySubjectID(this.subject._id)\r\n      .subscribe(result => {\r\n        this.ratings = result['data'];\r\n        this.getRatingPercentages(this.ratings);\r\n\r\n      });\r\n  }\r\n\r\n  //function to get the ratings percentage\r\n  getRatingPercentages(ratings: Rating[]) {\r\n    this.ratings.forEach(element => {\r\n      //adding to the respective variable upon user rating\r\n      if (element.star === 5 || element.star === 4.5) {\r\n        this.fiveRating = this.fiveRating + 1;\r\n      } else if (element.star === 4 || element.star === 3.5) {\r\n        this.fourRating = this.fourRating + 1;\r\n      } else if (element.star === 3 || element.star === 2.5) {\r\n        this.threeRating = this.threeRating + 1;\r\n      } else if (element.star === 2 || element.star === 1.5) {\r\n        this.twoRating = this.twoRating + 1;\r\n      } else if (element.star === 1 || element.star === 0.5 || element.star === 0) {\r\n        this.oneRating = this.oneRating + 1;\r\n      }\r\n      element.editFlag = false;\r\n      // Check if there is any rating that has been rated by current user;\r\n      if (element.username === this.user.username) {\r\n        this.hasRated = true;\r\n        this.hasRatedText = 'You have already rated this subject.';\r\n      }\r\n    });\r\n\r\n    //Calculating the rating percentage and storing them in the variable defined above\r\n    //percentage of 5 ratings\r\n    this.fiveRatingPercentage = `${Math.round(((this.fiveRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\r\n    //percentage of 4 ratings\r\n    this.fourRatingPercentage = `${Math.round(((this.fourRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\r\n    //percentage of 3 ratings\r\n    this.threeRatingPercentage = `${Math.round(((this.threeRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\r\n    //percentage of 2 ratings\r\n    this.twoRatingPercentage = `${Math.round(((this.twoRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\r\n    //percentage of 1 ratings\r\n    this.oneRatingPercentage = `${Math.round(((this.oneRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\r\n    //average rating\r\n    this.averageRating = Math.round(this.subject.percentageRating * 5) / 100;\r\n  }\r\n\r\n  //function to add the rating to the subejct and save to the database\r\n  addRating(): void {\r\n    //display the spinner\r\n    this.spinner.show();\r\n\r\n    if (this.rating.ratingDescription) {\r\n      this.rating.subjectID = this.subject._id;\r\n      this.rating.userID = this.user.id;\r\n      this.rating.username = this.user.username;\r\n      this.rating.created = Date();\r\n      \r\n      if (this.subject.numberOfReview && this.subject.percentageRating) {\r\n        this.subject.numberOfReview = this.subject.numberOfReview + 1;\r\n        this.subject.percentageRating =\r\n          (this.subject.percentageRating * (this.subject.numberOfReview - 1) + this.rating.star * 20) / this.subject.numberOfReview;\r\n      } else {\r\n        this.subject.numberOfReview = 1;\r\n        this.subject.percentageRating = this.rating.star * 20;\r\n      }\r\n      this.subjectService.editSubject(this.subject).subscribe(res => {\r\n\r\n        if (res['success'] === true) {\r\n          this.subjectService.notifySubjectAddition();\r\n        } else {\r\n          this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\r\n        }\r\n      }, error => {\r\n        this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\r\n      });\r\n\r\n      this.ratingService.addRating(this.rating).subscribe(res => {\r\n        console.log('response is ', res);\r\n\r\n        if (res['status'] === 'success') {\r\n          this.ratingService.notifyRatingAddition();\r\n          this.flashMessageService.show('Rating added', { cssClass: 'alert-success', timeout: 1000 });\r\n          this.rating.ratingDescription = '';\r\n          this.hasRated = false;\r\n        } else {\r\n\r\n          this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\r\n        }\r\n      }, error => {\r\n        this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\r\n      });\r\n    } else {\r\n      this.flashMessageService.show('Rating Description Required', { cssClass: 'alert-danger', timeout: 1000 });\r\n    }\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 1000)\r\n  }\r\n\r\n  //function to either display or hide the edit form\r\n  edit(rating: Rating): void {\r\n    rating.editFlag = true;\r\n  }\r\n\r\n  //function to edit the rating\r\n  editRating(rating: Rating): void {\r\n    this.ratingService.updateRating(rating).subscribe(res => {\r\n      if (res['status'] === 'success') {\r\n        this.ratingService.notifyRatingAddition();\r\n        rating.editFlag = false;\r\n        this.message = 'Rating edited.';\r\n      } else {\r\n        this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  //function to delte the rating\r\n  //we are making it asyncronous so as to update the subject detail\r\n  async delete(rating: Rating) {\r\n    this.ratings = this.ratings.filter(r => r !== rating);\r\n    if (this.subject.numberOfReview > 1) {\r\n      this.subject.numberOfReview = await this.subject.numberOfReview - 1;\r\n      this.subject.percentageRating =\r\n        await (this.subject.percentageRating * (this.subject.numberOfReview + 1) - (this.rating.star * 20)) / this.subject.numberOfReview;\r\n    } else {\r\n      this.subject.numberOfReview = 0;\r\n      this.subject.percentageRating = 0;\r\n    }\r\n\r\n    this.ratingService.deleteRating(rating).subscribe(res => {\r\n      console.log('response is ', res);\r\n      if (res['status'] === 'success') {\r\n        this.ratingService.notifyRatingAddition();\r\n        this.flashMessageService.show('Rating deleted', { cssClass: 'alert-success', timeout: 1000 });\r\n        this.hasRated = false;\r\n        this.hasRatedText = 'Write a Review.';\r\n\r\n      } else {\r\n        this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\r\n      }\r\n    }, error => {\r\n      this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\r\n    });\r\n    this.subjectService.editSubject(this.subject).subscribe(res => {\r\n      if (res['success'] === true) {\r\n        this.subjectService.notifySubjectAddition();\r\n      } else {\r\n        this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\r\n      }\r\n    }, error => {\r\n      this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\r\n    });\r\n  }\r\n\r\n  //function to clear the rating\r\n  clearRatingStar(): void {\r\n    this.fiveRating = 0;\r\n    this.fourRating = 0;\r\n    this.threeRating = 0;\r\n    this.twoRating = 0;\r\n    this.oneRating = 0;\r\n  }\r\n}\r\n","module.exports = \".registration\\r\\n{\\r\\n    font-family: 'Trebuchet MS';\\r\\n    top: 10px;\\r\\n    margin: auto;\\r\\n    max-width: 700px;\\r\\n}\\r\\n.subject-name\\r\\n{\\r\\n    background-color: #03a9f4 !important;\\r\\n}\\r\\n.card\\r\\n{\\r\\n    margin:auto;\\r\\n    font-family: 'Trebuchet MS';\\r\\n    font-size: 12px;\\r\\n    max-width: 700px;\\r\\n}\\r\\n.card-body h1\\r\\n{\\r\\n    margin-bottom: 20px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n.card .inputBox,\\r\\n.show-hide-message\\r\\n{\\r\\n    position: relative;\\r\\n    margin: 10px;\\r\\n}\\r\\n.card .inputBox input\\r\\n{\\r\\n    width:100%;\\r\\n    padding: 10px 0;\\r\\n    margin-bottom: 20px;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid grey ;\\r\\n    transition: border .1s ease-out;\\r\\n    outline: none;\\r\\n}\\r\\n.card .inputBox label\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    padding: 10px 0;\\r\\n    pointer-events: none;\\r\\n    transition: .5s;\\r\\n    color: lightgrey;\\r\\n}\\r\\n.card .inputBox textarea:focus ~ label,\\r\\n.card .inputBox textarea:valid ~ label\\r\\n{\\r\\n    top: -28px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.card .inputBox input:focus ~ label,\\r\\n.card .inputBox input:valid ~ label\\r\\n{\\r\\n    top: -18px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n    \\r\\n}\\r\\n.card .inputBox input:focus,\\r\\n.card .inputBox input:valid,\\r\\n{\\r\\n    border-color: #03a9f4;\\r\\n}\\r\\n.policy\\r\\n{\\r\\n    font-size: 12px;\\r\\n}\\r\\n.help-block\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n.help-block p\\r\\n{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.show-hide-message\\r\\n{\\r\\n    margin: auto;\\r\\n    top:0;\\r\\n    padding: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.buttons button\\r\\n{\\r\\n    margin:10px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \" <div class=\\\"container\\\">\\r\\n <!-- New Subject Form -->\\r\\n <form [formGroup]=\\\"form\\\" (submit)=\\\"onSubjectSubmit()\\\">\\r\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card registration\\\">\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h1 class=\\\"text-center\\\">Add Subject</h1>\\r\\n\\r\\n        <!-- Message Display -->\\r\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\r\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\r\\n            {{ message }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Subject Number -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.subjectNumber.errors && form.controls.subjectNumber.dirty), 'has-success': !form.controls.subjectNumber.errors}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"subjectNumber\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectNumber\\\" />\\r\\n          <label>Subject Number</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.required && form.controls.subjectNumber.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectNumber.errors?.minlength || form.controls.subjectNumber.errors?.maxlength) && form.controls.subjectNumber.dirty\\\">\\r\\n              Must be 5 numbers\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.subjectNumberValidation && form.controls.subjectNumber.dirty && (form.controls.subjectNumber.value.length != 0)\\\">Invalid\\r\\n              Subject Number\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Subject Name -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.subjectName.errors && form.controls.subjectName.dirty), 'has-success': !form.controls.subjectName.errors}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"subjectName\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectName\\\" />\\r\\n          <label>Subject Name</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.required && form.controls.subjectName.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectName.errors?.minlength || form.controls.subjectName.errors?.maxlength) && form.controls.subjectName.dirty\\\">*Min\\r\\n              : 3, Max characters: 100\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.subjectNameValidation && form.controls.subjectName.dirty && form.controls.subjectName.value.length != 0\\\">Invalid\\r\\n              Subject Name, No special characters except . , - and '\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br/>\\r\\n        <!-- Subject Description -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.description.errors && form.controls.description.dirty), 'has-success': !form.controls.description.errors}\\\">\\r\\n          <textarea class=\\\"form-control\\\" style=\\\"min-height:150px;\\\" name=\\\"description\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"description\\\"></textarea>\\r\\n          <label style=\\\"left:10px;\\\">Write the Description of the Subject</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block-textarea\\\">\\r\\n            <!-- Required error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.description.errors?.required && form.controls.description.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.description.errors?.minlength || form.controls.description.errors?.maxlength) && form.controls.description.dirty\\\">*Minimum\\r\\n              characters: 8, Maximum characters: 25000\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"buttons\\\">\\r\\n            <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Add Subject</button>\\r\\n            <button [routerLink]=\\\"['/subjects']\\\" style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\" name=\\\"\\\">Go Back</button>    \\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms'; // modules for building reactive form\r\nimport { SubjectService } from './../../../__services/subjectService/subject.service'; // subject service\r\nimport { AuthService } from './../../../__services/authService/auth.service'; // authentication service\r\nimport { Router } from '@angular/router'; // router module for navigation\r\n\r\n@Component({\r\n  selector: 'app-subject-add',\r\n  templateUrl: './subject-add.component.html',\r\n  styleUrls: ['./subject-add.component.css']\r\n})\r\n\r\n//This class can only be accessed by \"admin\" users\r\n//Functionality of this class is to add the subjects and its details\r\nexport class SubjectAddComponent implements OnInit {\r\n\r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\r\n  //false means user can edit or click\r\n  //true means user cannot\r\n  processing = false;\r\n\r\n  //form instance stored in a variable \r\n  form;\r\n\r\n  //user instance\r\n  user;\r\n  \r\n  //subject posts\r\n  subjectPosts;\r\n\r\n  \r\n  constructor(\r\n    private formBuilder : FormBuilder, // instance of formbuilder for reactive forms\r\n    private subjectService: SubjectService, // instance of subject service\r\n    private authService: AuthService, // instance of authentication service\r\n    private router: Router  // instance of router module\r\n  ) \r\n  {\r\n    //initializing the constructor with a form\r\n    this.createNewSubjectForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //Adding the new Subject\r\n  onSubjectSubmit(){\r\n    //disabling the user to edit the form\r\n    this.processing = true;\r\n\r\n    //creating a new subject\r\n    const subject = {\r\n      subjectNumber: this.form.get('subjectNumber').value,\r\n      subjectName: this.form.get('subjectName').value,\r\n      description: this.form.get('description').value\r\n    }\r\n\r\n    //calling the subejct service to create a new subejct\r\n    this.subjectService.newSubject(subject).subscribe(data => {\r\n      \r\n      //if the operation is not successful\r\n      if(!data.success) {\r\n\r\n        //displaying the error feedback\r\n        this.messageClass= 'alert alert-danger small';\r\n        this.message = data.message;\r\n\r\n        //enabling the form\r\n        this.processing = false;\r\n      } \r\n      //if successful\r\n      else {\r\n\r\n        //displaying the success feedback\r\n        this.messageClass = 'alert alert-success small'\r\n        this.message = data.message;\r\n\r\n        setTimeout(() => {\r\n          //enabling the form\r\n          this.processing = false;\r\n\r\n          //navigate back to all the subjects\r\n          this.router.navigate(['/subjects']);\r\n\r\n          //reseting the form\r\n          this.form.reset();\r\n        }, 2000);\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  //function for subject number validation\r\n  subjectNumberValidation(controls){\r\n    const regExp = new RegExp(/^[0-9]+$/); // regex for only numbers\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'subjectNumberValidation' : true }\r\n    }\r\n  }\r\n\r\n  //function for subject name validation\r\n  subjectNameValidation(controls){\r\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i); //regex for proper names\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'subjectNameValidation' : true }\r\n    }\r\n  }\r\n\r\n  //function for creating a form\r\n  createNewSubjectForm() {\r\n    this.form = this.formBuilder.group({\r\n      //subject Number field\r\n      subjectNumber: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(5),\r\n        Validators.minLength(5),\r\n        this.subjectNumberValidation // validation defined above\r\n      ])],\r\n      //subject name field\r\n      subjectName: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(100),\r\n        Validators.minLength(3),\r\n        this.subjectNameValidation // validation defined above\r\n      ])],\r\n      //description field\r\n      description: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(25000),\r\n        Validators.minLength(8),\r\n      ])],\r\n    })\r\n  }\r\n\r\n  //function to revert and go back\r\n  goBack()\r\n  {\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n","module.exports = \".card {\\r\\n    top: 100px;\\r\\n    margin: auto;\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.card-body h1\\r\\n{\\r\\n    margin-bottom: 20px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.card .inputBox\\r\\n{\\r\\n    position: relative;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.help-block\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n\\r\\n.help-block p\\r\\n{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.show-hide-message\\r\\n{\\r\\n    margin: auto;\\r\\n    top:0;\\r\\n    padding: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.buttons-position\\r\\n{\\r\\n    top: 100px;\\r\\n    margin: auto;\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.buttons-position button\\r\\n{\\r\\n    margin: 5px;\\r\\n    width: 46%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- Message Display -->\\r\\n  <br />\\r\\n  <div class=\\\"row show-hide-message\\\">\\r\\n    <div [ngClass]=\\\"messageClass\\\" style=\\\"width:100%;\\\" class=\\\"text-center\\\">\\r\\n      {{ message }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- New Subject Form -->\\r\\n  <div class=\\\"shadow mb-5 bg-white rounded card registration\\\">\\r\\n\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <h3 class=\\\"text-center\\\">Confirmation</h3>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      \\r\\n\\r\\n      <!-- Subject Number -->\\r\\n      <div class=\\\"inputBox\\\">\\r\\n        <p>Are you sure?</p>\\r\\n        <div class=\\\"buttons-position\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteSubject()\\\">Yes</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goBack()\\\">No</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SubjectService } from './../../../__services/subjectService/subject.service'; // subject service\r\nimport { Location } from '@angular/common'; //location module\r\nimport { Router, ActivatedRoute } from '@angular/router'; // router module\r\n\r\n@Component({\r\n  selector: 'app-subject-delete',\r\n  templateUrl: './subject-delete.component.html',\r\n  styleUrls: ['./subject-delete.component.css']\r\n})\r\nexport class SubjectDeleteComponent implements OnInit {\r\n\r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to store the subject that is to be deleted\r\n  subject;\r\n\r\n  //variable to store boolean that represents if the subject is present in the database\r\n  foundSubject = false;\r\n\r\n  //function to store the current URL\r\n  currentUrl;\r\n\r\n  constructor(\r\n    private subjectService: SubjectService, // instance of the subejct service\r\n    private location: Location, // instance of the location service\r\n    private router: Router, // instance of the router service\r\n    private activatedRoute: ActivatedRoute  // instance of the activated route\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //getting the current URL\r\n    this.currentUrl = this.activatedRoute.snapshot.params;\r\n\r\n    //confirming if the url contains any id\r\n    if(!this.currentUrl.id)\r\n    {\r\n      //display message\r\n      this.messageClass = 'alert-danger';\r\n      this.message = 'No id provided';\r\n    } \r\n      //flag to respresent success\r\n    else {\r\n      this.foundSubject = true;\r\n    }\r\n  }\r\n\r\n  //function to delete the subject\r\n  deleteSubject() {\r\n    this.subjectService.deleteSubject(this.currentUrl.id).subscribe(data => {\r\n      //failure\r\n      if(!data.success){\r\n        //failure message\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = data.message;\r\n      }\r\n      //success \r\n      else {\r\n        //success message\r\n        this.messageClass = 'alert alert-success';\r\n        this.message = data.message;\r\n\r\n        //timeout and navigate back\r\n        setTimeout(()=>{\r\n          this.router.navigate(['/subjects']);\r\n        },2000)\r\n      }\r\n    })\r\n  }\r\n\r\n  //go back to the previous locaiton\r\n  goBack(){\r\n    this.location.back();\r\n  }\r\n}\r\n","module.exports = \".registration\\r\\n{\\r\\n    font-family: 'Trebuchet MS';\\r\\n    top: 10px;\\r\\n    margin: auto;\\r\\n    max-width: 700px;\\r\\n}\\r\\n.subject-name\\r\\n{\\r\\n    background-color: #03a9f4 !important;\\r\\n}\\r\\n.card\\r\\n{\\r\\n    margin:auto;\\r\\n    font-family: 'Trebuchet MS';\\r\\n    font-size: 12px;\\r\\n    max-width: 700px;\\r\\n}\\r\\n.card-body h1\\r\\n{\\r\\n    margin-bottom: 20px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n.card .inputBox\\r\\n{\\r\\n    position: relative;\\r\\n    margin: 10px;\\r\\n}\\r\\n.show-hide-message\\r\\n{\\r\\n    width: 100%;\\r\\n    margin: 10px;\\r\\n}\\r\\n.card .inputBox input\\r\\n{\\r\\n    width:100%;\\r\\n    padding: 10px 0;\\r\\n    margin-bottom: 20px;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid grey ;\\r\\n    transition: border .1s ease-out;\\r\\n    outline: none;\\r\\n}\\r\\n.card .inputBox label\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    padding: 10px 0;\\r\\n    pointer-events: none;\\r\\n    transition: .5s;\\r\\n    color: lightgrey;\\r\\n}\\r\\n.card .inputBox textarea:focus ~ label,\\r\\n.card .inputBox textarea:valid ~ label\\r\\n{\\r\\n    top: -28px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.card .inputBox input:focus ~ label,\\r\\n.card .inputBox input:valid ~ label\\r\\n{\\r\\n    top: -18px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n    \\r\\n}\\r\\n.card .inputBox input:focus,\\r\\n.card .inputBox input:valid,\\r\\n{\\r\\n    border-color: #03a9f4;\\r\\n}\\r\\n.policy\\r\\n{\\r\\n    font-size: 12px;\\r\\n}\\r\\n.help-block\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n.help-block p\\r\\n{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.show-hide-message\\r\\n{\\r\\n    margin: auto;\\r\\n    top:0;\\r\\n    padding: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.buttons button\\r\\n{\\r\\n    margin:10px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- Message Display -->\\r\\n  <br/>\\r\\n  <div class=\\\"row show-hide-message\\\" >\\r\\n      <div [ngClass]=\\\"messageClass\\\" style=\\\"width:100%;\\\" class=\\\"text-center\\\">\\r\\n        {{ message }}\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- New Subject Form -->\\r\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"updateSubjectSubmit()\\\" *ngIf=\\\"!loadEditForm\\\" >\\r\\n       <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card registration\\\">\\r\\n\\r\\n         <div class=\\\"card-body\\\">\\r\\n           <h1 class=\\\"text-center\\\">Edit Subject</h1>\\r\\n   \\r\\n           <!-- Subject Number -->\\r\\n           <div class=\\\"inputBox\\\">\\r\\n             <input type=\\\"text\\\" name=\\\"subjectNumber\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectNumber\\\" [(ngModel)]=\\\"subject.subjectNumber\\\"/>\\r\\n             <label>Subject Number</label>\\r\\n             <!-- Error Block -->\\r\\n             <div class=\\\"help-block\\\">\\r\\n               <!-- Required Error -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.required && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine)\\\">*This\\r\\n                 field is Required</p>\\r\\n               <!-- Minimum and Maximum length of data error  -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectNumber.errors?.minlength || form.controls.subjectNumber.errors?.maxlength) && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine)\\\">\\r\\n                 Must be 5 numbers\\r\\n               </p>\\r\\n               <!-- Invalid data error  -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.subjectNumberValidation && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine) && (form.controls.subjectNumber.value.length != 0)\\\">Invalid\\r\\n                 Subject Number\\r\\n               </p>\\r\\n             </div>\\r\\n           </div>\\r\\n   \\r\\n           <!-- Subject Name -->\\r\\n           <div class=\\\"inputBox\\\">\\r\\n             <input type=\\\"text\\\" name=\\\"subjectName\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectName\\\" [(ngModel)]=\\\"subject.subjectName\\\"/>\\r\\n             <label>Subject Name</label>\\r\\n             <!-- Error Block -->\\r\\n             <div class=\\\"help-block\\\">\\r\\n               <!-- Required Error -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.required && form.controls.subjectName.dirty\\\">*This\\r\\n                 field is Required</p>\\r\\n               <!-- Minimum and Maximum length of data error  -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectName.errors?.minlength || form.controls.subjectName.errors?.maxlength) && form.controls.subjectName.dirty\\\">*Min\\r\\n                 : 3, Max characters: 100\\r\\n               </p>\\r\\n               <!-- Invalid data error  -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.subjectNameValidation && form.controls.subjectName.dirty && form.controls.subjectName.value.length != 0\\\">Invalid\\r\\n                 Subject Name, No special characters except . , - and '\\r\\n               </p>\\r\\n             </div>\\r\\n           </div>\\r\\n           <br/>\\r\\n           <!-- Subject Description -->\\r\\n           <div class=\\\"inputBox\\\">\\r\\n             <textarea class=\\\"form-control\\\" style=\\\"min-height:150px;\\\" name=\\\"description\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"subject.description\\\"></textarea>\\r\\n             <label style=\\\"left:10px;\\\">Write the Description of the Subject</label>\\r\\n             <!-- Error Block -->\\r\\n             <div class=\\\"help-block-textarea\\\">\\r\\n               <!-- Required error -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.description.errors?.required && form.controls.description.dirty\\\">*This\\r\\n                 field is Required</p>\\r\\n               <!-- Minimum and Maximum length of data error  -->\\r\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.description.errors?.minlength || form.controls.description.errors?.maxlength) && form.controls.description.dirty\\\">*Minimum\\r\\n                 characters: 8, Maximum characters: 25000\\r\\n               </p>\\r\\n             </div>\\r\\n             <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"descriptionMessage && !form.controls.description.errors?.validatedescriptions\\\">{{descriptionMessage}}</p>\\r\\n           </div>\\r\\n   \\r\\n           <div class=\\\"buttons\\\">\\r\\n               <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Save Changes</button>\\r\\n               <button style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-warning\\\" type=\\\"button\\\" name=\\\"\\\" (click)=\\\"goBack()\\\">Go Back</button>    \\r\\n               <button [routerLink]=\\\"['/subjects/delete/', subject._id]\\\" style=\\\"float:right\\\" type=\\\"submit\\\" class=\\\"btn btn-danger\\\" name=\\\"\\\">Delete Subject</button>\\r\\n            </div>\\r\\n           \\r\\n         </div>\\r\\n       </div>\\r\\n     </form>\\r\\n\\r\\n   </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms'; //required form modules\r\n\r\n\r\nimport { SubjectService } from './../../../__services/subjectService/subject.service'; // subject service\r\nimport { AuthService } from './../../../__services/authService/auth.service';\r\n\r\nimport {Subject} from '../../../__models/subject';\r\nimport {Rating} from '../../../__models/rating';\r\nimport {RatingService} from '../../../__services/ratingService/rating.service';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router'; // router module\r\nimport { Location } from '@angular/common'; //location module\r\n\r\n@Component({\r\n  selector: 'app-subject-edit',\r\n  templateUrl: './subject-edit.component.html',\r\n  styleUrls: ['./subject-edit.component.css']\r\n})\r\nexport class SubjectEditComponent implements OnInit {\r\n\r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\r\n  //false means user can edit or click\r\n  //true means user cannot\r\n  processing = false;\r\n\r\n  //function to store the current URL\r\n  currentUrl;\r\n\r\n  //form instance stored in a variable \r\n  form;\r\n\r\n  //user variable to store user model\r\n  user;\r\n\r\n  subjectPosts;\r\n\r\n  //edit form\r\n  loadEditForm = true;\r\n\r\n  //subject variable to store the subject model instance\r\n  subject;\r\n\r\n  constructor(\r\n    private formBuilder : FormBuilder,  //instance of form builder\r\n    private subjectService: SubjectService, //instance of subject service\r\n    private activatedRoute: ActivatedRoute, // instance of activated route\r\n    private router: Router, // instance of router\r\n    private location: Location  //instance of location\r\n  )\r\n  {\r\n    //creating a edit form\r\n    this.createNewSubjectForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //getting the url\r\n    this.currentUrl = this.activatedRoute.snapshot.params;\r\n\r\n    //sending request to the server with the id retrieved from the url\r\n    this.subjectService.getSingleSubject(this.currentUrl.id).subscribe(data => {\r\n      //failure\r\n      if(!data.success) {\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = \"Subject Not found\";\r\n      } \r\n      //success\r\n      else {\r\n        this.subject = data.subject;\r\n        this.loadEditForm = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  // validation for Subject Number\r\n  subjectNumberValidation(controls){\r\n    const regExp = new RegExp(/^[0-9]+$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'subjectNumberValidation' : true }\r\n    }\r\n  }\r\n\r\n  // validation for Subject Name\r\n  subjectNameValidation(controls){\r\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'subjectNameValidation' : true }\r\n    }\r\n  }\r\n\r\n  // creating the edit form\r\n  createNewSubjectForm() {\r\n    this.form = this.formBuilder.group({\r\n      //subject Number field\r\n      subjectNumber: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(5),\r\n        Validators.minLength(5),\r\n        this.subjectNumberValidation\r\n      ])],\r\n      // Subejct Name field\r\n      subjectName: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(100),\r\n        Validators.minLength(3),\r\n        this.subjectNameValidation\r\n      ])],\r\n      // description field\r\n      description: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(25000),\r\n        Validators.minLength(8),\r\n      ])],\r\n    })\r\n  }\r\n\r\n  //function to go back to previous locaion\r\n  goBack()\r\n  {\r\n    this.location.back();\r\n  }\r\n\r\n  //function to update the subject (or edit)\r\n  updateSubjectSubmit()\r\n  {\r\n    //disabling the form\r\n    this.processing = true;\r\n\r\n    //invoking the editSubject function in subejct service\r\n    this.subjectService.editSubject(this.subject).subscribe(data => {\r\n      //failure\r\n      if(!data.success){\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = data.message;\r\n        //enabling the form\r\n        this.processing = false;\r\n      }\r\n      //success\r\n      else {\r\n        this.messageClass = 'alert alert-success';\r\n        this.message = data.message;\r\n        setTimeout(()=>{\r\n          this.location.back();\r\n        },2000)\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".registration\\r\\n{\\r\\n    font-family: 'Trebuchet MS';\\r\\n    top: 10px;\\r\\n    margin: auto;\\r\\n    max-width: 700px;\\r\\n}\\r\\n.subject-name\\r\\n{\\r\\n    background-color: #03a9f4 !important;\\r\\n    min-height: 80px;\\r\\n}\\r\\n.card\\r\\n{\\r\\n    min-width: 245px;\\r\\n    max-width: 245px;\\r\\n    margin:10px;\\r\\n    font-family: 'Trebuchet MS';\\r\\n    font-size: 12px;\\r\\n    min-height: 300px;\\r\\n    max-height: 300px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.card-title\\r\\n{\\r\\n    font-weight: 900;\\r\\n}\\r\\n.card .inputBox,\\r\\n.show-hide-message\\r\\n{\\r\\n    position: relative;\\r\\n    margin: 10px;\\r\\n}\\r\\n.card .inputBox input\\r\\n{\\r\\n    width:100%;\\r\\n    padding: 10px 0;\\r\\n    margin-bottom: 20px;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid grey ;\\r\\n    transition: border .1s ease-out;\\r\\n    outline: none;\\r\\n}\\r\\n.card .inputBox label\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    padding: 10px 0;\\r\\n    pointer-events: none;\\r\\n    transition: .5s;\\r\\n    color: lightgrey;\\r\\n}\\r\\n.card .inputBox textarea:focus ~ label,\\r\\n.card .inputBox textarea:valid ~ label\\r\\n{\\r\\n    top: -28px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.card .inputBox input:focus ~ label,\\r\\n.card .inputBox input:valid ~ label\\r\\n{\\r\\n    top: -18px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n    \\r\\n}\\r\\n.card .inputBox input:focus,\\r\\n.card .inputBox input:valid\\r\\n{\\r\\n    border-color: #03a9f4;\\r\\n}\\r\\n.policy\\r\\n{\\r\\n    font-size: 12px;\\r\\n}\\r\\n.help-block\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n.help-block p\\r\\n{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.show-hide-message\\r\\n{\\r\\n    margin: auto;\\r\\n    top:0;\\r\\n    padding: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n.buttons button\\r\\n{\\r\\n    margin:10px;\\r\\n}\\r\\n.design-display {\\r\\n    width: 15rem; \\r\\n    display: inline-block;\\r\\n    margin:5px;\\r\\n}\\r\\n.stars-outer\\r\\n{\\r\\n    position: relative;\\r\\n    display: inline;\\r\\n}\\r\\n.stars-inner\\r\\n{\\r\\n    position: absolute;;\\r\\n    top:0;\\r\\n    left:0;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    width: 0%;\\r\\n}\\r\\n.stars-outer::before {\\r\\n    content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\r\\n    font-family: FontAwesome;\\r\\n    font-weight: 900;\\r\\n    color: lightgrey;\\r\\n}\\r\\n.stars-inner::before {\\r\\n    content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\r\\n    font-family: FontAwesome;\\r\\n    font-weight: 900;\\r\\n    color:red;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <br>\\r\\n\\r\\n  <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\">\\r\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading... All the Subjects</p>\\r\\n  </ngx-spinner>\\r\\n  <h5 style=\\\"margin-left: 30px\\\">Subject Search Bar</h5>\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input #searchBox id=\\\"search-box\\\" style=\\\"width:80%; margin-left: 30px\\\" (keyup)=\\\"search(searchBox.value)\\\"/>\\r\\n      <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-outline-primary\\\" type=\\\"button\\\">\\r\\n          <i class=\\\"fa fa-search\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"design-display\\\" *ngFor=\\\"let subject of subjects\\\">\\r\\n      <div class=\\\"card shadow\\\">\\r\\n        <div class=\\\"card-header text-center\\\">\\r\\n          <h5><code class=\\\"card-title\\\">{{ subject.subjectNumber }}</code> {{ subject.subjectName }}</h5>\\r\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"></p>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          {{subject.description}}\\r\\n        </div>\\r\\n        <!-- footer start -->\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div>\\r\\n\\r\\n            <div class=\\\"stars-outer\\\">\\r\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- Ratings --><br/>\\r\\n            {{subject.numberOfReview}} reviews\\r\\n\\r\\n            <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-warning btn-sm float-right\\\">Find\\r\\n              out more\\r\\n            </button>\\r\\n          </div>\\r\\n          <!-- footer end-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SubjectService } from './../../../__services/subjectService/subject.service';  // subject service component\r\nimport { AuthService } from './../../../__services/authService/auth.service'; // authentication service component\r\nimport { NgxSpinnerService } from 'ngx-spinner';  //spinner service\r\n\r\n\r\n@Component({\r\n  selector: 'app-subject-feed',\r\n  templateUrl: './subject-feed.component.html',\r\n  styleUrls: ['./subject-feed.component.css']\r\n})\r\nexport class SubjectFeedComponent implements OnInit {\r\n\r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to store the instance of the user model\r\n  user;\r\n\r\n  subjectPosts;\r\n\r\n  //variable to store the instance of the rating model\r\n  rating;\r\n\r\n  //maximum possible rating is the maximum rating a subject can receive based on total number of people that reviewed\r\n  maximumPossibleRating;\r\n\r\n  //variable to store the total number of reviews\r\n  numberOfreview;\r\n\r\n  //variable to store the rating percentage\r\n  percentageRating;\r\n\r\n  //variable to store the rounded rating percentage\r\n  percentageRatingRounded;\r\n\r\n  //variable to store the subject instances of subject model; an array\r\n  subjects;\r\n\r\n  constructor(\r\n    private subjectService: SubjectService, //subject service\r\n    private authService: AuthService, // authentication service\r\n    private spinner: NgxSpinnerService  // spinner service\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    //getting the profile of the user\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.user = profile.user;\r\n    });\r\n\r\n    //getting all the subejcts form the database\r\n    this.getAllSubjects();\r\n  }\r\n\r\n\r\n  //function to get all the subjects from the databse\r\n  getAllSubjects() {\r\n    this.spinner.show();\r\n\r\n    //invoking the function from subject service to retrieve all data\r\n    this.subjectService.getAllSubjects().subscribe(data => {\r\n      //assigning the subjects to the array variable defined in the class\r\n      this.subjectPosts = data.subjects;\r\n\r\n      //looping through those data\r\n      this.subjectPosts.forEach(function (subjectPost) {\r\n        //minifying the description of the subject\r\n        if (subjectPost.description.length > 100) {\r\n          subjectPost.description = subjectPost.description.substring(0, 100) + '...';\r\n          subjectPost.isVisible = true;\r\n        }\r\n      });\r\n      this.spinner.hide();\r\n      this.subjects = [...this.subjectPosts];\r\n\r\n    })\r\n\r\n  }\r\n\r\n  //function to search the subject with respect to subject name\r\n  search(value) {\r\n    //emptying the array\r\n    this.subjects = [];\r\n    //looping through all the subjects\r\n    this.subjectPosts.forEach((element, index) => {\r\n      if (element.subjectName.toUpperCase().indexOf(value.toUpperCase()) !== -1) {\r\n        //adding into the array\r\n        this.subjects.push(element);\r\n      } else { }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Footer -->\\r\\n<nav class=\\\"navbar navbar-light bg-light mt-5\\\">\\r\\n    <div class=\\\"navbar-expand m-auto navbar-text\\\">\\r\\n      Made By : RDJ\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n/**\r\n * This component displays footer to the root layout,\r\n * so that it can be displayed throughout the pages.\r\n */\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Navbar  -->\\r\\n<nav *ngIf=\\\"!authService.notLoggedIn()\\\" class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n\\r\\n  <!-- Logo -->\\r\\n  <a class=\\\"navbar-brand\\\" style=\\\"font-weight:900;\\\" href=\\\"#\\\">UTS-Subject-Review</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\"\\r\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <!-- Menus -->\\r\\n  <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navbarNavDropdown\\\">\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/subjects']\\\">AllSubjects</a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Drop Down Menu -->\\r\\n      <li class=\\\"nav-item dropdown\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\r\\n          aria-expanded=\\\"false\\\">\\r\\n          <i class=\\\"fa fa-user fixed-user\\\"></i>\\r\\n        </a>\\r\\n        <!-- Drop down list -->\\r\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n\\r\\n          <!-- Add Subject Menu Available only for admin users -->\\r\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"authService.checkUserType()\\\" [routerLink]=\\\"['/subjects/add']\\\">Add Subject</a>\\r\\n          \\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"onClickLogout()\\\" href=\\\"#\\\">Logout</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../__services/authService/auth.service'; // authentication service\r\nimport { Router } from '@angular/router'; //router module\r\nimport { FlashMessagesService } from 'angular2-flash-messages'; //flash message service\r\nimport {User} from '../../../__models/user'; // user model\r\n\r\n/**\r\n * This component displays header to the root layout,\r\n * so that it can be displayed throughout the pages.\r\n */\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  //variable to store the user model\r\n  user: User;\r\n\r\n  constructor(\r\n    public authService: AuthService, // instance of authentication service\r\n    private router: Router, // instance of router module\r\n    private flashMessagesService: FlashMessagesService // instance of flash service\r\n  ) {\r\n    \r\n   }\r\n\r\n  ngOnInit() {\r\n    this.user = JSON.parse(localStorage.getItem('user')); // getting user information\r\n  }\r\n\r\n  //User logout function\r\n  onClickLogout() {\r\n\r\n    this.authService.logout();\r\n\r\n    //display flash message of logging out\r\n    this.flashMessagesService.show('You are logged out', {cssClass: 'alert-success small'});\r\n\r\n    //navigate back to login page\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  //checking user type if it is admin to display required menu items\r\n  checkUserType(){\r\n    if (this.user.usertype == \"admin\")\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"    <!-- All the contents here-->\\r\\n    <ng-content>\\r\\n      \\r\\n    </ng-content>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n/**\r\n * This component provides frame for the application.\r\n */\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".login\\r\\n{\\r\\n    font-family: 'Trebuchet MS';\\r\\n}\\r\\n\\r\\n.card {\\r\\n    top: 100px;\\r\\n    margin: auto;\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.card-body h1\\r\\n{\\r\\n    margin-bottom: 20px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.card .inputBox\\r\\n{\\r\\n    position: relative;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.card .inputBox input\\r\\n{\\r\\n    width:100%;\\r\\n    padding: 10px 0;\\r\\n    margin-bottom: 20px;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid grey ;\\r\\n    transition: border .1s ease-out;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.card button\\r\\n{\\r\\n    width:100%;\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.card .inputBox label\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    padding: 10px 0;\\r\\n    pointer-events: none;\\r\\n    transition: .5s;\\r\\n    color: lightgrey;\\r\\n}\\r\\n\\r\\n.card .inputBox input:focus ~ label,\\r\\n.card .inputBox input:valid ~ label\\r\\n{\\r\\n    top: -18px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n    \\r\\n}\\r\\n\\r\\n.card .inputBox input:focus,\\r\\n.card .inputBox input:valid\\r\\n{\\r\\n    border-color: #03a9f4;\\r\\n}\\r\\n\\r\\n.policy\\r\\n{\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.signup\\r\\n{\\r\\n    margin-top: 20%;\\r\\n}\\r\\n\\r\\n.help-block\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n\\r\\n.help-block p\\r\\n{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.show-hide-message\\r\\n{\\r\\n    margin: auto;\\r\\n    top:0;\\r\\n    padding: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\"","module.exports = \"<!-- Login Page -->\\r\\n<div class=\\\"login\\\">\\r\\n\\r\\n  <!--  -->\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h1 class=\\\"text-center\\\">Let's get Started!</h1>\\r\\n        <br>\\r\\n        <br>\\r\\n        <!-- Message Display -->\\r\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\r\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\r\\n            {{ message }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- email -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error': form.controls.email.errors && form.controls.email.dirty, 'has-success': form.controls.email.valid && form.controls.email.dirty }\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" formControlName=\\\"email\\\" />\\r\\n          <label>Email</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Password -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\r\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\">\\r\\n          <label>Password</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n              <!-- Required Error -->\\r\\n              <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">*This\\r\\n                field is Required</p>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Login Button -->\\r\\n        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" name=\\\"\\\">Login</button>\\r\\n        <p class=\\\"policy text-center\\\" style=\\\"margin-top:5px;\\\"><a href=\\\"#\\\">Forgot Password?</a></p>\\r\\n\\r\\n        <p class=\\\"signup text-center\\\">Don't Have an account? <a routerLink=\\\"/register\\\">Register here</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../../__services/authService/auth.service'; // authentication service\r\nimport { Router } from '@angular/router'; // router model\r\nimport { User } from '../../../../__models/user'; // user model\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms'; //form modules to create reactive forms\r\n\r\n/**\r\n * This Component consists of all the functions in relation to logging in to the system\r\n */\r\n@Component({\r\n  selector: 'app-logging',\r\n  templateUrl: './logging.component.html',\r\n  styleUrls: ['./logging.component.css']\r\n})\r\n\r\nexport class LoggingComponent implements OnInit {\r\n\r\n\r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\r\n  //false means user can edit or click\r\n  //true means user cannot\r\n  processing = false;\r\n\r\n  //form instance stored in a variable \r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.createForm(); // creating the form at start\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //function to create form (reactive)\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  //function to disable the form when submitted once\r\n  disableForm() {\r\n    this.form.controls['email'].disable();\r\n    this.form.controls['password'].disable();\r\n  }\r\n\r\n  //function to enable the form when submission failed\r\n  enableForm() {\r\n    this.form.controls['email'].enable();\r\n    this.form.controls['password'].enable();\r\n  }\r\n\r\n  //On login function\r\n  onLoginSubmit() {\r\n\r\n    //disabling the form\r\n    this.processing = true;\r\n    this.disableForm();\r\n\r\n    //creating a new instance of the user\r\n    const user = {\r\n      email: this.form.get('email').value,\r\n      password: this.form.get('password').value\r\n    }\r\n\r\n    //authenticating user\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if (data.success) {\r\n        this.authService.storeUserData(data.token, data.user);\r\n        this.router.navigate(['/dashboard']);\r\n      }\r\n      else {\r\n        //displaying message\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = data.message;\r\n\r\n        //enabling the form if login failed so the user can edit the wrong input\r\n        this.processing = false;\r\n        this.enableForm();\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".card {\\r\\n    top: 10px;\\r\\n    margin: auto;\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.card-body h1\\r\\n{\\r\\n    margin-bottom: 20px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.card .inputBox,\\r\\n.show-hide-message\\r\\n{\\r\\n    position: relative;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.card .inputBox input\\r\\n{\\r\\n    width:100%;\\r\\n    padding: 10px 0;\\r\\n    margin-bottom: 20px;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid grey ;\\r\\n    transition: border .1s ease-out;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.card button\\r\\n{\\r\\n    width:100%;\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.card .inputBox label\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    padding: 10px 0;\\r\\n    pointer-events: none;\\r\\n    transition: .5s;\\r\\n    color: lightgrey;\\r\\n}\\r\\n\\r\\n.card .inputBox input:focus ~ label,\\r\\n.card .inputBox input:valid ~ label\\r\\n{\\r\\n    top: -18px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n    \\r\\n}\\r\\n\\r\\n.card .inputBox input:focus,\\r\\n.card .inputBox input:valid,\\r\\n{\\r\\n    border-color: #03a9f4;\\r\\n}\\r\\n\\r\\n.policy\\r\\n{\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.help-block\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n\\r\\n.help-block p\\r\\n{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.show-hide-message\\r\\n{\\r\\n    margin: auto;\\r\\n    top:0;\\r\\n    padding: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- Message Display -->\\r\\n  <br />\\r\\n  <div *ngIf=\\\"loadEditForm\\\">\\r\\n    <div *ngIf=\\\"user\\\">\\r\\n      <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <h1> Profile </h1>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n        <p>First Name : {{user.first_name}}</p>\\r\\n        <p>Last Name : {{user.last_name}} </p>\\r\\n        <p>Username : {{user.username}} </p>\\r\\n        <p>Email : {{user.email}} </p>\\r\\n        <p class=\\\"text-danger small\\\">Note: you need to update your password as well for security purpose</p>\\r\\n      </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"editUserForm()\\\">Edit</button>\\r\\n      </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- New Subject Form -->\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"updateUserSubmit()\\\" *ngIf=\\\"!loadEditForm\\\">\\r\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h1 class=\\\"text-center\\\">Edit Profile</h1>\\r\\n\\r\\n        <!-- Message Display -->\\r\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\r\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\r\\n            {{ message }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- First Name -->\\r\\n        <div class=\\\"inputBox\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"first_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"first_name\\\" [(ngModel)]=\\\"user.first_name\\\" />\\r\\n          <label>First name</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.required && form.controls.first_name.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.first_name.errors?.minlength || form.controls.first_name.errors?.maxlength) && form.controls.first_name.dirty\\\">*Minimum\\r\\n              characters: 2\\r\\n              Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.validateName && form.controls.first_name.dirty && (form.controls.first_name.value.length != 0)\\\">Invalid\\r\\n              Name\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Last Name -->\\r\\n        <div class=\\\"inputBox\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"last_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"last_name\\\" [(ngModel)]=\\\"user.last_name\\\" />\\r\\n          <label>Last name</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.required && form.controls.last_name.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.last_name.errors?.minlength || form.controls.last_name.errors?.maxlength) && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">*Minimum\\r\\n              characters: 2, Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.validateName && form.controls.last_name.dirty && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">Invalid\\r\\n              Name\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Email -->\\r\\n        <div class=\\\"inputBox\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"user.email\\\"\\r\\n            (blur)=\\\"checkEmail()\\\" />\\r\\n          <label>Email</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty && form.controls.email.touched && form.controls.email.value.length < 5\\\">*Minimum\\r\\n              characters: 5, Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.validateEmails && form.controls.email.dirty && form.controls.email.value.length >= 5\\\">Invalid\\r\\n              email\\r\\n            </p>\\r\\n          </div>\\r\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"emailMessage && !form.controls.email.errors?.validateEmails\\\">{{emailMessage}}</p>\\r\\n        </div>\\r\\n\\r\\n        <!-- Username -->\\r\\n        <div class=\\\"inputBox\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"username\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"\\r\\n            (blur)=\\\"checkUsername()\\\" />\\r\\n          <label>Username</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.username.dirty && form.controls.username.value.length != 0\\\">*Minimum\\r\\n              characters: 5, Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty && form.controls.username.value.length != 0\\\">Username\\r\\n              must not have any special characters\\r\\n            </p>\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"usernameMessage && !form.controls.username.errors?.validateUsername && !form.controls.username.errors?.minlength && !form.controls.username.errors?.maxlength\\\">{{usernameMessage}}</p>\\r\\n\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Password -->\\r\\n        <div class=\\\"inputBox\\\">\\r\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\" />\\r\\n          <label>Password</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This\\r\\n              field is required </p>\\r\\n\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) && form.controls.password.dirty && form.controls.password.value.length <= 5\\\">*Minimum\\r\\n              characters: 5, Maximum characters: 50\\r\\n            </p>\\r\\n\\r\\n          </div>\\r\\n          <!-- Invalid data error  -->\\r\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty && form.controls.password.value.length > 5\\\">Passord\\r\\n            must contain atleast 1 Uppercase, 1 lowercase, 1 number and 1 special character\\r\\n          </p>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- Confirm Password -->\\r\\n        <div class=\\\"inputBox\\\">\\r\\n          <input type=\\\"password\\\" name=\\\"confirm_password\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"confirm_password\\\" />\\r\\n          <label>Confirm Password</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.confirm_password.errors?.required && form.controls.confirm_password.dirty\\\">This\\r\\n              field is required\\r\\n            </p>\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm_password.dirty\\\">Password\\r\\n              do not match</p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"buttons\\\">\\r\\n          <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Save Changes</button>\\r\\n          <button style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-warning\\\" type=\\\"button\\\" name=\\\"\\\" (click)=\\\"goBack()\\\">Go\\r\\n            Back</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../__services/authService/auth.service'; //authentication service\r\nimport { ActivatedRoute, Router } from '@angular/router'; // Module to get the URL\r\nimport { Location } from '@angular/common'; // Location Module\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms'; // Form Module\r\n/**\r\n * This Component displays the user details and has functions to update/edit the profile of the user\r\n */\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  \r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\r\n  //false means user can edit or click\r\n  //true means user cannot\r\n  processing = false;\r\n\r\n  //variable to store current URL\r\n  currentUrl;\r\n  //instance of the form\r\n  form;\r\n\r\n  //variable to store boolean values reagarding the validity of the email\r\n  emailValid;\r\n  //error message or confirmation message\r\n  emailMessage;\r\n\r\n  //variable to store boolean values regarding the validity of the username\r\n  usernameValid;\r\n  //variable to store the message on the validity of username\r\n  usernameMessage;\r\n  //instance of the user\r\n  user;\r\n\r\n  //variable to store Boolean value to either display the edit form or not\r\n  loadEditForm = true;\r\n\r\n  //variable to store the subject model\r\n  subject;\r\n\r\n  constructor(\r\n    private formBuilder : FormBuilder, \r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private authService: AuthService\r\n  ) \r\n  {\r\n    this.createForm(); // create form at the start\r\n  }\r\n\r\n  //Initialization\r\n  ngOnInit() {\r\n    //get profile\r\n    this.authService.getProfile().subscribe(data => {\r\n    if(!data.success){\r\n      this.messageClass= 'alert alert-danger';\r\n        this.message = \"User Not found\";\r\n    } else {\r\n      //success\r\n      this.user = data.user;\r\n    }\r\n    }\r\n  )\r\n  }\r\n  \r\n  //function to display edit user form\r\n  editUserForm(){\r\n    this.loadEditForm = false\r\n  }\r\n\r\n  //function to create form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      first_name: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(50),\r\n        this.validateName\r\n      ])],\r\n      last_name: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(50),\r\n        this.validateName\r\n      ])],\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n        Validators.maxLength(50),\r\n        this.validateEmails\r\n      ])],\r\n      username: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n        Validators.maxLength(50),\r\n        this.validateUsername\r\n      ])],\r\n      password: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(80),\r\n        this.validatePassword\r\n      ])],\r\n      confirm_password: ['', Validators.required]\r\n    }, { validator: this.matchingPasswords('password', 'confirm_password') })\r\n  }\r\n\r\n  //function to go back\r\n  goBack()\r\n  {\r\n    this.loadEditForm=true;\r\n  }\r\n\r\n  //function to update the user\r\n  updateUserSubmit()\r\n  {\r\n    //disabling the form\r\n    this.processing = true;\r\n\r\n    //updating the user details\r\n    this.authService.updateProfile(this.user).subscribe(data => {\r\n      if(!data.success){\r\n        //failure\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = data.message;\r\n        this.processing = false;\r\n      } else {\r\n        //success\r\n        this.messageClass = 'alert alert-success';\r\n        this.message = data.message;\r\n        setTimeout(()=>{\r\n          this.location.back();\r\n        },2000)\r\n      }\r\n    });\r\n  }\r\n\r\n  //validation for email\r\n  validateEmails(controls) {\r\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    if (regExp.test(String(controls.value))) {\r\n      return null;\r\n    } else {\r\n      return { 'validateEmails': true };\r\n    }\r\n  }\r\n\r\n  //validation for username\r\n  validateUsername(controls) {\r\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'validateUsername': true };\r\n    }\r\n  }\r\n\r\n  //validation for first name and last name\r\n  validateName(controls) {\r\n    const regExp = new RegExp(/^[a-zA-Z]+$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'validateName': true };\r\n    }\r\n  }\r\n  \r\n  //validation for password\r\n  validatePassword(controls) {\r\n    const regExp = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'validatePassword': true };\r\n    }\r\n  }\r\n\r\n  //comparing two passord to match\r\n  matchingPasswords(password, confirm_password) {\r\n    return (group: FormGroup) => {\r\n      if (group.controls[password].value === group.controls[confirm_password].value) {\r\n        return null;\r\n      } else {\r\n        return { 'matchingPasswords': true };\r\n      }\r\n    }\r\n  }\r\n\r\n  //checking email if it is present or not\r\n  checkEmail() {\r\n    const email = this.form.get('email').value;\r\n    if (email.length != 0) {\r\n      this.authService.checkEmail(email).subscribe(data => {\r\n        if (!data.success) {\r\n          this.emailValid = false;\r\n          this.emailMessage = data.message;\r\n        } else {\r\n          this.emailValid = true;\r\n          this.emailMessage = data.message;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //checking username if it is available or not\r\n  checkUsername() {\r\n    const username = this.form.get('username').value;\r\n    if (username.length != 0) {\r\n      this.authService.checkUsername(username).subscribe(data => {\r\n        if (!data.success) {\r\n          this.usernameValid = false;\r\n          this.usernameMessage = data.message;\r\n        } else {\r\n          this.usernameValid = true;\r\n          this.usernameMessage = data.message;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \".registration\\r\\n{\\r\\n    font-family: 'Trebuchet MS';\\r\\n}\\r\\n\\r\\n.card {\\r\\n    top: 10px;\\r\\n    margin: auto;\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n.card-body h1\\r\\n{\\r\\n    margin-bottom: 20px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.card .inputBox,\\r\\n.show-hide-message\\r\\n{\\r\\n    position: relative;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.card .inputBox input\\r\\n{\\r\\n    width:100%;\\r\\n    padding: 10px 0;\\r\\n    margin-bottom: 20px;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid grey ;\\r\\n    transition: border .1s ease-out;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.card button\\r\\n{\\r\\n    width:100%;\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\n.card .inputBox label\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    padding: 10px 0;\\r\\n    pointer-events: none;\\r\\n    transition: .5s;\\r\\n    color: lightgrey;\\r\\n}\\r\\n\\r\\n.card .inputBox input:focus ~ label,\\r\\n.card .inputBox input:valid ~ label\\r\\n{\\r\\n    top: -18px;\\r\\n    left: 0;\\r\\n    color: #03a9f4;\\r\\n    font-size: 12px;\\r\\n    \\r\\n}\\r\\n\\r\\n.card .inputBox input:focus,\\r\\n.card .inputBox input:valid,\\r\\n{\\r\\n    border-color: #03a9f4;\\r\\n}\\r\\n\\r\\n.policy\\r\\n{\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.help-block\\r\\n{\\r\\n    position:absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n\\r\\n.help-block p\\r\\n{\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.show-hide-message\\r\\n{\\r\\n    margin: auto;\\r\\n    top:0;\\r\\n    padding: 0;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"registration\\\">\\r\\n\\r\\n  <!-- Registration -->\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\r\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\r\\n      \\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h1 class=\\\"text-center\\\">Register</h1>\\r\\n\\r\\n        <!-- Message Display -->\\r\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\r\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\r\\n            {{ message }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- First Name -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.first_name.errors && form.controls.first_name.dirty), 'has-success': !form.controls.first_name.errors}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"first_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"first_name\\\" />\\r\\n          <label>First name</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.required && form.controls.first_name.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.first_name.errors?.minlength || form.controls.first_name.errors?.maxlength) && form.controls.first_name.dirty\\\">*Minimum\\r\\n              characters: 2\\r\\n              Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.validateName && form.controls.first_name.dirty && (form.controls.first_name.value.length != 0)\\\">Invalid\\r\\n              Name\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Last Name -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.last_name.errors && form.controls.last_name.dirty), 'has-success': !form.controls.last_name.errors}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"last_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"last_name\\\" />\\r\\n          <label>Last name</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.required && form.controls.last_name.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.last_name.errors?.minlength || form.controls.last_name.errors?.maxlength) && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">*Minimum\\r\\n              characters: 2, Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.validateName && form.controls.last_name.dirty && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">Invalid\\r\\n              Name\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Email -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\"/>\\r\\n          <label>Email</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty && form.controls.email.touched && form.controls.email.value.length < 5\\\">*Minimum\\r\\n              characters: 5, Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.validateEmails && form.controls.email.dirty && form.controls.email.value.length >= 5\\\">Invalid\\r\\n              email\\r\\n            </p>\\r\\n          </div>\\r\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"emailMessage && !form.controls.email.errors?.validateEmails\\\">{{emailMessage}}</p>\\r\\n        </div>\\r\\n\\r\\n        <!-- Username -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"username\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\" />\\r\\n          <label>Username</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <!-- Required Error -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">*This\\r\\n              field is Required</p>\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.username.dirty && form.controls.username.value.length != 0\\\">*Minimum\\r\\n              characters: 5, Maximum characters: 50\\r\\n            </p>\\r\\n            <!-- Invalid data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty && form.controls.username.value.length != 0\\\">Username\\r\\n              must not have any special characters\\r\\n            </p>\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"usernameMessage && !form.controls.username.errors?.validateUsername && !form.controls.username.errors?.minlength && !form.controls.username.errors?.maxlength\\\">{{usernameMessage}}</p>\\r\\n\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Password -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{ 'has-error': form.controls.password.errors && form.controls.password.dirty , 'has-success':!form.controls.password.errors }\\\">\\r\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\" />\\r\\n          <label>Password</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This\\r\\n              field is required </p>\\r\\n\\r\\n            <!-- Minimum and Maximum length of data error  -->\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) && form.controls.password.dirty && form.controls.password.value.length <= 8\\\">*Minimum\\r\\n              characters: 8<br> *Maximum characters: 50\\r\\n            </p>\\r\\n            \\r\\n          </div>\\r\\n          <!-- Invalid data error  -->\\r\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty && form.controls.password.value.length > 8\\\">Passord\\r\\n              must contain atleast 1 Uppercase, 1 lowercase, 1 number and 1 special character\\r\\n            </p>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- Confirm Password -->\\r\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{ 'has-error': (form.controls.confirm_password.errors && form.controls.confirm_password.dirty) || (form.errors?.matchingPasswords && form.controls.confirm_password.dirty) , 'has-success':!form.controls.confirm_password.errors && !form.errors?.matchingPasswords}\\\">\\r\\n          <input type=\\\"password\\\" name=\\\"confirm_password\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"confirm_password\\\" />\\r\\n          <label>Confirm Password</label>\\r\\n          <!-- Error Block -->\\r\\n          <div class=\\\"help-block\\\">\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.confirm_password.errors?.required && form.controls.confirm_password.dirty\\\">This\\r\\n              field is required\\r\\n            </p>\\r\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm_password.dirty\\\">Password\\r\\n              do not match</p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <p class=\\\"policy text-center\\\">By signing up, you are agreeing to the terms and policy of UTS subject review</p>\\r\\n        <button [disabled]=\\\"!form.valid || processing || !usernameValid || !emailValid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" name=\\\"\\\">Register</button>\\r\\n\\r\\n        <!-- First Name -->\\r\\n        <p class=\\\"text-center\\\">Already Have an account? <a routerLink=\\\"/login\\\">Login here</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../../../__services/validateService/validate.service'; //validation service\r\nimport { AuthService } from '../../../../__services/authService/auth.service';  //authentication service\r\nimport { Router } from '@angular/router'; //router module\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';  //module for creating reactive forms\r\n\r\n/**\r\n * This Component displays a register page and has functions for registering a user\r\n */\r\n@Component({\r\n  selector: 'app-registering',\r\n  templateUrl: './registering.component.html',\r\n  styleUrls: ['./registering.component.css']\r\n})\r\nexport class RegisteringComponent implements OnInit {\r\n\r\n  //instance of formGroup\r\n  form: FormGroup;\r\n\r\n  //message variable stores the feedback message for the user\r\n  message;\r\n  //message class defines the CSS class for message to be displayed\r\n  messageClass;\r\n\r\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\r\n  //false means user can edit or click\r\n  //true means user cannot\r\n  processing;\r\n\r\n  //variable to store boolean values reagarding the validity of the email\r\n  emailValid;\r\n  //error message or confirmation message\r\n  emailMessage;\r\n\r\n  //variable to store boolean values regarding the validity of the username\r\n  usernameValid;\r\n  //variable to store the message on the validity of username\r\n  usernameMessage;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.createForm(); //creating the form at startt\r\n  }\r\n\r\n  //function to create form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      first_name: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(50),\r\n        this.validateName\r\n      ])],\r\n      last_name: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(50),\r\n        this.validateName\r\n      ])],\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n        Validators.maxLength(50),\r\n        this.validateEmails\r\n      ])],\r\n      username: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n        Validators.maxLength(50),\r\n        this.validateUsername\r\n      ])],\r\n      password: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(80),\r\n        this.validatePassword\r\n      ])],\r\n      confirm_password: ['', Validators.required]\r\n    }, { validator: this.matchingPasswords('password', 'confirm_password') })\r\n  }\r\n\r\n  //Initialization\r\n  ngOnInit() {\r\n  }\r\n\r\n  //On Register\r\n  onRegisterSubmit() {\r\n    //disabling the form\r\n    this.processing = true;\r\n\r\n    //creating a instance of the user\r\n    const user = {\r\n      first_name: this.form.get('first_name').value,\r\n      last_name: this.form.get('last_name').value,\r\n      email: this.form.get('email').value,\r\n      username: this.form.get('username').value,\r\n      password: this.form.get('password').value,\r\n    }\r\n\r\n    //registering a new user\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger';\r\n        this.message = data.message;\r\n        this.processing = false;\r\n      } else {\r\n        this.messageClass = 'alert alert-success';\r\n        this.message = data.message;\r\n        this.processing = false;\r\n        setTimeout(() => {\r\n          this.router.navigate(['/login'])\r\n        }, 2000)\r\n      }\r\n    });\r\n  }\r\n\r\n  //validation for emails\r\n  validateEmails(controls) {\r\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    if (regExp.test(String(controls.value))) {\r\n      return null;\r\n    } else {\r\n      return { 'validateEmails': true };\r\n    }\r\n  }\r\n\r\n  //validation for username\r\n  validateUsername(controls) {\r\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'validateUsername': true };\r\n    }\r\n  }\r\n\r\n  //validation for first name and last name\r\n  validateName(controls) {\r\n    const regExp = new RegExp(/^[a-zA-Z]+$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'validateName': true };\r\n    }\r\n  }\r\n\r\n  //validation for password\r\n  validatePassword(controls) {\r\n    const regExp = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\r\n    if (regExp.test(controls.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'validatePassword': true };\r\n    }\r\n  }\r\n\r\n  //matching the passwords for confirmaiton\r\n  matchingPasswords(password, confirm_password) {\r\n    return (group: FormGroup) => {\r\n      if (group.controls[password].value === group.controls[confirm_password].value) {\r\n        return null;\r\n      } else {\r\n        return { 'matchingPasswords': true };\r\n      }\r\n    }\r\n  }\r\n\r\n  //check the availability of the email\r\n  checkEmail() {\r\n    const email = this.form.get('email').value;\r\n    if (email.length != 0) {\r\n      this.authService.checkEmail(email).subscribe(data => {\r\n        if (!data.success) {\r\n          this.emailValid = false;\r\n          this.emailMessage = data.message;\r\n        } else {\r\n          this.emailValid = true;\r\n          this.emailMessage = data.message;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //checks the availability of the username\r\n  checkUsername() {\r\n    const username = this.form.get('username').value;\r\n    if (username.length != 0) {\r\n      this.authService.checkUsername(username).subscribe(data => {\r\n        if (!data.success) {\r\n          this.usernameValid = false;\r\n          this.usernameMessage = data.message;\r\n        } else {\r\n          this.usernameValid = true;\r\n          this.usernameMessage = data.message;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core'\r\nimport {Router, CanActivate} from '@angular/router'\r\nimport {AuthService} from '../__services/authService/auth.service'\r\nimport {Location} from '@angular/common'\r\n\r\n@Injectable() \r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private authService:AuthService,\r\n        private router:Router,\r\n        private locatation:Location\r\n    ){}\r\n\r\n    canActivate() {\r\n        if(!this.authService.notLoggedIn()){\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login'])\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core'\r\nimport {Router, CanActivate} from '@angular/router'\r\nimport {AuthService} from '../__services/authService/auth.service'\r\n\r\n@Injectable() \r\nexport class NotAuthGuard implements CanActivate {\r\n    constructor(\r\n        private authService:AuthService,\r\n        private router:Router\r\n    ){}\r\n\r\n    canActivate() {\r\n        if(!this.authService.notLoggedIn()){\r\n            this.router.navigate(['/dashboard'])\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","export class Rating {\r\n  public _id;\r\n  public userID;\r\n  public ratingDescription;\r\n  public subjectID;\r\n  public editFlag = false;\r\n  public username;\r\n  public star;\r\n  public created;\r\n\r\n  constructor() {\r\n    this._id = '';\r\n    this.userID = '';\r\n    this.ratingDescription = '';\r\n    this.subjectID = '';\r\n    this.editFlag = false;\r\n    this.username = '';\r\n    this.star = 0;\r\n    this.created = '';\r\n  }\r\n}\r\n","import {Rating} from 'src/app/__models/rating';\r\n\r\nexport class Subject {\r\n  public _id;\r\n  public subjectNumber;\r\n  public subjectName;\r\n  public numberOfReview;\r\n  public percentageRating;\r\n  public description;\r\n  public ratingIDs: Array<string>;\r\n\r\n  constructor() {\r\n    this._id = '';\r\n    this.subjectNumber = '';\r\n    this.subjectName = '';\r\n    this.numberOfReview = 0;\r\n    this.percentageRating = 0;\r\n    this.description = '';\r\n    this.ratingIDs = [];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//subject\r\n// import { SubjectsComponent } from './../__components/subject/subjects/subjects.component';\r\n// import { SubjectDetailComponent } from './../__components/subject/subject-detail/subject-detail.component';\r\n// import { SubjectSearchComponent } from './../__components/subject/subject-search/subject-search.component';\r\nimport { SubjectAddComponent } from './../__components/subject/subject-add/subject-add.component';\r\nimport { DashboardComponent } from './../__components/subject/dashboard/dashboard.component';\r\nimport { SubjectFeedComponent } from './../__components/subject/subject-feed/subject-feed.component';\r\nimport { SubjectEditComponent } from './../__components/subject/subject-edit/subject-edit.component';\r\nimport { SubjectAddReviewComponent } from './../__components/subject/subject-add-review/subject-add-review.component';\r\nimport { SubjectDeleteComponent } from './../__components/subject/subject-delete/subject-delete.component';\r\n\r\n\r\n//user\r\nimport { LoggingComponent } from '../__components/user/login/logging/logging.component';\r\nimport { ProfileComponent } from '../__components/user/profile/profile.component';\r\nimport { RegisteringComponent } from '../__components/user/register/registering/registering.component';\r\n\r\n//Authentication guards\r\nimport { NotAuthGuard } from '../__guards/notAuth.guard';\r\nimport { AuthGuard } from '../__guards/auth.guard';\r\n\r\nconst routes: Routes = [  \r\n  { path: 'login', component: LoggingComponent, canActivate:[NotAuthGuard]},\r\n  { path: 'register', component: RegisteringComponent, canActivate:[NotAuthGuard]},\r\n  { path: 'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\r\n   { path: 'subjects', component: SubjectFeedComponent, canActivate:[AuthGuard] },\r\n   { path: 'subjects/add', component: SubjectAddComponent, canActivate:[AuthGuard]},\r\n   { path: 'subjects/detail/:id', component: SubjectAddReviewComponent, canActivate:[AuthGuard]},\r\n   { path: 'subjects/edit/:id', component: SubjectEditComponent, canActivate:[AuthGuard]},\r\n   { path: 'subjects/delete/:id', component: SubjectDeleteComponent, canActivate:[AuthGuard]},\r\n  { path: 'dashboard', component: DashboardComponent, canActivate:[AuthGuard] },\r\n  { path: 'profile', component: ProfileComponent, canActivate:[AuthGuard]},\r\n  { path: '**', redirectTo: 'dashboard', canActivate: [AuthGuard] },\r\n  { path: '**', redirectTo: 'login' } // The \"Catch-All\" Route and send to login\r\n\r\n]\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { map } from 'rxjs/operators/'\r\nimport { JwtHelperService } from '@auth0/angular-jwt'\r\nimport { Router } from '@angular/router';\r\n\r\nconst helper = new JwtHelperService();\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  //url for server\r\n  domain = \"http://localhost:8080\";\r\n  authToken: any;\r\n  user: any;\r\n  headers;\r\n\r\n  constructor(\r\n    private http : Http,\r\n    private router: Router\r\n  ) { }\r\n\r\n  registerUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http\r\n      .post(this.domain + '/users/register', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  checkUsername(username){\r\n    return this.http.get(this.domain + '/users/checkUsername/' + username).pipe(map(res => res.json()));\r\n  }\r\n\r\n  checkEmail(email){\r\n    return this.http.get(this.domain + '/users/checkEmail/'+ email).pipe(map(res => res.json()));\r\n  }\r\n\r\n  checkSubjectNumber(subjectNumber){\r\n    return this.http.get(this.domain + '/users/checkSubjectNumber/'+ subjectNumber).pipe(map(res => res.json()));\r\n  }\r\n\r\n  checkSubjectName(subjectName){\r\n    return this.http.get(this.domain + '/users/checkSubjectName/'+ subjectName).pipe(map(res => res.json()));\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http\r\n      .post(this.domain + '/users/authenticate', user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  updateProfile(user) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put(this.domain + '/users/profile/updateProfile', user, {headers : headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  loadAuthenticationHeaders() {\r\n    this.headers = new Headers();\r\n    this.loadToken();\r\n    this.headers.append('Authorization', this.authToken);\r\n    this.headers.append('Content-Type', 'application/json');\r\n  }\r\n\r\n  getProfile() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authToken);\r\n    return this.http\r\n      .get(this.domain + '/users/profile', {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('id_token', token);\r\n    //Local storage can only store string\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  notLoggedIn(){\r\n    const isExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    return isExpired;\r\n  }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user= null;\r\n    localStorage.clear(); \r\n  }\r\n\r\n  checkUserType(){\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    if (user.usertype == \"admin\")\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }  \r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages = [];\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport {Observable, of, Subject} from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { MessageService } from '../messageService/message.service';\r\nimport {Rating} from '../../__models/rating';\r\n// import {Headers, RequestOptions} from '@angular/http';\r\nimport {AuthService} from '../authService/auth.service';\r\n\r\n// const httpOptions = {\r\n//   headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n// };\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RatingService {\r\n  public ratingAdded_Observable = new Subject();\r\n  domain = this.authService.domain;// URL to web api\r\n  private ratingsUrl = this.domain + '/ratings';  // URL to web api\r\n  // options;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private messageService: MessageService) { }\r\n\r\n  // createAuthenticationHeaders() {\r\n  //   this.authService.loadToken();\r\n  //   this.options = new RequestOptions({\r\n  //     headers: new Headers({\r\n  //       'Content-Type': 'application/json',\r\n  //       'authorization': this.authService.authToken\r\n  //     })\r\n  //   });\r\n  // }\r\n  /** GET ratings from the server */\r\n  getRatings (): Observable<Rating[]> {\r\n    this.authService.loadAuthenticationHeaders();\r\n    return this.http.get<Rating[]>(this.ratingsUrl,{headers:this.authService.headers});\r\n  }\r\n\r\n  /** GET rating by id. Return `undefined` when id not found */\r\n  getRatingNo404<Data>(_id: number): Observable<Rating> {\r\n    this.authService.loadAuthenticationHeaders();\r\n    const url = `${this.ratingsUrl}/?id=${_id}`;\r\n    return this.http.get<Rating[]>(url,{headers:this.authService.headers})\r\n      .pipe(\r\n        map(ratings => ratings[0]), // returns a {0|1} element array\r\n        tap(h => {\r\n          const outcome = h ? `fetched` : `did not find`;\r\n          this.log(`${outcome} rating id=${_id}`);\r\n        }),\r\n        catchError(this.handleError<Rating>(`getRating _id=${_id}`))\r\n      );\r\n  }\r\n  /** GET ratings from the server */\r\n  getRatingsbySubjectID (subjectID: number): Observable<Rating[]> {\r\n    this.authService.loadAuthenticationHeaders();\r\n    const url = `${this.ratingsUrl}/${subjectID}`;\r\n    return this.http.get<Rating[]>(url,{headers:this.authService.headers});\r\n  }\r\n  \r\n  /** GET rating by id. Will 404 if id not found */\r\n  getRating(_id: number): Observable<Rating> {\r\n    const url = `${this.ratingsUrl}/detail/${_id}`;\r\n    return this.http.get<Rating>(url,{headers:this.authService.headers}).pipe(\r\n      tap(_ => this.log(`fetched rating id=${_id}`)),\r\n      catchError(this.handleError<Rating>(`getRating id=${_id}`))\r\n    );\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new rating to the server */\r\n  addRating (rating: Rating): Observable<Rating> {\r\n    this.authService.loadAuthenticationHeaders();\r\n    console.log(rating,{headers:this.authService.headers});\r\n    return this.http.post<Rating>(`${this.ratingsUrl}/add/`, rating, {headers:this.authService.headers}).pipe(\r\n      tap((rating: Rating) => this.log(`added rating w/ id=${rating._id}`)),\r\n      catchError(this.handleError<Rating>('addRating'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the rating from the server */\r\n  deleteRating (rating: Rating): Observable<Rating> {\r\n    console.log(rating,{headers:this.authService.headers});\r\n    const url = `${this.ratingsUrl}/delete/${rating._id}`;\r\n    return this.http.delete<Rating>(url, {headers:this.authService.headers}).pipe(\r\n      tap(_ => this.log(`deleted rating _id=${rating._id}`)),\r\n      catchError(this.handleError<Rating>('deleteRating'))\r\n    );\r\n  }\r\n\r\n  /** PUT: update the rating on the server */\r\n  updateRating (rating: Rating): Observable<any> {\r\n    return this.http.put(`${this.ratingsUrl}/update`, rating, {headers:this.authService.headers}).pipe(\r\n      tap(_ => this.log(`updated rating _id=${rating._id}`)),\r\n      catchError(this.handleError<any>('updateRating'))\r\n    );\r\n  }\r\n  notifyRatingAddition() {\r\n    this.ratingAdded_Observable.next();\r\n  }\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a RatingService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.add(`RatingService: ${message}`);\r\n  }\r\n\r\n  getDashboardRatings() {\r\n    console.log(this.authService.headers);\r\n    this.authService.loadAuthenticationHeaders();    \r\n    return this.http.get(this.ratingsUrl + '/dashboard');\r\n  }}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AuthService } from './../authService/auth.service';\r\nimport { map } from 'rxjs/operators/';\r\nimport { Router } from '@angular/router';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SubjectService {\r\n  public subjectAdded_Observable = new Subject();\r\n  domain = this.authService.domain;// URL to web api\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private http: Http\r\n    ) { }\r\n\r\n  notifySubjectAddition() {\r\n    this.authService.loadAuthenticationHeaders();\r\n    this.subjectAdded_Observable.next();\r\n  }\r\n  newSubject(subject){\r\n    this.authService.loadAuthenticationHeaders();\r\n    return this.http.post(this.domain + '/subjects/addSubject', subject, {headers: this.authService.headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  getAllSubjects() {\r\n    this.authService.loadAuthenticationHeaders();\r\n    return this.http.get(this.domain + '/subjects/allSubjects', {headers:this.authService.headers})\r\n    .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getDashboardSubjects() {\r\n    this.authService.loadAuthenticationHeaders();\r\n    return this.http.get(this.domain + '/subjects/dashboard', {headers: this.authService.headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  getSingleSubject(id) {\r\n    this.authService.loadAuthenticationHeaders();\r\n    return this.http.get(this.domain + '/subjects/singleSubject/' + id, {headers: this.authService.headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  editSubject(subject) {\r\n    this.authService.loadAuthenticationHeaders();\r\n    return this.http.put(this.domain + '/subjects/updateSubject', subject, {headers: this.authService.headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  deleteSubject(id) {\r\n    this.authService.loadAuthenticationHeaders();\r\n    return this.http.delete(this.domain + '/subjects/deleteSubject/' + id, {headers: this.authService.headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  postReview(id, reviewComment, reviewRating) {\r\n    this.authService.loadAuthenticationHeaders();\r\n    const subjectData = {\r\n      reviewComment: reviewComment,\r\n      reviewRating: reviewRating\r\n    }\r\n    return this.http.post(this.domain + 'subjects/addreview/'+id, subjectData,{headers: this.authService.headers}).pipe(map(res => res.json()));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user) {\r\n    if (user.name == undefined || user.email == undefined || user.password == undefined) {\r\n      console.log('no Error');\r\n        return false;\r\n    } else {\r\n      console.log(\"Error\")\r\n      return true;\r\n    }     \r\n  }\r\n\r\n  //Regex email validation to ensure that it uses correct email format\r\n  // validateEmail(controls) {\r\n  //   //Regex email validation\r\n  //   console.log(\"hello\");\r\n  // }\r\n}\r\n","module.exports = \".bg{\\r\\n    background-image: url('login.jpg'); height: 100%; background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n    height: 1024px;\\r\\n}\\r\\n\\r\\nnobg{\\r\\n    background-color: grey;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<!-- background image display according to the login status -->\\r\\n<div [ngClass]=\\\"{'bg': authService.notLoggedIn(), 'nobg': !authService.notLoggedIn()}\\\">\\r\\n\\r\\n\\r\\n    <app-layout>\\r\\n    <flash-messages style=\\\"position: fixed; width: 100%; z-index: 1;\\\"></flash-messages>\\r\\n    <app-header></app-header>\\r\\n    <!--TODO: Get this flash message going\\r\\n    <ng-flash-message></ng-flash-message> -->\\r\\n    <router-outlet></router-outlet>\\r\\n    <app-footer></app-footer>\\r\\n    </app-layout>\\r\\n\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './__services/authService/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'subject-review';\r\n\r\n  constructor(public authService: AuthService){}\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, InjectionToken } from '@angular/core';\r\n\r\n//Forms Module for angular\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n//Http module required for server connection\r\nimport { HttpModule } from \"@angular/http\"\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n//JWT\r\nimport { JwtHelperService } from '@auth0/angular-jwt'\r\n\r\n//importing Components\r\nimport { AppComponent } from './app.component';\r\n\r\n//subject\r\n// import { SubjectsComponent } from './__components/subject/subjects/subjects.component';\r\n// import { SubjectDetailComponent } from './__components/subject/subject-detail/subject-detail.component';\r\n// import { SubjectSearchComponent } from './__components/subject/subject-search/subject-search.component';\r\n// import { SubjectAddComponent } from './__components/subject/subject-add/subject-add.component';\r\n\r\nimport { DashboardComponent } from './__components/subject/dashboard/dashboard.component';\r\n\r\n//ui\r\nimport { LayoutComponent } from './__components/ui/layout/layout.component';\r\nimport { HeaderComponent } from './__components/ui/header/header.component';\r\nimport { FooterComponent } from './__components/ui/footer/footer.component';\r\n\r\n//bootstrap\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n//user\r\nimport { LoggingComponent } from './__components/user/login/logging/logging.component';\r\nimport { ProfileComponent } from './__components/user/profile/profile.component';\r\nimport { RegisteringComponent } from './__components/user/register/registering/registering.component';\r\n\r\n//Importing Authentication Guard\r\nimport { AuthGuard } from './__guards/auth.guard';\r\nimport { NotAuthGuard } from './__guards/notAuth.guard';\r\n\r\n//Importing Service\r\nimport { ValidateService } from './__services/validateService/validate.service';\r\nimport { AuthService } from './__services/authService/auth.service';\r\n\r\n//Routing Module\r\nimport { AppRoutingModule } from './__routes/app-routing.module';\r\n\r\n//Reactive Forms\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n//importing flash message module\r\nimport { FlashMessagesModule, FlashMessagesService } from 'angular2-flash-messages';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n//Subject\r\nimport { SubjectFeedComponent } from './__components/subject/subject-feed/subject-feed.component';\r\nimport { SubjectAddComponent } from './__components/subject/subject-add/subject-add.component';\r\nimport { SubjectAddReviewComponent } from './__components/subject/subject-add-review/subject-add-review.component';\r\nimport { SubjectEditComponent } from './__components/subject/subject-edit/subject-edit.component';\r\nimport { SubjectDeleteComponent } from './__components/subject/subject-delete/subject-delete.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProfileComponent,\r\n    RegisteringComponent,\r\n    LoggingComponent,\r\n    LayoutComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SubjectAddComponent,\r\n    // SubjectDetailComponent,\r\n    // SubjectsComponent,\r\n    // SubjectSearchComponent,\r\n    DashboardComponent,\r\n    SubjectFeedComponent,\r\n    SubjectAddComponent,\r\n    SubjectAddReviewComponent,\r\n    SubjectEditComponent,\r\n    SubjectDeleteComponent,\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FlashMessagesModule,\r\n    NgxSpinnerModule,\r\n    NgbModule\r\n  ],\r\n  \r\n  providers: [ValidateService, AuthService, JwtHelperService, AuthGuard, NotAuthGuard, FlashMessagesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}