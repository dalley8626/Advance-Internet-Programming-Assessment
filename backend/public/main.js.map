{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/__components/subject/dashboard/dashboard.component.css","webpack:///./src/app/__components/subject/dashboard/dashboard.component.html","webpack:///./src/app/__components/subject/dashboard/dashboard.component.ts","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.css","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.html","webpack:///./src/app/__components/subject/subject-add-review/subject-add-review.component.ts","webpack:///./src/app/__components/subject/subject-add/subject-add.component.css","webpack:///./src/app/__components/subject/subject-add/subject-add.component.html","webpack:///./src/app/__components/subject/subject-add/subject-add.component.ts","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.css","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.html","webpack:///./src/app/__components/subject/subject-delete/subject-delete.component.ts","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.css","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.html","webpack:///./src/app/__components/subject/subject-edit/subject-edit.component.ts","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.css","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.html","webpack:///./src/app/__components/subject/subject-feed/subject-feed.component.ts","webpack:///./src/app/__components/ui/footer/footer.component.css","webpack:///./src/app/__components/ui/footer/footer.component.html","webpack:///./src/app/__components/ui/footer/footer.component.ts","webpack:///./src/app/__components/ui/header/header.component.css","webpack:///./src/app/__components/ui/header/header.component.html","webpack:///./src/app/__components/ui/header/header.component.ts","webpack:///./src/app/__components/ui/layout/layout.component.css","webpack:///./src/app/__components/ui/layout/layout.component.html","webpack:///./src/app/__components/ui/layout/layout.component.ts","webpack:///./src/app/__components/user/login/logging/logging.component.css","webpack:///./src/app/__components/user/login/logging/logging.component.html","webpack:///./src/app/__components/user/login/logging/logging.component.ts","webpack:///./src/app/__components/user/profile/profile.component.css","webpack:///./src/app/__components/user/profile/profile.component.html","webpack:///./src/app/__components/user/profile/profile.component.ts","webpack:///./src/app/__components/user/register/registering/registering.component.css","webpack:///./src/app/__components/user/register/registering/registering.component.html","webpack:///./src/app/__components/user/register/registering/registering.component.ts","webpack:///./src/app/__guards/auth.guard.ts","webpack:///./src/app/__guards/notAuth.guard.ts","webpack:///./src/app/__models/rating.ts","webpack:///./src/app/__models/subject.ts","webpack:///./src/app/__routes/app-routing.module.ts","webpack:///./src/app/__services/authService/auth.service.ts","webpack:///./src/app/__services/ratingService/rating.service.ts","webpack:///./src/app/__services/subjectService/subject.service.ts","webpack:///./src/app/__services/validateService/validate.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".checked {\\n    color: orange;\\n}\\n\\n.stars-outer\\n{\\n  position: relative;\\n  display: inline;\\n}\\n\\n.stars-inner\\n{\\n  position: absolute;;\\n  top:0;\\n  left:0;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  width: 0%;\\n}\\n\\n.stars-outer::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color: lightgrey;\\n}\\n\\n.stars-inner::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color:red;\\n}\\n\\n.card {\\n  margin:10px;\\n\\n}\\n\"","module.exports = \"<!-- Container -->\\n<div class=\\\"container\\\">\\n  <br>\\n\\n  <!-- Spinner -->\\n  <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\">\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\n  </ngx-spinner>\\n\\n  <!-- Search Bar -->\\n  <h3>Search For Subjects</h3>\\n  <div class=\\\"row\\\" style=\\\"margin-bottom: 10px;\\\">\\n    <form [formGroup]=\\\"form\\\" style=\\\"width:100%;\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <select class=\\\"float-left col-md-3\\\" style=\\\"height:38px;\\\" name=\\\"searchType\\\" formControlName=\\\"searchType\\\">\\n            <option value=\\\"\\\" disabled selected>Filter By</option>\\n            <option value=\\\"subjectNumber\\\">Subject Number</option>\\n            <option value=\\\"subjectName\\\">Subject Name</option>\\n          </select>\\n          <input style=\\\"width:100%;\\\" type=\\\"text\\\" class=\\\"form-control float-left col-md-8\\\" placeholder=\\\"Search subject...\\\"\\n            name=\\\"subjectDetail\\\" formControlName=\\\"subjectDetail\\\">\\n          <button class=\\\"btn btn-primary float-left\\\" type=\\\"button\\\" (click)=\\\"checkSubject()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <!-- Search Bar end-->\\n\\n  <!-- Search Results Start -->\\n  <div *ngIf=\\\"displaySearch\\\">\\n    <h3 class=\\\"text-success\\\"> {{searchedSubject.length}} Subjects Found </h3>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"card shadow text-center\\\" style=\\\"width: 15rem;\\\" *ngFor=\\\"let subject of searchedSubject\\\">\\n        <div class=\\\"card-header text-center\\\">\\n          <h5>{{ subject.subjectNumber }}</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <p class=\\\"card-text\\\">{{ subject.subjectName }}</p>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div>\\n            <div class=\\\"stars-outer\\\">\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\n              </div>\\n            </div>\\n            <br />\\n            {{subject.numberOfReview}} reviews\\n            <br>\\n            <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-primary\\\">Find Out More </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <h1 class=\\\"text-center text-danger\\\" *ngIf=\\\"doNotDisplaySearch\\\">No Results Found</h1>\\n  <!-- Search Results End -->\\n\\n  <!-- Highly Rated Subject -->\\n  <h3 style=\\\"margin-top: 50px;\\\">High Rated Subjects</h3>\\n\\n  <!-- Row -->\\n  <div class=\\\"row\\\">\\n\\n    <!-- Show Each Subject  -->\\n    <div class=\\\"card shadow text-center\\\" style=\\\"width: 15rem;\\\" *ngFor=\\\"let subject of subjects\\\">\\n\\n      <!-- Card Header -->\\n      <div class=\\\"card-header text-center\\\">\\n        <h5>{{ subject.subjectNumber }}</h5>\\n      </div>\\n\\n      <!-- Card Body -->\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"><span class=\\\"badge badge-pill badge-danger\\\">Hot!</span>\\n        </h5>\\n        <p class=\\\"card-text\\\">{{ subject.subjectName }}</p>\\n      </div>\\n\\n      <!-- Card Footer Start -->\\n      <div class=\\\"card-footer\\\">\\n        <div>\\n          <div class=\\\"stars-outer\\\">\\n            <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\n            </div>\\n          </div>\\n\\n          <!-- Show Ratings -->\\n          <br />\\n          {{subject.numberOfReview}} reviews\\n          <br>\\n          <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-primary\\\">Find Out More </button>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <br><br>\\n\\n  <!-- Most Recent Ratings  -->\\n  <h3>Most recent Ratings</h3>\\n\\n  <!-- Row -->\\n  <div class=\\\"row\\\">\\n\\n    <!-- Recent Ratings -->\\n    <div class=\\\"card shadow text-center\\\" style=\\\"width: 15rem;\\\" *ngFor=\\\"let rating of ratings\\\">\\n      <!-- Card Header -->\\n      <div class=\\\"card-header text-center\\\">\\n        <h5>{{ rating.username }}</h5>\\n      </div>\\n\\n      <!-- Card Body -->\\n      <div class=\\\"card-body\\\">\\n\\n        <h5 class=\\\"card-title\\\">\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"><span class=\\\"badge badge-pill badge-success\\\">Recent!</span>\\n        </h5>\\n\\n        <div class=\\\"stars-outer\\\">\\n          <div class=\\\"stars-inner\\\" [style.width]=\\\"rating.star*20 + '%'\\\">\\n          </div>\\n        </div>\\n\\n        <br>\\n\\n        <p class=\\\"card-text\\\">{{ rating.ratingDescription }}</p>\\n        <p style=\\\"clear:left;float:bottom;font-size:10px\\\">\\n          {{rating.created | date : \\\"d MMM, y h:mm:ss a\\\" : \\\"en-AU\\\"}}\\n        </p>\\n\\n      </div>\\n      <!-- footer start -->\\n      <div class=\\\"card-footer\\\">\\n        <button [routerLink]=\\\"['/subjects/detail/', rating.subjectID]\\\" class=\\\"btn btn-info\\\">Find Out More\\n        </button>\\n      </div>\\n      <!-- footer end-->\\n\\n    </div>\\n  </div>\\n  <!-- Row End -->\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from '../../../__services/subjectService/subject.service'; //subject service\nimport { Subject } from '../../../__models/subject'; //subject model\nimport { RatingService } from '../../../__services/ratingService/rating.service'; //rating service\nimport { Rating } from '../../../__models/rating'; //rating model\nimport { NgxSpinnerService } from 'ngx-spinner'; //spinner service\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; // modules for building forms\nimport { AuthService } from '../../../__services/authService/auth.service'; //authentication service\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\n\n\n//This component is the dashboard which displays search bar, high rated subject and recent ratings. \nexport class DashboardComponent implements OnInit {\n\n  //subjects variable to load the Subject Details\n  subjects: Subject[] = [];\n\n  //ratings variable to load the Rating Details\n  ratings: Rating[] = [];\n\n  //form instance stored in a variable\n  form;\n\n  //variable to store the result (subjects) of the search\n  searchedSubject: Subject[] = [];\n\n  //a boolean variable to hide and unhide a div which shows the result of the search bar\n  displaySearch;\n\n  //a boolean variable to hide or show the div that contains errors\n  doNotDisplaySearch;\n\n  //constructor\n  constructor(\n    private subjectService: SubjectService, // instance of Subject Service\n    private ratingService: RatingService, // instance of Rating Service\n    private spinner: NgxSpinnerService, // instance of Spinner service\n    private formBuilder: FormBuilder, // instance of form Builder (used to make Reactive Forms)\n    private authService: AuthService  // instance of authentication service\n  ) { }\n\n  //on initialization\n  ngOnInit() {\n    //creating a form\n    this.createForm();\n\n    //getting the highly rated subjects\n    this.getSubjects();\n\n    //getting the recent ratings\n    this.getRatings();\n  }\n\n  //function to load highly rated subject\n  getSubjects(): void {\n    //display spinner\n    this.spinner.show();\n\n    //calling the subject service to get the subject data\n    this.subjectService.getDashboardSubjects()\n      // Displaying the top 4 highy rated subject\n      .subscribe(result => this.subjects = result['subjects'].slice(0, 4));\n\n    //timeour for the spinner\n    setTimeout(() =>\n      //hide spinner\n      this.spinner.hide(), 1000\n    )\n  }\n  \n  //function to load the recent ratings\n  getRatings(): void {\n\n    //calling the rating service to get the rating data\n    this.ratingService.getDashboardRatings()\n      // Displaying 4 recent ratings\n      .subscribe(result => this.ratings = result['ratings'].slice(0, 4));\n  }\n\n  //function to create a reactive form\n  createForm() {\n    this.form = this.formBuilder.group({\n      searchType: [''], //searchType Field\n      subjectDetail: [''],  //subjectDetail Field\n    })\n  }\n\n  //function to search for the subject\n  checkSubject() {\n    //spinner display\n    this.spinner.show();\n    const subjectDetail = this.form.get('subjectDetail').value; //get data from the search bar\n    const searchType = this.form.get('searchType').value; //get data from the search type beside the search bar\n\n    //if the search type is subject number => search the database by subject Number\n    if (searchType === \"subjectNumber\" && subjectDetail.length != 0) {\n      this.authService.checkSubjectNumber(subjectDetail).subscribe(data => {\n        //if the search is a success\n        if (data.success) {\n          //if the result more than 0 data we display search results\n          if (data.subjects.length > 0) {\n            this.searchedSubject = data.subjects;\n            this.displaySearch = true;\n            this.doNotDisplaySearch = false;\n          }\n          //display No Result\n          else {\n            this.displaySearch = false;\n            this.doNotDisplaySearch = true;\n          }\n        }\n        //display No Result\n        else {\n          this.doNotDisplaySearch = true;\n          this.displaySearch = false;\n        }\n      })\n    }\n    //if the search type is subject Name => search the database by subject name\n    else if (searchType === \"subjectName\" && subjectDetail.length != 0) {\n      this.authService.checkSubjectName(subjectDetail).subscribe(data => {\n        //if the search is success\n        if (data.success) {\n          //if there are more than 1 items found\n          if (data.subjects.length > 0) {\n            this.searchedSubject = data.subjects;\n            this.displaySearch = true;\n            this.doNotDisplaySearch = false;\n          }\n          //display no result\n          else {\n            this.displaySearch = false;\n            this.doNotDisplaySearch = true;\n          }\n        }\n        //display no result\n        else {\n          this.displaySearch = false;\n          this.doNotDisplaySearch = true;\n        }\n      })\n    } \n    //error condition; if user tries to send wrong values; we display error without sending request to the server\n    else {\n      this.doNotDisplaySearch = true;\n      this.displaySearch = false;\n    }\n\n    //timeout for the spinner\n    setTimeout(() =>\n    this.spinner.hide(), 500\n  )\n  }\n\n}\n","module.exports = \"@import url(//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css);\\n\\nfieldset{ margin: 0; padding: 0; border: 2px; }\\n\\nlabel{ margin: 0; padding: 0;}\\n\\nbody{ margin: 20px; }\\n\\nh1 { font-size: 1.5em; margin: 10px; }\\n\\n/* */\\n\\n.card\\n{\\n    margin:10px;;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    min-width: 100px;\\n}\\n\\n.close {\\n  color: red; \\n  opacity: 1;\\n}\\n\\n.reviewComment\\n{\\n  margin-top:-20px;\\n}\\n\\n.reviewComment button\\n{\\n  margin-left: 3px;\\n}\\n\\n/****** Style Star Rating Widget *****/\\n\\n.rating {\\n  border: none;\\n  float: left;\\n}\\n\\n.rating > input { display: none; }\\n\\n.rating > label:before {\\n  margin: 5px;\\n  font-size: 1.25em;\\n  font-family: FontAwesome;\\n  display: inline-block;\\n  content: \\\"\\\\f005\\\";\\n}\\n\\n.rating > .half:before {\\n  content: \\\"\\\\f089\\\";\\n  position: absolute;\\n}\\n\\n.rating > label {\\n  color: #ddd;\\n  float: right;\\n}\\n\\n/***** CSS Magic to Highlight Stars on Hover *****/\\n\\n.rating > input:checked ~ label, /* show gold star when clicked */\\n.rating:not(:checked) > label:hover, /* hover current star */\\n.rating:not(:checked) > label:hover ~ label { color: #FFD700;  }\\n\\n/* hover previous stars in list */\\n\\n.rating > input:checked + label:hover, /* hover current star when changing rating */\\n.rating > input:checked ~ label:hover,\\n.rating > label:hover ~ input:checked ~ label, /* lighten current selection */\\n.rating > input:checked ~ label:hover ~ label { color: #FFED85;  }\\n\\n.stars-outer\\n{\\n  position: relative;\\n  display: inline;\\n}\\n\\n.stars-inner\\n{\\n  position: absolute;;\\n  top:0;\\n  left:0;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  width: 0%;\\n}\\n\\n.stars-outer::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color: lightgrey;\\n}\\n\\n.stars-inner::before {\\n  content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n  font-family: FontAwesome;\\n  font-weight: 900;\\n  color: #FFD700;\\n}\\n\\n.addRatingButton {\\n  margin-top:15px;\\n  border-radius: 20px;\\n}\\n\\n.subjectdetail{\\n  min-height: 100px;\\n}\\n\\n/*  Bars   */\\n\\nbody {\\n  font-family: Arial;\\n  margin: 0 auto; /* Center website */\\n  max-width: 800px; /* Max width */\\n  padding: 20px;\\n}\\n\\n.heading {\\n  font-size: 25px;\\n  margin-right: 25px;\\n}\\n\\n.fa {\\n  font-size: 25px;\\n}\\n\\n.checked {\\n  color: orange;\\n}\\n\\n/* Three column layout */\\n\\n.side {\\n  float: left;\\n  width: 15%;\\n  margin-top:10px;\\n}\\n\\n.middle {\\n  margin-top:10px;\\n  float: left;\\n  width: 70%;\\n}\\n\\n/* Place text to the right */\\n\\n.right {\\n  text-align: right;\\n}\\n\\n/* Clear floats after the columns */\\n\\n.row:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both;\\n}\\n\\n/* The bar container */\\n\\n.bar-container {\\n  width: 100%;\\n  background-color: #f1f1f1;\\n  text-align: center;\\n  color: white;\\n}\\n\\n/* Individual bars */\\n\\n.bar-5 {height: 18px; background-color: #4CAF50;}\\n\\n.bar-4 {height: 18px; background-color: #2196F3;}\\n\\n.bar-3 {height: 18px; background-color: #00bcd4;}\\n\\n.bar-2 {height: 18px; background-color: #ff9800;}\\n\\n.bar-1 {height: 18px; background-color: #f44336;}\\n\\n/* Responsive layout - make the columns stack on top of each other instead of next to each other */\\n\\n@media (max-width: 400px) {\\n  .side, .middle {\\n      width: 100%;\\n  }\\n  .right {\\n      display: none;\\n  }\\n}\\n\"","module.exports = \"\\n<ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\" height=\\\"10000px;\\\">\\n      <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\n</ngx-spinner>\\n\\n<div class=\\\"container\\\">\\n  <!-- User rating chart  -->\\n  <br />\\n  <!-- Display all the Subject content  -->\\n  <!-- Show all the reviews -->\\n  <div class=\\\"col-md-12 card-deck\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card shadow subjectdetail\\\" *ngIf=\\\"subject\\\">\\n        <h5 class=\\\"card-header\\\">{{subject.subjectNumber}} {{subject.subjectName}}</h5>\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title text-justify\\\" style=\\\"font-size: 14px;\\\">{{subject.description}}</h5>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button *ngIf=\\\"user.usertype === 'admin'\\\" [routerLink]=\\\"['/subjects/edit', subject._id]\\\" class=\\\"btn btn-danger float-right btn-sm\\\">Edit</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Something to work on start -->\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card shadow subjectdetail\\\" *ngIf=\\\"subject\\\">\\n        <div class=\\\"card-header\\\">\\n          <div style=\\\"top:15px;\\\">\\n            <h5>\\n              <small class=\\\"float-left\\\"> Average User Rating of {{averageRating}}&emsp;</small>\\n            </h5>\\n          </div>\\n          <div class=\\\"stars-outer\\\">\\n            <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"card-body\\\">\\n\\n          <!-- User Ratings  -->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"side\\\">\\n              <div>5 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-5\\\" [style.width]='fiveRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{fiveRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>4 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-4\\\" [style.width]='fourRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>{{fourRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>3 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-3\\\" [style.width]='threeRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{threeRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>2 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-2\\\" [style.width]='twoRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{twoRating}}\\n              </div>\\n            </div>\\n            <div class=\\\"side\\\">\\n              <div>1 star</div>\\n            </div>\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"bar-container\\\">\\n                <div class=\\\"bar-1\\\" [style.width]='oneRatingPercentage'></div>\\n              </div>\\n            </div>\\n            <div class=\\\"side right\\\">\\n              <div>\\n                {{oneRating}}\\n              </div>\\n            </div>\\n          </div>\\n          <!-- User rating ends -->\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n    <br />\\n\\n<!-- Modal -->\\n    <ng-template #content let-modal>\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <label for=\\\"dateOfBirth\\\">Are you sure you want to delete this rating?</label>\\n          \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"modal.close('Cancel click')\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(deleteRating); modal.close('Save click');\\\">Delete</button>\\n        </div>\\n      </ng-template>\\n      \\n      <hr>\\n      \\n      <pre>{{closeResult}}</pre>\\n\\n    <!-- Rating Dialog -->\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <div style=\\\"margin-left: auto; margin-right: auto;\\\">\\n            <fieldset class=\\\"rating ml-auto\\\" style=\\\"zoom:2;\\\">\\n              <input type=\\\"radio\\\" id=\\\"star5\\\" name=\\\"rating\\\" value=\\\"5\\\" (click)=\\\"updateStar(5)\\\" />\\n              <label class=\\\"full\\\" for=\\\"star5\\\" title=\\\"Awesome - 5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star4half\\\" name=\\\"rating\\\" value=\\\"4.5\\\" (click)=\\\"updateStar(4.5)\\\" />\\n              <label class=\\\"half\\\" for=\\\"star4half\\\" title=\\\"Pretty good - 4.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star4\\\" name=\\\"rating\\\" value=\\\"4\\\" (click)=\\\"updateStar(4)\\\" />\\n              <label class=\\\"full\\\" for=\\\"star4\\\" title=\\\"Pretty good - 4 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star3half\\\" name=\\\"rating\\\" value=\\\"3.5\\\" (click)=\\\"updateStar(3.5)\\\" />\\n              <label class=\\\"half\\\" for=\\\"star3half\\\" title=\\\"Meh - 3.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star3\\\" name=\\\"rating\\\" value=\\\"3\\\" (click)=\\\"updateStar(3)\\\" />\\n              <label class=\\\"full\\\" for=\\\"star3\\\" title=\\\"Meh - 3 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star2half\\\" name=\\\"rating\\\" value=\\\"2.5\\\" (click)=\\\"updateStar(2.5)\\\" />\\n              <label class=\\\"half\\\" for=\\\"star2half\\\" title=\\\"Kinda bad - 2.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star2\\\" name=\\\"rating\\\" value=\\\"2\\\" (click)=\\\"updateStar(2)\\\" />\\n              <label class=\\\"full\\\" for=\\\"star2\\\" title=\\\"Kinda bad - 2 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star1half\\\" name=\\\"rating\\\" value=\\\"1.5\\\" (click)=\\\"updateStar(1.5)\\\" />\\n              <label class=\\\"half\\\" for=\\\"star1half\\\" title=\\\"Meh - 1.5 stars\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"star1\\\" name=\\\"rating\\\" value=\\\"1\\\" (click)=\\\"updateStar(1)\\\" />\\n              <label class=\\\"full\\\" for=\\\"star1\\\" title=\\\"Sucks big time - 1 star\\\"></label>\\n              <input type=\\\"radio\\\" id=\\\"starhalf\\\" name=\\\"rating\\\" value=\\\"0.5\\\" (click)=\\\"updateStar(0.5)\\\" />\\n              <label class=\\\"half\\\" for=\\\"starhalf\\\" title=\\\"Sucks big time - 0.5 stars\\\"></label>\\n            </fieldset>\\n          </div>\\n          <textarea [disabled]=\\\"hasRated === true\\\" name=\\\"ratingDescription\\\" [(ngModel)]=\\\"rating.ratingDescription\\\"\\n            class=\\\"form-control\\\" id=\\\"ratingDescription\\\" [placeholder]=\\\"hasRatedText\\\"></textarea>\\n\\n          <button [disabled]=\\\"hasRated === true\\\" class=\\\"btn btn-primary w-100 addRatingButton\\\" type=\\\"submit\\\" (click)=\\\"addRating();\\\">Add\\n            Rating\\n          </button>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n    <!-- Review -->\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card shadow text-center\\\" *ngFor=\\\"let rating of ratings\\\">\\n        <div *ngIf=\\\"rating.editFlag == false\\\">\\n\\n          <div class=\\\"card-body\\\">\\n\\n            <textarea class=\\\"form-control w-100\\\" [disabled]=\\\"true\\\">{{rating.ratingDescription}}</textarea>\\n\\n            <div class=\\\"stars-outer float-left\\\">\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"(rating.star)*20 + '%'\\\"></div>\\n            </div>\\n            <p style=\\\"clear:left;float:left;\\\">\\n              {{rating.username}}\\n            </p>\\n            <p style=\\\"clear:left;float:left;\\\">\\n              written: {{rating.created | date : \\\"d MMM, y h:mm:ss a\\\" : \\\"en-AU\\\"}}\\n            </p>\\n            <div class=\\\"reviewComment float-right\\\" *ngIf=\\\"rating.userID == user.id\\\">\\n              <button class=\\\"btn btn-danger\\\" title=\\\"delete rating\\\" (click)=\\\"open(content, rating)\\\">Delete\\n              </button>\\n              <button class=\\\"btn btn-primary\\\" title=\\\"edit rating\\\" (click)=\\\"edit(rating)\\\">Edit\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"rating.editFlag == true\\\">\\n\\n          <form>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\">User Name</label>\\n              <input name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\"\\n                disabled>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"ratingDescription1\\\">Rating Description</label>\\n              <textarea name=\\\"ratingDescription1\\\" [(ngModel)]=\\\"rating.ratingDescription\\\" class=\\\"form-control\\\" id=\\\"ratingDescription1\\\"\\n                placeholder=\\\"Enter Rating Description\\\"></textarea>\\n            </div>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)='editRating(rating)'>Save</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Rating } from '../../../__models/rating'; // Rating Model\nimport { FormBuilder, Validators } from '@angular/forms'; // FormBUilder for reactive form\nimport { SubjectService } from '../../../__services/subjectService/subject.service'; //Subject service\nimport { ActivatedRoute, Router } from '@angular/router'; //Activated Route to get URL; router for navigation purpose\nimport { DatePipe, Location } from '@angular/common';\nimport { RatingService } from '../../../__services/ratingService/rating.service'; // Rating Service\nimport { Subject } from '../../../__models/subject';  //Subject Model\nimport { FlashMessagesService } from 'angular2-flash-messages'; //Flash Message Service\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap'; // Modal module\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\nimport { NgxSpinnerService } from 'ngx-spinner'; // Spinner module (loading animation)\n\n@Component({\n  selector: 'app-subject-add-review',\n  templateUrl: './subject-add-review.component.html',\n  styleUrls: ['./subject-add-review.component.css']\n})\n\n//This class provides with the details of the subject\n//As well as enables user to add user rating or view all the user ratings\nexport class SubjectAddReviewComponent implements OnInit {\n\n  //Attributes Start ====================================================\n  //=====================================================================\n\n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\n  //false means user can edit or click\n  //true means user cannot\n  processing = false;\n\n  //variable to store the current URL\n  currentUrl;\n\n  //form instance stored in a variable \n  form;\n\n  closeResult: string;\n\n  subjectPosts;\n\n  //variable to display or not display the edit form (This option is only accessible by \"admin\" users)\n  loadEditForm = true;\n\n  @Input() subject: Subject;\n\n  //variable to store rating\n  public rating: Rating;\n\n  //variable to store array of ratings\n  ratings: Rating[];\n\n  //variable to store the date\n  pipe = new DatePipe('en-US');\n\n  // Variables to store the number of users that rated the subject\n  //for example: there is one star rating by 5 user; the oneRating will be equal to 5 \n  oneRating: number = 0;\n  twoRating: number = 0;\n  threeRating: number = 0;\n  fourRating: number = 0;\n  fiveRating: number = 0;\n\n  //variables to store the percentage that will define the length of the bar\n  oneRatingPercentage = '0';\n  twoRatingPercentage = '0';\n  threeRatingPercentage = '0';\n  fourRatingPercentage = '0';\n  fiveRatingPercentage = '0';\n\n  //variable to store the average rating of a subejct\n  averageRating;\n\n  //variable to store the user\n  user;\n\n  //variable to either enable or disable the user from rating\n  hasRated: boolean;\n  //if the user has already rated; the has Rated Text variable value is displayed\n  hasRatedText = 'Write a Review';\n\n  //variable to store the Rating that is to be deleted\n  deleteRating: Rating;\n\n  //Attributes End ====================================================\n  //=====================================================================\n\n\n  constructor(\n    private formBuilder: FormBuilder, // instance of form builder\n    public subjectService: SubjectService, // instance of subject service\n    private activatedRoute: ActivatedRoute, // instance of activated Route\n    private router: Router, // instance of router\n    private location: Location, // instance of location\n    private flashMessageService: FlashMessagesService, // instance of flash service\n    private ratingService: RatingService, // instance of rating service\n    private modalService: NgbModal, // instance of modal service\n    private spinner: NgxSpinnerService // instance of spinner service\n  ) {\n\n    //initializing a new rating to add\n    this.rating = new Rating();\n\n    //initializing a new rating to delete\n    this.deleteRating = new Rating();\n\n    //creating a form\n    this.createNewSubjectForm();\n\n    //getting the user information from local storage\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n  ngOnInit() {\n    //getting the details of the subejct\n    this.getSingleSubject();\n  }\n\n  //Open the confirmation dialog\n  open(content, rating) {\n    this.deleteRating = rating;\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      console.log(`Closed with: ${result}`);\n    }, (reason) => {\n      console.log(`Dismissed ${this.getDismissReason(reason)}`);\n    });\n  }\n\n  //Close the confirmation Dialog with ESC \n  private getDismissReason(reason: any): void {\n    if (reason === ModalDismissReasons.ESC) {\n      console.log('by pressing ESC');\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      console.log('by clicking on a backdrop');\n    } else {\n      console.log(`with: ${reason}`);\n    }\n  }\n\n  //function to get the details of the subject\n  //the url consists of the id of the subject which is used to make request to the database\n  getSingleSubject() {\n    this.spinner.show();\n    //taking the subject Id from the url and storing in currentUrl varialbe\n    this.currentUrl = this.activatedRoute.snapshot.params;\n\n    this.subjectService.getSingleSubject(this.currentUrl.id).subscribe(data => {\n      //if error\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = 'Subject Not found';\n      }\n      //if success\n      else {\n        //storing the subject\n        this.subject = data.subject;\n        //disabling the visibility of edit form\n        this.loadEditForm = false;\n\n        //get all the ratings of that particular subject\n        this.getRatingsbySubjectID();\n\n        //\n        this.ratingService.rating_Observable.subscribe(res => {\n          this.clearRatingStar();\n          this.getRatingsbySubjectID();\n        });\n      }\n    });\n\n    //spinner hide\n    setTimeout(() =>\n      this.spinner.hide(), 1000\n    )\n  }\n\n  // function for validation of subject Number\n  subjectNumberValidation(controls) {\n    const regExp = new RegExp(/^[0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNumberValidation': true };\n    }\n  }\n\n  //function for validation of subject Name\n  subjectNameValidation(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNameValidation': true };\n    }\n  }\n\n  //function to create a new form using form builder\n  createNewSubjectForm() {\n    this.form = this.formBuilder.group({\n      //subject Number field\n      subjectNumber: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(5),\n        Validators.minLength(5),\n        this.subjectNumberValidation\n      ])],\n      //subject Name field\n      subjectName: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(100),\n        Validators.minLength(3),\n        this.subjectNameValidation\n      ])],\n      //description field\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(25000),\n        Validators.minLength(8),\n      ])],\n    });\n  }\n\n  //function to update the star\n  updateStar(star) {\n    this.rating.star = star;\n  }\n\n  //function to go back\n  goBack() {\n    this.location.back();\n  }\n\n  //function to get the rating according to the subject id\n  getRatingsbySubjectID() {\n    this.ratingService.getRatingsbySubjectID(this.subject._id)\n      .subscribe(result => {\n        this.ratings = result['data'];\n        this.getRatingPercentages(this.ratings);\n\n      });\n  }\n\n  //function to get the ratings percentage\n  getRatingPercentages(ratings: Rating[]) {\n    this.ratings.forEach(element => {\n      //adding to the respective variable upon user rating\n      if (element.star === 5 || element.star === 4.5) {\n        this.fiveRating = this.fiveRating + 1;\n      } else if (element.star === 4 || element.star === 3.5) {\n        this.fourRating = this.fourRating + 1;\n      } else if (element.star === 3 || element.star === 2.5) {\n        this.threeRating = this.threeRating + 1;\n      } else if (element.star === 2 || element.star === 1.5) {\n        this.twoRating = this.twoRating + 1;\n      } else if (element.star === 1 || element.star === 0.5 || element.star === 0) {\n        this.oneRating = this.oneRating + 1;\n      }\n      element.editFlag = false;\n      // Check if there is any rating that has been rated by current user;\n      if (element.username === this.user.username) {\n        this.hasRated = true;\n        this.hasRatedText = 'You have already rated this subject.';\n      }\n    });\n\n    //Calculating the rating percentage and storing them in the variable defined above\n    //percentage of 5 ratings\n    this.fiveRatingPercentage = `${Math.round(((this.fiveRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n    //percentage of 4 ratings\n    this.fourRatingPercentage = `${Math.round(((this.fourRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n    //percentage of 3 ratings\n    this.threeRatingPercentage = `${Math.round(((this.threeRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n    //percentage of 2 ratings\n    this.twoRatingPercentage = `${Math.round(((this.twoRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n    //percentage of 1 ratings\n    this.oneRatingPercentage = `${Math.round(((this.oneRating / this.subject.numberOfReview) * 100 / 10) * 10)}%`;\n    //average rating\n    this.averageRating = Math.round(this.subject.percentageRating * 5) / 100;\n  }\n\n  //function to add the rating to the subejct and save to the database\n  addRating(): void {\n    //display the spinner\n    this.spinner.show();\n\n    if (this.rating.ratingDescription) {\n      this.rating.subjectID = this.subject._id;\n      this.rating.userID = this.user.id;\n      this.rating.username = this.user.username;\n      this.rating.created = Date();\n      \n      if (this.subject.numberOfReview && this.subject.percentageRating) {\n        this.subject.numberOfReview = this.subject.numberOfReview + 1;\n        this.subject.percentageRating =\n          (this.subject.percentageRating * (this.subject.numberOfReview - 1) + this.rating.star * 20) / this.subject.numberOfReview;\n      } else {\n        this.subject.numberOfReview = 1;\n        this.subject.percentageRating = this.rating.star * 20;\n      }\n      this.subjectService.editSubject(this.subject).subscribe(res => {\n\n        if (res['success'] === true) {\n          this.subjectService.notifySubject();\n        } else {\n          this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\n        }\n      }, error => {\n        this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\n      });\n\n      this.ratingService.addRating(this.rating).subscribe(res => {\n        console.log('response is ', res);\n\n        if (res['status'] === 'success') {\n          this.ratingService.notifyRating();\n          this.flashMessageService.show('Rating added', { cssClass: 'alert-success', timeout: 1000 });\n          this.rating.ratingDescription = '';\n          this.hasRated = false;\n        } else {\n\n          this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\n        }\n      }, error => {\n        this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\n      });\n    } else {\n      this.flashMessageService.show('Rating Description Required', { cssClass: 'alert-danger', timeout: 1000 });\n    }\n    setTimeout(() => {\n      this.spinner.hide();\n    }, 1000)\n  }\n\n  //function to either display or hide the edit form\n  edit(rating: Rating): void {\n    rating.editFlag = true;\n  }\n\n  //function to edit the rating\n  editRating(rating: Rating): void {\n    this.ratingService.updateRating(rating).subscribe(res => {\n      if (res['status'] === 'success') {\n        this.ratingService.notifyRating();\n        rating.editFlag = false;\n        this.message = 'Rating edited.';\n      } else {\n        this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\n      }\n    });\n  }\n\n  //function to delte the rating\n  //we are making it asyncronous so as to update the subject detail\n  async delete(rating: Rating) {\n    this.ratings = this.ratings.filter(r => r !== rating);\n    if (this.subject.numberOfReview > 1) {\n      this.subject.numberOfReview = await this.subject.numberOfReview - 1;\n      this.subject.percentageRating =\n        await (this.subject.percentageRating * (this.subject.numberOfReview + 1) - (this.rating.star * 20)) / this.subject.numberOfReview;\n    } else {\n      this.subject.numberOfReview = 0;\n      this.subject.percentageRating = 0;\n    }\n\n    this.ratingService.deleteRating(rating).subscribe(res => {\n      console.log('response is ', res);\n      if (res['status'] === 'success') {\n        this.ratingService.notifyRating();\n        this.flashMessageService.show('Rating deleted', { cssClass: 'alert-success', timeout: 1000 });\n        this.hasRated = false;\n        this.hasRatedText = 'Write a Review.';\n\n      } else {\n        this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\n      }\n    }, error => {\n      this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\n    });\n    this.subjectService.editSubject(this.subject).subscribe(res => {\n      if (res['success'] === true) {\n        this.subjectService.notifySubject();\n      } else {\n        this.flashMessageService.show('Attempt failed, try again.', { cssClass: 'alert-danger', timeout: 1000 });\n      }\n    }, error => {\n      this.flashMessageService.show('Error: ' + error, { cssClass: 'alert-danger', timeout: 1000 });\n    });\n  }\n\n  //function to clear the rating\n  clearRatingStar(): void {\n    this.fiveRating = 0;\n    this.fourRating = 0;\n    this.threeRating = 0;\n    this.twoRating = 0;\n    this.oneRating = 0;\n  }\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n    top: 10px;\\n    margin: auto;\\n    max-width: 700px;\\n}\\n.subject-name\\n{\\n    background-color: #03a9f4 !important;\\n}\\n.card\\n{\\n    margin:auto;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    max-width: 700px;\\n}\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n.card .inputBox textarea:focus ~ label,\\n.card .inputBox textarea:valid ~ label\\n{\\n    top: -28px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n}\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n.policy\\n{\\n    font-size: 12px;\\n}\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n.buttons button\\n{\\n    margin:10px;\\n}\\n\\n\"","module.exports = \" <div class=\\\"container\\\">\\n <!-- New Subject Form -->\\n <form [formGroup]=\\\"form\\\" (submit)=\\\"onSubjectSubmit()\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card registration\\\">\\n\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Add Subject</h1>\\n\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- Subject Number -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.subjectNumber.errors && form.controls.subjectNumber.dirty), 'has-success': !form.controls.subjectNumber.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"subjectNumber\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectNumber\\\" />\\n          <label>Subject Number</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.required && form.controls.subjectNumber.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectNumber.errors?.minlength || form.controls.subjectNumber.errors?.maxlength) && form.controls.subjectNumber.dirty\\\">\\n              Must be 5 numbers\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.subjectNumberValidation && form.controls.subjectNumber.dirty && (form.controls.subjectNumber.value.length != 0)\\\">Invalid\\n              Subject Number\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Subject Name -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.subjectName.errors && form.controls.subjectName.dirty), 'has-success': !form.controls.subjectName.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"subjectName\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectName\\\" />\\n          <label>Subject Name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.required && form.controls.subjectName.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectName.errors?.minlength || form.controls.subjectName.errors?.maxlength) && form.controls.subjectName.dirty\\\">*Min\\n              : 3, Max characters: 100\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.subjectNameValidation && form.controls.subjectName.dirty && form.controls.subjectName.value.length != 0\\\">Invalid\\n              Subject Name, No special characters except . , - and '\\n            </p>\\n          </div>\\n        </div>\\n        <br/>\\n        <!-- Subject Description -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.description.errors && form.controls.description.dirty), 'has-success': !form.controls.description.errors}\\\">\\n          <textarea class=\\\"form-control\\\" style=\\\"min-height:150px;\\\" name=\\\"description\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"description\\\"></textarea>\\n          <label style=\\\"left:10px;\\\">Write the Description of the Subject</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block-textarea\\\">\\n            <!-- Required error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.description.errors?.required && form.controls.description.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.description.errors?.minlength || form.controls.description.errors?.maxlength) && form.controls.description.dirty\\\">*Minimum\\n              characters: 8, Maximum characters: 25000\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"buttons\\\">\\n            <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Add Subject</button>\\n            <button [routerLink]=\\\"['/subjects']\\\" style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\" name=\\\"\\\">Go Back</button>    \\n        </div>\\n        \\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms'; // modules for building reactive form\nimport { SubjectService } from './../../../__services/subjectService/subject.service'; // subject service\nimport { AuthService } from './../../../__services/authService/auth.service'; // authentication service\nimport { Router } from '@angular/router'; // router module for navigation\n\n@Component({\n  selector: 'app-subject-add',\n  templateUrl: './subject-add.component.html',\n  styleUrls: ['./subject-add.component.css']\n})\n\n//This class can only be accessed by \"admin\" users\n//Functionality of this class is to add the subjects and its details\nexport class SubjectAddComponent implements OnInit {\n\n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\n  //false means user can edit or click\n  //true means user cannot\n  processing = false;\n\n  //form instance stored in a variable \n  form;\n\n  //user instance\n  user;\n  \n  //subject posts\n  subjectPosts;\n\n  \n  constructor(\n    private formBuilder : FormBuilder, // instance of formbuilder for reactive forms\n    private subjectService: SubjectService, // instance of subject service\n    private authService: AuthService, // instance of authentication service\n    private router: Router  // instance of router module\n  ) \n  {\n    //initializing the constructor with a form\n    this.createNewSubjectForm();\n  }\n\n  ngOnInit() {\n  }\n\n  //Adding the new Subject\n  onSubjectSubmit(){\n    //disabling the user to edit the form\n    this.processing = true;\n\n    //creating a new subject\n    const subject = {\n      subjectNumber: this.form.get('subjectNumber').value,\n      subjectName: this.form.get('subjectName').value,\n      description: this.form.get('description').value\n    }\n\n    //calling the subejct service to create a new subejct\n    this.subjectService.newSubject(subject).subscribe(data => {\n      \n      //if the operation is not successful\n      if(!data.success) {\n\n        //displaying the error feedback\n        this.messageClass= 'alert alert-danger small';\n        this.message = data.message;\n\n        //enabling the form\n        this.processing = false;\n      } \n      //if successful\n      else {\n\n        //displaying the success feedback\n        this.messageClass = 'alert alert-success small'\n        this.message = data.message;\n\n        setTimeout(() => {\n          //enabling the form\n          this.processing = false;\n\n          //navigate back to all the subjects\n          this.router.navigate(['/subjects']);\n\n          //reseting the form\n          this.form.reset();\n        }, 2000);\n      }\n    });\n    \n  }\n\n  //function for subject number validation\n  subjectNumberValidation(controls){\n    const regExp = new RegExp(/^[0-9]+$/); // regex for only numbers\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNumberValidation' : true }\n    }\n  }\n\n  //function for subject name validation\n  subjectNameValidation(controls){\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i); //regex for proper names\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNameValidation' : true }\n    }\n  }\n\n  //function for creating a form\n  createNewSubjectForm() {\n    this.form = this.formBuilder.group({\n      //subject Number field\n      subjectNumber: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(5),\n        Validators.minLength(5),\n        this.subjectNumberValidation // validation defined above\n      ])],\n      //subject name field\n      subjectName: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(100),\n        Validators.minLength(3),\n        this.subjectNameValidation // validation defined above\n      ])],\n      //description field\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(25000),\n        Validators.minLength(8),\n      ])],\n    })\n  }\n\n  //function to revert and go back\n  goBack()\n  {\n    window.location.reload();\n  }\n\n}\n","module.exports = \".card {\\n    top: 100px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\\n.buttons-position\\n{\\n    top: 100px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.buttons-position button\\n{\\n    margin: 5px;\\n    width: 46%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Message Display -->\\n  <br />\\n  <div class=\\\"row show-hide-message\\\">\\n    <div [ngClass]=\\\"messageClass\\\" style=\\\"width:100%;\\\" class=\\\"text-center\\\">\\n      {{ message }}\\n    </div>\\n  </div>\\n\\n  <!-- New Subject Form -->\\n  <div class=\\\"shadow mb-5 bg-white rounded card registration\\\">\\n\\n    <div class=\\\"card-header\\\">\\n        <h3 class=\\\"text-center\\\">Confirmation</h3>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      \\n\\n      <!-- Subject Number -->\\n      <div class=\\\"inputBox\\\">\\n        <p>Are you sure?</p>\\n        <div class=\\\"buttons-position\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteSubject()\\\">Yes</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goBack()\\\">No</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from './../../../__services/subjectService/subject.service'; // subject service\nimport { Location } from '@angular/common'; //location module\nimport { Router, ActivatedRoute } from '@angular/router'; // router module\n\n@Component({\n  selector: 'app-subject-delete',\n  templateUrl: './subject-delete.component.html',\n  styleUrls: ['./subject-delete.component.css']\n})\nexport class SubjectDeleteComponent implements OnInit {\n\n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to store the subject that is to be deleted\n  subject;\n\n  //variable to store boolean that represents if the subject is present in the database\n  foundSubject = false;\n\n  //function to store the current URL\n  currentUrl;\n\n  constructor(\n    private subjectService: SubjectService, // instance of the subejct service\n    private location: Location, // instance of the location service\n    private router: Router, // instance of the router service\n    private activatedRoute: ActivatedRoute  // instance of the activated route\n  ) { }\n\n  ngOnInit() {\n    //getting the current URL\n    this.currentUrl = this.activatedRoute.snapshot.params;\n\n    //confirming if the url contains any id\n    if(!this.currentUrl.id)\n    {\n      //display message\n      this.messageClass = 'alert-danger';\n      this.message = 'No id provided';\n    } \n      //flag to respresent success\n    else {\n      this.foundSubject = true;\n    }\n  }\n\n  //function to delete the subject\n  deleteSubject() {\n    this.subjectService.deleteSubject(this.currentUrl.id).subscribe(data => {\n      //failure\n      if(!data.success){\n        //failure message\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n      }\n      //success \n      else {\n        //success message\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n\n        //timeout and navigate back\n        setTimeout(()=>{\n          this.router.navigate(['/subjects']);\n        },2000)\n      }\n    })\n  }\n\n  //go back to the previous locaiton\n  goBack(){\n    this.location.back();\n  }\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n    top: 10px;\\n    margin: auto;\\n    max-width: 700px;\\n}\\n.subject-name\\n{\\n    background-color: #03a9f4 !important;\\n}\\n.card\\n{\\n    margin:auto;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    max-width: 700px;\\n}\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n.card .inputBox\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n.show-hide-message\\n{\\n    width: 100%;\\n    margin: 10px;\\n}\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n.card .inputBox textarea:focus ~ label,\\n.card .inputBox textarea:valid ~ label\\n{\\n    top: -28px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n}\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n.policy\\n{\\n    font-size: 12px;\\n}\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n.buttons button\\n{\\n    margin:10px;\\n}\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Message Display -->\\n  <br/>\\n  <div class=\\\"row show-hide-message\\\" >\\n      <div [ngClass]=\\\"messageClass\\\" style=\\\"width:100%;\\\" class=\\\"text-center\\\">\\n        {{ message }}\\n      </div>\\n    </div>\\n\\n    <!-- New Subject Form -->\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"updateSubjectSubmit()\\\" *ngIf=\\\"!loadEditForm\\\" >\\n       <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card registration\\\">\\n\\n         <div class=\\\"card-body\\\">\\n           <h1 class=\\\"text-center\\\">Edit Subject</h1>\\n   \\n           <!-- Subject Number -->\\n           <div class=\\\"inputBox\\\">\\n             <input type=\\\"text\\\" name=\\\"subjectNumber\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectNumber\\\" [(ngModel)]=\\\"subject.subjectNumber\\\"/>\\n             <label>Subject Number</label>\\n             <!-- Error Block -->\\n             <div class=\\\"help-block\\\">\\n               <!-- Required Error -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.required && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine)\\\">*This\\n                 field is Required</p>\\n               <!-- Minimum and Maximum length of data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectNumber.errors?.minlength || form.controls.subjectNumber.errors?.maxlength) && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine)\\\">\\n                 Must be 5 numbers\\n               </p>\\n               <!-- Invalid data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectNumber.errors?.subjectNumberValidation && (form.controls.subjectNumber.dirty || form.controls.subjectNumber.pristine) && (form.controls.subjectNumber.value.length != 0)\\\">Invalid\\n                 Subject Number\\n               </p>\\n             </div>\\n           </div>\\n   \\n           <!-- Subject Name -->\\n           <div class=\\\"inputBox\\\">\\n             <input type=\\\"text\\\" name=\\\"subjectName\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"subjectName\\\" [(ngModel)]=\\\"subject.subjectName\\\"/>\\n             <label>Subject Name</label>\\n             <!-- Error Block -->\\n             <div class=\\\"help-block\\\">\\n               <!-- Required Error -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.required && form.controls.subjectName.dirty\\\">*This\\n                 field is Required</p>\\n               <!-- Minimum and Maximum length of data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.subjectName.errors?.minlength || form.controls.subjectName.errors?.maxlength) && form.controls.subjectName.dirty\\\">*Min\\n                 : 3, Max characters: 100\\n               </p>\\n               <!-- Invalid data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.subjectName.errors?.subjectNameValidation && form.controls.subjectName.dirty && form.controls.subjectName.value.length != 0\\\">Invalid\\n                 Subject Name, No special characters except . , - and '\\n               </p>\\n             </div>\\n           </div>\\n           <br/>\\n           <!-- Subject Description -->\\n           <div class=\\\"inputBox\\\">\\n             <textarea class=\\\"form-control\\\" style=\\\"min-height:150px;\\\" name=\\\"description\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"description\\\" [(ngModel)]=\\\"subject.description\\\"></textarea>\\n             <label style=\\\"left:10px;\\\">Write the Description of the Subject</label>\\n             <!-- Error Block -->\\n             <div class=\\\"help-block-textarea\\\">\\n               <!-- Required error -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.description.errors?.required && form.controls.description.dirty\\\">*This\\n                 field is Required</p>\\n               <!-- Minimum and Maximum length of data error  -->\\n               <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.description.errors?.minlength || form.controls.description.errors?.maxlength) && form.controls.description.dirty\\\">*Minimum\\n                 characters: 8, Maximum characters: 25000\\n               </p>\\n             </div>\\n             <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"descriptionMessage && !form.controls.description.errors?.validatedescriptions\\\">{{descriptionMessage}}</p>\\n           </div>\\n   \\n           <div class=\\\"buttons\\\">\\n               <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Save Changes</button>\\n               <button style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-warning\\\" type=\\\"button\\\" name=\\\"\\\" (click)=\\\"goBack()\\\">Go Back</button>    \\n               <button [routerLink]=\\\"['/subjects/delete/', subject._id]\\\" style=\\\"float:right\\\" type=\\\"submit\\\" class=\\\"btn btn-danger\\\" name=\\\"\\\">Delete Subject</button>\\n            </div>\\n           \\n         </div>\\n       </div>\\n     </form>\\n\\n   </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms'; //required form modules\n\n\nimport { SubjectService } from './../../../__services/subjectService/subject.service'; // subject service\nimport { AuthService } from './../../../__services/authService/auth.service';\n\nimport {Subject} from '../../../__models/subject';\nimport {Rating} from '../../../__models/rating';\nimport {RatingService} from '../../../__services/ratingService/rating.service';\n\nimport { Router, ActivatedRoute } from '@angular/router'; // router module\nimport { Location } from '@angular/common'; //location module\n\n@Component({\n  selector: 'app-subject-edit',\n  templateUrl: './subject-edit.component.html',\n  styleUrls: ['./subject-edit.component.css']\n})\nexport class SubjectEditComponent implements OnInit {\n\n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\n  //false means user can edit or click\n  //true means user cannot\n  processing = false;\n\n  //function to store the current URL\n  currentUrl;\n\n  //form instance stored in a variable \n  form;\n\n  //user variable to store user model\n  user;\n\n  subjectPosts;\n\n  //edit form\n  loadEditForm = true;\n\n  //subject variable to store the subject model instance\n  subject;\n\n  constructor(\n    private formBuilder : FormBuilder,  //instance of form builder\n    private subjectService: SubjectService, //instance of subject service\n    private activatedRoute: ActivatedRoute, // instance of activated route\n    private router: Router, // instance of router\n    private location: Location  //instance of location\n  )\n  {\n    //creating a edit form\n    this.createNewSubjectForm();\n  }\n\n  ngOnInit() {\n    //getting the url\n    this.currentUrl = this.activatedRoute.snapshot.params;\n\n    //sending request to the server with the id retrieved from the url\n    this.subjectService.getSingleSubject(this.currentUrl.id).subscribe(data => {\n      //failure\n      if(!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = \"Subject Not found\";\n      } \n      //success\n      else {\n        this.subject = data.subject;\n        this.loadEditForm = false;\n      }\n    })\n  }\n\n  // validation for Subject Number\n  subjectNumberValidation(controls){\n    const regExp = new RegExp(/^[0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNumberValidation' : true }\n    }\n  }\n\n  // validation for Subject Name\n  subjectNameValidation(controls){\n    const regExp = new RegExp(/^[a-zA-Z0-9 ,.'-]+$/i);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'subjectNameValidation' : true }\n    }\n  }\n\n  // creating the edit form\n  createNewSubjectForm() {\n    this.form = this.formBuilder.group({\n      //subject Number field\n      subjectNumber: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(5),\n        Validators.minLength(5),\n        this.subjectNumberValidation\n      ])],\n      // Subejct Name field\n      subjectName: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(100),\n        Validators.minLength(3),\n        this.subjectNameValidation\n      ])],\n      // description field\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(25000),\n        Validators.minLength(8),\n      ])],\n    })\n  }\n\n  //function to go back to previous locaion\n  goBack()\n  {\n    this.location.back();\n  }\n\n  //function to update the subject (or edit)\n  updateSubjectSubmit()\n  {\n    //disabling the form\n    this.processing = true;\n\n    //invoking the editSubject function in subejct service\n    this.subjectService.editSubject(this.subject).subscribe(data => {\n      //failure\n      if(!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        //enabling the form\n        this.processing = false;\n      }\n      //success\n      else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(()=>{\n          this.location.back();\n        },2000)\n      }\n    });\n  }\n\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n    top: 10px;\\n    margin: auto;\\n    max-width: 700px;\\n}\\n.subject-name\\n{\\n    background-color: #03a9f4 !important;\\n    min-height: 80px;\\n}\\n.card\\n{\\n    min-width: 245px;\\n    max-width: 245px;\\n    margin:10px;\\n    font-family: 'Trebuchet MS';\\n    font-size: 12px;\\n    min-height: 300px;\\n    max-height: 300px;\\n    overflow: hidden;\\n}\\n.card-title\\n{\\n    font-weight: 900;\\n}\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n.card .inputBox textarea:focus ~ label,\\n.card .inputBox textarea:valid ~ label\\n{\\n    top: -28px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n}\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n.card .inputBox input:focus,\\n.card .inputBox input:valid\\n{\\n    border-color: #03a9f4;\\n}\\n.policy\\n{\\n    font-size: 12px;\\n}\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n.buttons button\\n{\\n    margin:10px;\\n}\\n.design-display {\\n    width: 15rem; \\n    display: inline-block;\\n    margin:5px;\\n}\\n.stars-outer\\n{\\n    position: relative;\\n    display: inline;\\n}\\n.stars-inner\\n{\\n    position: absolute;;\\n    top:0;\\n    left:0;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    width: 0%;\\n}\\n.stars-outer::before {\\n    content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n    font-family: FontAwesome;\\n    font-weight: 900;\\n    color: lightgrey;\\n}\\n.stars-inner::before {\\n    content: \\\"\\\\f005 \\\\f005 \\\\f005 \\\\f005 \\\\f005\\\";\\n    font-family: FontAwesome;\\n    font-weight: 900;\\n    color:red;\\n}\\n\\n\\n\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <br>\\n\\n  <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-rotate\\\">\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading... All the Subjects</p>\\n  </ngx-spinner>\\n  <h5 style=\\\"margin-left: 30px\\\">Subject Search Bar</h5>\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"input-group\\\">\\n      <input #searchBox id=\\\"search-box\\\" style=\\\"width:80%; margin-left: 30px\\\" (keyup)=\\\"search(searchBox.value)\\\"/>\\n      <div class=\\\"input-group-append\\\">\\n        <button class=\\\"btn btn-outline-primary\\\" type=\\\"button\\\">\\n          <i class=\\\"fa fa-search\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"design-display\\\" *ngFor=\\\"let subject of subjects\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"card-header text-center\\\">\\n          <h5><code class=\\\"card-title\\\">{{ subject.subjectNumber }}</code> {{ subject.subjectName }}</h5>\\n          <p class=\\\"card-title text-center\\\" style=\\\"font-size:16px;\\\"></p>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          {{subject.description}}\\n        </div>\\n        <!-- footer start -->\\n        <div class=\\\"card-footer\\\">\\n          <div>\\n\\n            <div class=\\\"stars-outer\\\">\\n              <div class=\\\"stars-inner\\\" [style.width]=\\\"subject.percentageRating + '%'\\\">\\n\\n              </div>\\n            </div>\\n            <!-- Ratings --><br/>\\n            {{subject.numberOfReview}} reviews\\n\\n            <button [routerLink]=\\\"['/subjects/detail/', subject._id]\\\" class=\\\"btn btn-warning btn-sm float-right\\\">Find\\n              out more\\n            </button>\\n          </div>\\n          <!-- footer end-->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from './../../../__services/subjectService/subject.service';  // subject service component\nimport { AuthService } from './../../../__services/authService/auth.service'; // authentication service component\nimport { NgxSpinnerService } from 'ngx-spinner';  //spinner service\n\n\n@Component({\n  selector: 'app-subject-feed',\n  templateUrl: './subject-feed.component.html',\n  styleUrls: ['./subject-feed.component.css']\n})\nexport class SubjectFeedComponent implements OnInit {\n\n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to store the instance of the user model\n  user;\n\n  subjectPosts;\n\n  //variable to store the instance of the rating model\n  rating;\n\n  //maximum possible rating is the maximum rating a subject can receive based on total number of people that reviewed\n  maximumPossibleRating;\n\n  //variable to store the total number of reviews\n  numberOfreview;\n\n  //variable to store the rating percentage\n  percentageRating;\n\n  //variable to store the rounded rating percentage\n  percentageRatingRounded;\n\n  //variable to store the subject instances of subject model; an array\n  subjects;\n\n  constructor(\n    private subjectService: SubjectService, //subject service\n    private authService: AuthService, // authentication service\n    private spinner: NgxSpinnerService  // spinner service\n  ) {\n  }\n\n  ngOnInit() {\n    //getting the profile of the user\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    });\n\n    //getting all the subejcts form the database\n    this.getAllSubjects();\n  }\n\n\n  //function to get all the subjects from the databse\n  getAllSubjects() {\n    this.spinner.show();\n\n    //invoking the function from subject service to retrieve all data\n    this.subjectService.getAllSubjects().subscribe(data => {\n      //assigning the subjects to the array variable defined in the class\n      this.subjectPosts = data.subjects;\n\n      //looping through those data\n      this.subjectPosts.forEach(function (subjectPost) {\n        //minifying the description of the subject\n        if (subjectPost.description.length > 100) {\n          subjectPost.description = subjectPost.description.substring(0, 100) + '...';\n          subjectPost.isVisible = true;\n        }\n      });\n      this.spinner.hide();\n      this.subjects = [...this.subjectPosts];\n\n    })\n\n  }\n\n  //function to search the subject with respect to subject name\n  search(value) {\n    //emptying the array\n    this.subjects = [];\n    //looping through all the subjects\n    this.subjectPosts.forEach((element, index) => {\n      if (element.subjectName.toUpperCase().indexOf(value.toUpperCase()) !== -1) {\n        //adding into the array\n        this.subjects.push(element);\n      } else { }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Footer -->\\n<nav class=\\\"navbar navbar-light bg-light mt-5\\\">\\n    <div class=\\\"navbar-expand m-auto navbar-text\\\">\\n      Made By : RDJ\\n    </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n/**\n * This component displays footer to the root layout,\n * so that it can be displayed throughout the pages.\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Navbar  -->\\n<nav *ngIf=\\\"!authService.notLoggedIn()\\\" class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n  <!-- Logo -->\\n  <a class=\\\"navbar-brand\\\" style=\\\"font-weight:900;\\\" href=\\\"#\\\">UTS-Subject-Review</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <!-- Menus -->\\n  <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navbarNavDropdown\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/subjects']\\\">AllSubjects</a>\\n      </li>\\n\\n      <!-- Drop Down Menu -->\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n          aria-expanded=\\\"false\\\">\\n          <i class=\\\"fa fa-user fixed-user\\\"></i>\\n        </a>\\n        <!-- Drop down list -->\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n\\n          <!-- Add Subject Menu Available only for admin users -->\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"authService.checkUserType()\\\" [routerLink]=\\\"['/subjects/add']\\\">Add Subject</a>\\n          \\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"onClickLogout()\\\" href=\\\"#\\\">Logout</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../__services/authService/auth.service'; // authentication service\nimport { Router } from '@angular/router'; //router module\nimport { FlashMessagesService } from 'angular2-flash-messages'; //flash message service\nimport {User} from '../../../__models/user'; // user model\n\n/**\n * This component displays header to the root layout,\n * so that it can be displayed throughout the pages.\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  //variable to store the user model\n  user: User;\n\n  constructor(\n    public authService: AuthService, // instance of authentication service\n    private router: Router, // instance of router module\n    private flashMessagesService: FlashMessagesService // instance of flash service\n  ) {\n    \n   }\n\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('user')); // getting user information\n  }\n\n  //User logout function\n  onClickLogout() {\n\n    this.authService.logout();\n\n    //display flash message of logging out\n    this.flashMessagesService.show('You are logged out', {cssClass: 'alert-success small'});\n\n    //navigate back to login page\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  //checking user type if it is admin to display required menu items\n  checkUserType(){\n    if (this.user.usertype == \"admin\")\n    {\n      return true;\n    }\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"    <!-- All the contents here-->\\n    <ng-content>\\n      \\n    </ng-content>\\n\"","import { Component, OnInit } from '@angular/core';\n\n/**\n * This component provides frame for the application.\n */\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".login\\n{\\n    font-family: 'Trebuchet MS';\\n}\\n\\n.card {\\n    top: 100px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n\\n.card button\\n{\\n    width:100%;\\n    border-radius: 20px;\\n}\\n\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n\\n.card .inputBox input:focus,\\n.card .inputBox input:valid\\n{\\n    border-color: #03a9f4;\\n}\\n\\n.policy\\n{\\n    font-size: 12px;\\n}\\n\\n.signup\\n{\\n    margin-top: 20%;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\"","module.exports = \"<!-- Login Page -->\\n<div class=\\\"login\\\">\\n\\n  <!--  -->\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Let's get Started!</h1>\\n        <br>\\n        <br>\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- email -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error': form.controls.email.errors && form.controls.email.dirty, 'has-success': form.controls.email.valid && form.controls.email.dirty }\\\">\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" formControlName=\\\"email\\\" />\\n          <label>Email</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\n              field is Required</p>\\n          </div>\\n        </div>\\n\\n        <!-- Password -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\">\\n          <label>Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n              <!-- Required Error -->\\n              <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">*This\\n                field is Required</p>\\n            </div>\\n        </div>\\n\\n        <!-- Login Button -->\\n        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" name=\\\"\\\">Login</button>\\n        <p class=\\\"policy text-center\\\" style=\\\"margin-top:5px;\\\"><a href=\\\"#\\\">Forgot Password?</a></p>\\n\\n        <p class=\\\"signup text-center\\\">Don't Have an account? <a routerLink=\\\"/register\\\">Register here</a></p>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../../__services/authService/auth.service'; // authentication service\nimport { Router } from '@angular/router'; // router model\nimport { User } from '../../../../__models/user'; // user model\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms'; //form modules to create reactive forms\n\n/**\n * This Component consists of all the functions in relation to logging in to the system\n */\n@Component({\n  selector: 'app-logging',\n  templateUrl: './logging.component.html',\n  styleUrls: ['./logging.component.css']\n})\n\nexport class LoggingComponent implements OnInit {\n\n\n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\n  //false means user can edit or click\n  //true means user cannot\n  processing = false;\n\n  //form instance stored in a variable \n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.createForm(); // creating the form at start\n  }\n\n  ngOnInit() {\n  }\n\n  //function to create form (reactive)\n  createForm() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  //function to disable the form when submitted once\n  disableForm() {\n    this.form.controls['email'].disable();\n    this.form.controls['password'].disable();\n  }\n\n  //function to enable the form when submission failed\n  enableForm() {\n    this.form.controls['email'].enable();\n    this.form.controls['password'].enable();\n  }\n\n  //On login function\n  onLoginSubmit() {\n\n    //disabling the form\n    this.processing = true;\n    this.disableForm();\n\n    //creating a new instance of the user\n    const user = {\n      email: this.form.get('email').value,\n      password: this.form.get('password').value\n    }\n\n    //authenticating user\n    this.authService.authenticateUser(user).subscribe(data => {\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.router.navigate(['/dashboard']);\n      }\n      else {\n        //displaying message\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n\n        //enabling the form if login failed so the user can edit the wrong input\n        this.processing = false;\n        this.enableForm();\n      }\n    })\n  }\n\n}\n","module.exports = \".card {\\n    top: 10px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n\\n.card button\\n{\\n    width:100%;\\n    border-radius: 20px;\\n}\\n\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n\\n.policy\\n{\\n    font-size: 12px;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- Message Display -->\\n  <br />\\n  <div *ngIf=\\\"loadEditForm\\\">\\n    <div *ngIf=\\\"user\\\">\\n      <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n        <div class=\\\"card-header\\\">\\n            <h1> Profile </h1>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n        <p>First Name : {{user.first_name}}</p>\\n        <p>Last Name : {{user.last_name}} </p>\\n        <p>Username : {{user.username}} </p>\\n        <p>Email : {{user.email}} </p>\\n        <p class=\\\"text-danger small\\\">Note: you need to update your password as well for security purpose</p>\\n      </div>\\n        <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"editUserForm()\\\">Edit</button>\\n      </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- New Subject Form -->\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"updateUserSubmit()\\\" *ngIf=\\\"!loadEditForm\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Edit Profile</h1>\\n\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- First Name -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"first_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"first_name\\\" [(ngModel)]=\\\"user.first_name\\\" />\\n          <label>First name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.required && form.controls.first_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.first_name.errors?.minlength || form.controls.first_name.errors?.maxlength) && form.controls.first_name.dirty\\\">*Minimum\\n              characters: 2\\n              Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.validateName && form.controls.first_name.dirty && (form.controls.first_name.value.length != 0)\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Last Name -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"last_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"last_name\\\" [(ngModel)]=\\\"user.last_name\\\" />\\n          <label>Last name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.required && form.controls.last_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.last_name.errors?.minlength || form.controls.last_name.errors?.maxlength) && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">*Minimum\\n              characters: 2, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.validateName && form.controls.last_name.dirty && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Email -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"user.email\\\"\\n            (blur)=\\\"checkEmail()\\\" />\\n          <label>Email</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty && form.controls.email.touched && form.controls.email.value.length < 5\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.validateEmails && form.controls.email.dirty && form.controls.email.value.length >= 5\\\">Invalid\\n              email\\n            </p>\\n          </div>\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"emailMessage && !form.controls.email.errors?.validateEmails\\\">{{emailMessage}}</p>\\n        </div>\\n\\n        <!-- Username -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"username\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"\\n            (blur)=\\\"checkUsername()\\\" />\\n          <label>Username</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.username.dirty && form.controls.username.value.length != 0\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty && form.controls.username.value.length != 0\\\">Username\\n              must not have any special characters\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"usernameMessage && !form.controls.username.errors?.validateUsername && !form.controls.username.errors?.minlength && !form.controls.username.errors?.maxlength\\\">{{usernameMessage}}</p>\\n\\n\\n          </div>\\n        </div>\\n\\n        <!-- Password -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\" />\\n          <label>Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This\\n              field is required </p>\\n\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) && form.controls.password.dirty && form.controls.password.value.length <= 5\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n\\n          </div>\\n          <!-- Invalid data error  -->\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty && form.controls.password.value.length > 5\\\">Passord\\n            must contain atleast 1 Uppercase, 1 lowercase, 1 number and 1 special character\\n          </p>\\n\\n        </div>\\n\\n\\n        <!-- Confirm Password -->\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"password\\\" name=\\\"confirm_password\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"confirm_password\\\" />\\n          <label>Confirm Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.confirm_password.errors?.required && form.controls.confirm_password.dirty\\\">This\\n              field is required\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm_password.dirty\\\">Password\\n              do not match</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"buttons\\\">\\n          <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"\\\">Save Changes</button>\\n          <button style=\\\"float:right\\\" [disabled]=\\\"processing\\\" class=\\\"btn btn-warning\\\" type=\\\"button\\\" name=\\\"\\\" (click)=\\\"goBack()\\\">Go\\n            Back</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../__services/authService/auth.service'; //authentication service\nimport { ActivatedRoute, Router } from '@angular/router'; // Module to get the URL\nimport { Location } from '@angular/common'; // Location Module\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms'; // Form Module\n/**\n * This Component displays the user details and has functions to update/edit the profile of the user\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  \n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\n  //false means user can edit or click\n  //true means user cannot\n  processing = false;\n\n  //variable to store current URL\n  currentUrl;\n  //instance of the form\n  form;\n\n  //variable to store boolean values reagarding the validity of the email\n  emailValid;\n  //error message or confirmation message\n  emailMessage;\n\n  //variable to store boolean values regarding the validity of the username\n  usernameValid;\n  //variable to store the message on the validity of username\n  usernameMessage;\n  //instance of the user\n  user;\n\n  //variable to store Boolean value to either display the edit form or not\n  loadEditForm = true;\n\n  //variable to store the subject model\n  subject;\n\n  constructor(\n    private formBuilder : FormBuilder, \n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private authService: AuthService\n  ) \n  {\n    this.createForm(); // create form at the start\n  }\n\n  //Initialization\n  ngOnInit() {\n    //get profile\n    this.authService.getProfile().subscribe(data => {\n    if(!data.success){\n      this.messageClass= 'alert alert-danger';\n        this.message = \"User Not found\";\n    } else {\n      //success\n      this.user = data.user;\n    }\n    }\n  )\n  }\n  \n  //function to display edit user form\n  editUserForm(){\n    this.loadEditForm = false\n  }\n\n  //function to create form\n  createForm() {\n    this.form = this.formBuilder.group({\n      first_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      last_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateEmails\n      ])],\n      username: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateUsername\n      ])],\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(80),\n        this.validatePassword\n      ])],\n      confirm_password: ['', Validators.required]\n    }, { validator: this.matchingPasswords('password', 'confirm_password') })\n  }\n\n  //function to go back\n  goBack()\n  {\n    this.loadEditForm=true;\n  }\n\n  //function to update the user\n  updateUserSubmit()\n  {\n    //disabling the form\n    this.processing = true;\n\n    //updating the user details\n    this.authService.updateProfile(this.user).subscribe(data => {\n      if(!data.success){\n        //failure\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n      } else {\n        //success\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(()=>{\n          this.location.back();\n        },2000)\n      }\n    });\n  }\n\n  //validation for email\n  validateEmails(controls) {\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if (regExp.test(String(controls.value))) {\n      return null;\n    } else {\n      return { 'validateEmails': true };\n    }\n  }\n\n  //validation for username\n  validateUsername(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateUsername': true };\n    }\n  }\n\n  //validation for first name and last name\n  validateName(controls) {\n    const regExp = new RegExp(/^[a-zA-Z]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateName': true };\n    }\n  }\n  \n  //validation for password\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validatePassword': true };\n    }\n  }\n\n  //comparing two passord to match\n  matchingPasswords(password, confirm_password) {\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm_password].value) {\n        return null;\n      } else {\n        return { 'matchingPasswords': true };\n      }\n    }\n  }\n\n  //checking email if it is present or not\n  checkEmail() {\n    const email = this.form.get('email').value;\n    if (email.length != 0) {\n      this.authService.checkEmail(email).subscribe(data => {\n        if (!data.success) {\n          this.emailValid = false;\n          this.emailMessage = data.message;\n        } else {\n          this.emailValid = true;\n          this.emailMessage = data.message;\n        }\n      });\n    }\n  }\n\n  //checking username if it is available or not\n  checkUsername() {\n    const username = this.form.get('username').value;\n    if (username.length != 0) {\n      this.authService.checkUsername(username).subscribe(data => {\n        if (!data.success) {\n          this.usernameValid = false;\n          this.usernameMessage = data.message;\n        } else {\n          this.usernameValid = true;\n          this.usernameMessage = data.message;\n        }\n      });\n    }\n  }\n\n  \n\n}\n","module.exports = \".registration\\n{\\n    font-family: 'Trebuchet MS';\\n}\\n\\n.card {\\n    top: 10px;\\n    margin: auto;\\n    max-width: 400px;\\n}\\n\\n.card-body h1\\n{\\n    margin-bottom: 20px;\\n    font-weight: 900;\\n}\\n\\n.card .inputBox,\\n.show-hide-message\\n{\\n    position: relative;\\n    margin: 10px;\\n}\\n\\n.card .inputBox input\\n{\\n    width:100%;\\n    padding: 10px 0;\\n    margin-bottom: 20px;\\n    border: none;\\n    border-bottom: 1px solid grey ;\\n    transition: border .1s ease-out;\\n    outline: none;\\n}\\n\\n.card button\\n{\\n    width:100%;\\n    border-radius: 20px;\\n}\\n\\n.card .inputBox label\\n{\\n    position:absolute;\\n    top: 0;\\n    left: 0;\\n    padding: 10px 0;\\n    pointer-events: none;\\n    transition: .5s;\\n    color: lightgrey;\\n}\\n\\n.card .inputBox input:focus ~ label,\\n.card .inputBox input:valid ~ label\\n{\\n    top: -18px;\\n    left: 0;\\n    color: #03a9f4;\\n    font-size: 12px;\\n    \\n}\\n\\n.card .inputBox input:focus,\\n.card .inputBox input:valid,\\n{\\n    border-color: #03a9f4;\\n}\\n\\n.policy\\n{\\n    font-size: 12px;\\n}\\n\\n.help-block\\n{\\n    position:absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 10px 0;\\n}\\n\\n.help-block p\\n{\\n    top: 0;\\n    left: 0;\\n    font-size: 12px;\\n}\\n\\n.show-hide-message\\n{\\n    margin: auto;\\n    top:0;\\n    padding: 0;\\n    font-size: 12px;\\n}\\n\"","module.exports = \"<div class=\\\"registration\\\">\\n\\n  <!-- Registration -->\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n    <div class=\\\"col-sm-10 shadow p-3 mb-5 bg-white rounded card\\\">\\n      \\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center\\\">Register</h1>\\n\\n        <!-- Message Display -->\\n        <div class=\\\"row show-hide-message\\\" style=\\\"width:100%;\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"text-center\\\">\\n            {{ message }}\\n          </div>\\n        </div>\\n\\n        <!-- First Name -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.first_name.errors && form.controls.first_name.dirty), 'has-success': !form.controls.first_name.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"first_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"first_name\\\" />\\n          <label>First name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.required && form.controls.first_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.first_name.errors?.minlength || form.controls.first_name.errors?.maxlength) && form.controls.first_name.dirty\\\">*Minimum\\n              characters: 2\\n              Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.first_name.errors?.validateName && form.controls.first_name.dirty && (form.controls.first_name.value.length != 0)\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Last Name -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.last_name.errors && form.controls.last_name.dirty), 'has-success': !form.controls.last_name.errors}\\\">\\n          <input type=\\\"text\\\" name=\\\"last_name\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"last_name\\\" />\\n          <label>Last name</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.required && form.controls.last_name.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.last_name.errors?.minlength || form.controls.last_name.errors?.maxlength) && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">*Minimum\\n              characters: 2, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.last_name.errors?.validateName && form.controls.last_name.dirty && form.controls.last_name.dirty && form.controls.last_name.value.length != 0\\\">Invalid\\n              Name\\n            </p>\\n          </div>\\n        </div>\\n\\n        <!-- Email -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\n          <input type=\\\"text\\\" name=\\\"email\\\" required=\\\"\\\" autocomplete=\\\"on\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\"/>\\n          <label>Email</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.email.errors?.minlength || form.controls.email.errors?.maxlength) && form.controls.email.dirty && form.controls.email.touched && form.controls.email.value.length < 5\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.email.errors?.validateEmails && form.controls.email.dirty && form.controls.email.value.length >= 5\\\">Invalid\\n              email\\n            </p>\\n          </div>\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"emailMessage && !form.controls.email.errors?.validateEmails\\\">{{emailMessage}}</p>\\n        </div>\\n\\n        <!-- Username -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{'has-error':(form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\n          <input type=\\\"text\\\" name=\\\"username\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\" />\\n          <label>Username</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <!-- Required Error -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">*This\\n              field is Required</p>\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.username.dirty && form.controls.username.value.length != 0\\\">*Minimum\\n              characters: 5, Maximum characters: 50\\n            </p>\\n            <!-- Invalid data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty && form.controls.username.value.length != 0\\\">Username\\n              must not have any special characters\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"usernameMessage && !form.controls.username.errors?.validateUsername && !form.controls.username.errors?.minlength && !form.controls.username.errors?.maxlength\\\">{{usernameMessage}}</p>\\n\\n\\n          </div>\\n        </div>\\n\\n        <!-- Password -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{ 'has-error': form.controls.password.errors && form.controls.password.dirty , 'has-success':!form.controls.password.errors }\\\">\\n          <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\" />\\n          <label>Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This\\n              field is required </p>\\n\\n            <!-- Minimum and Maximum length of data error  -->\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"(form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength) && form.controls.password.dirty && form.controls.password.value.length <= 8\\\">*Minimum\\n              characters: 8<br> *Maximum characters: 50\\n            </p>\\n            \\n          </div>\\n          <!-- Invalid data error  -->\\n          <p class=\\\"text-danger text-right\\\" style=\\\"font-size:12px;\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty && form.controls.password.value.length > 8\\\">Passord\\n              must contain atleast 1 Uppercase, 1 lowercase, 1 number and 1 special character\\n            </p>\\n        </div>\\n\\n\\n        <!-- Confirm Password -->\\n        <div class=\\\"inputBox\\\" [ngClass]=\\\"{ 'has-error': (form.controls.confirm_password.errors && form.controls.confirm_password.dirty) || (form.errors?.matchingPasswords && form.controls.confirm_password.dirty) , 'has-success':!form.controls.confirm_password.errors && !form.errors?.matchingPasswords}\\\">\\n          <input type=\\\"password\\\" name=\\\"confirm_password\\\" required=\\\"\\\" autocomplete=\\\"off\\\" formControlName=\\\"confirm_password\\\" />\\n          <label>Confirm Password</label>\\n          <!-- Error Block -->\\n          <div class=\\\"help-block\\\">\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.controls.confirm_password.errors?.required && form.controls.confirm_password.dirty\\\">This\\n              field is required\\n            </p>\\n            <p class=\\\"text-danger text-right\\\" *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm_password.dirty\\\">Password\\n              do not match</p>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"policy text-center\\\">By signing up, you are agreeing to the terms and policy of UTS subject review</p>\\n        <button [disabled]=\\\"!form.valid || processing || !usernameValid || !emailValid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" name=\\\"\\\">Register</button>\\n\\n        <!-- First Name -->\\n        <p class=\\\"text-center\\\">Already Have an account? <a routerLink=\\\"/login\\\">Login here</a></p>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../../../__services/validateService/validate.service'; //validation service\nimport { AuthService } from '../../../../__services/authService/auth.service';  //authentication service\nimport { Router } from '@angular/router'; //router module\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';  //module for creating reactive forms\n\n/**\n * This Component displays a register page and has functions for registering a user\n */\n@Component({\n  selector: 'app-registering',\n  templateUrl: './registering.component.html',\n  styleUrls: ['./registering.component.css']\n})\nexport class RegisteringComponent implements OnInit {\n\n  //instance of formGroup\n  form: FormGroup;\n\n  //message variable stores the feedback message for the user\n  message;\n  //message class defines the CSS class for message to be displayed\n  messageClass;\n\n  //variable to disable or enable form so that user does not edit or submit the form simultaneously while the form is being procesed\n  //false means user can edit or click\n  //true means user cannot\n  processing;\n\n  //variable to store boolean values reagarding the validity of the email\n  emailValid;\n  //error message or confirmation message\n  emailMessage;\n\n  //variable to store boolean values regarding the validity of the username\n  usernameValid;\n  //variable to store the message on the validity of username\n  usernameMessage;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.createForm(); //creating the form at startt\n  }\n\n  //function to create form\n  createForm() {\n    this.form = this.formBuilder.group({\n      first_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      last_name: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(50),\n        this.validateName\n      ])],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateEmails\n      ])],\n      username: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(50),\n        this.validateUsername\n      ])],\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(80),\n        this.validatePassword\n      ])],\n      confirm_password: ['', Validators.required]\n    }, { validator: this.matchingPasswords('password', 'confirm_password') })\n  }\n\n  //Initialization\n  ngOnInit() {\n  }\n\n  //On Register\n  onRegisterSubmit() {\n    //disabling the form\n    this.processing = true;\n\n    //creating a instance of the user\n    const user = {\n      first_name: this.form.get('first_name').value,\n      last_name: this.form.get('last_name').value,\n      email: this.form.get('email').value,\n      username: this.form.get('username').value,\n      password: this.form.get('password').value,\n    }\n\n    //registering a new user\n    this.authService.registerUser(user).subscribe(data => {\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n      } else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        this.processing = false;\n        setTimeout(() => {\n          this.router.navigate(['/login'])\n        }, 2000)\n      }\n    });\n  }\n\n  //validation for emails\n  validateEmails(controls) {\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if (regExp.test(String(controls.value))) {\n      return null;\n    } else {\n      return { 'validateEmails': true };\n    }\n  }\n\n  //validation for username\n  validateUsername(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateUsername': true };\n    }\n  }\n\n  //validation for first name and last name\n  validateName(controls) {\n    const regExp = new RegExp(/^[a-zA-Z]+$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validateName': true };\n    }\n  }\n\n  //validation for password\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { 'validatePassword': true };\n    }\n  }\n\n  //matching the passwords for confirmaiton\n  matchingPasswords(password, confirm_password) {\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm_password].value) {\n        return null;\n      } else {\n        return { 'matchingPasswords': true };\n      }\n    }\n  }\n\n  //check the availability of the email\n  checkEmail() {\n    const email = this.form.get('email').value;\n    if (email.length != 0) {\n      this.authService.checkEmail(email).subscribe(data => {\n        if (!data.success) {\n          this.emailValid = false;\n          this.emailMessage = data.message;\n        } else {\n          this.emailValid = true;\n          this.emailMessage = data.message;\n        }\n      });\n    }\n  }\n\n  //checks the availability of the username\n  checkUsername() {\n    const username = this.form.get('username').value;\n    if (username.length != 0) {\n      this.authService.checkUsername(username).subscribe(data => {\n        if (!data.success) {\n          this.usernameValid = false;\n          this.usernameMessage = data.message;\n        } else {\n          this.usernameValid = true;\n          this.usernameMessage = data.message;\n        }\n      });\n    }\n  }\n}\n","import {Injectable} from '@angular/core'\nimport {Router, CanActivate} from '@angular/router'\nimport {AuthService} from '../__services/authService/auth.service'\nimport {Location} from '@angular/common'\n\n@Injectable() \nexport class AuthGuard implements CanActivate {\n    constructor(\n        private authService:AuthService,\n        private router:Router,\n        private locatation:Location\n    ){}\n\n    canActivate() {\n        if(!this.authService.notLoggedIn()){\n            return true;\n        } else {\n            this.router.navigate(['/login'])\n            return false;\n        }\n    }\n}\n","import {Injectable} from '@angular/core'\nimport {Router, CanActivate} from '@angular/router'\nimport {AuthService} from '../__services/authService/auth.service'\n\n@Injectable() \nexport class NotAuthGuard implements CanActivate {\n    constructor(\n        private authService:AuthService,\n        private router:Router\n    ){}\n\n    canActivate() {\n        if(!this.authService.notLoggedIn()){\n            this.router.navigate(['/dashboard'])\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n","export class Rating {\n  public _id;\n  public userID;\n  public ratingDescription;\n  public subjectID;\n  public editFlag = false;\n  public username;\n  public star;\n  public created;\n\n  constructor() {\n    this._id = '';\n    this.userID = '';\n    this.ratingDescription = '';\n    this.subjectID = '';\n    this.editFlag = false;\n    this.username = '';\n    this.star = 0;\n    this.created = '';\n  }\n}\n","import {Rating} from 'src/app/__models/rating';\n\nexport class Subject {\n  public _id;\n  public subjectNumber;\n  public subjectName;\n  public numberOfReview;\n  public percentageRating;\n  public description;\n  public ratingIDs: Array<string>;\n\n  constructor() {\n    this._id = '';\n    this.subjectNumber = '';\n    this.subjectName = '';\n    this.numberOfReview = 0;\n    this.percentageRating = 0;\n    this.description = '';\n    this.ratingIDs = [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// subject\nimport { SubjectAddComponent } from './../__components/subject/subject-add/subject-add.component';\nimport { DashboardComponent } from './../__components/subject/dashboard/dashboard.component';\nimport { SubjectFeedComponent } from './../__components/subject/subject-feed/subject-feed.component';\nimport { SubjectEditComponent } from './../__components/subject/subject-edit/subject-edit.component';\nimport { SubjectAddReviewComponent } from './../__components/subject/subject-add-review/subject-add-review.component';\nimport { SubjectDeleteComponent } from './../__components/subject/subject-delete/subject-delete.component';\n\n\n// user\nimport { LoggingComponent } from '../__components/user/login/logging/logging.component';\nimport { ProfileComponent } from '../__components/user/profile/profile.component';\nimport { RegisteringComponent } from '../__components/user/register/registering/registering.component';\n\n// Authentication guards\nimport { NotAuthGuard } from '../__guards/notAuth.guard';\nimport { AuthGuard } from '../__guards/auth.guard';\n\nconst routes: Routes = [\n  { path: 'login', component: LoggingComponent, canActivate: [NotAuthGuard]},\n  { path: 'register', component: RegisteringComponent, canActivate: [NotAuthGuard]},\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  { path: 'subjects', component: SubjectFeedComponent, canActivate: [AuthGuard] },\n  { path: 'subjects/add', component: SubjectAddComponent, canActivate: [AuthGuard]},\n  { path: 'subjects/detail/:id', component: SubjectAddReviewComponent, canActivate: [AuthGuard]},\n  { path: 'subjects/edit/:id', component: SubjectEditComponent, canActivate: [AuthGuard]},\n  { path: 'subjects/delete/:id', component: SubjectDeleteComponent, canActivate: [AuthGuard]},\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  { path: '**', redirectTo: 'dashboard', canActivate: [AuthGuard] },\n  { path: '**', redirectTo: 'login' } // The \"Catch-All\" Route and send to login\n\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators/';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\n\nconst helper = new JwtHelperService();\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  // url for server\n  domain = 'http://localhost:8080';\n  authToken: any;\n  user: any;\n  headers;\n\n  constructor(\n    private http: Http,\n    private router: Router\n  ) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http\n      .post(this.domain + '/users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  checkUsername(username) {\n    return this.http.get(this.domain + '/users/checkUsername/' + username).pipe(map(res => res.json()));\n  }\n\n  checkEmail(email) {\n    return this.http.get(this.domain + '/users/checkEmail/' + email).pipe(map(res => res.json()));\n  }\n\n  checkSubjectNumber(subjectNumber) {\n    return this.http.get(this.domain + '/users/checkSubjectNumber/' + subjectNumber).pipe(map(res => res.json()));\n  }\n\n  checkSubjectName(subjectName) {\n    return this.http.get(this.domain + '/users/checkSubjectName/' + subjectName).pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http\n      .post(this.domain + '/users/authenticate', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  updateProfile(user) {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.put(this.domain + '/users/profile/updateProfile', user, {headers : headers})\n      .pipe(map(res => res.json()));\n  }\n\n  loadAuthenticationHeaders() {\n    this.headers = new Headers();\n    this.loadToken();\n    this.headers.append('Authorization', this.authToken);\n    this.headers.append('Content-Type', 'application/json');\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authToken);\n    return this.http\n      .get(this.domain + '/users/profile', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    // Local storage can only store string\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  notLoggedIn() {\n    const isExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    return isExpired;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  checkUserType() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    if (user.usertype === 'admin') {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http } from '@angular/http';\n\nimport {Observable, Subject} from 'rxjs';\n\nimport {Rating} from '../../__models/rating';\n// import {Headers, RequestOptions} from '@angular/http';\nimport {AuthService} from '../authService/auth.service';\nimport {map} from 'rxjs/operators';\n\n// const httpOptions = {\n//   headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n// };\n\n@Injectable({ providedIn: 'root' })\nexport class RatingService {\n  public rating_Observable = new Subject();\n  domain = this.authService.domain; // URL to web api\n  private ratingsUrl = this.domain + '/ratings';  // URL to web api\n  // options;\n\n  constructor(\n    private http: Http,\n    private authService: AuthService) {\n  }\n\n\n  /** GET ratings from the server */\n  getRatingsbySubjectID(subjectID: number): Observable<Rating[]> {\n    this.authService.loadAuthenticationHeaders();\n    const url = `${this.ratingsUrl}/${subjectID}`;\n    return this.http.get(url,{headers:this.authService.headers}).pipe(map(res => res.json()));\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new rating to the server */\n  addRating(rating: Rating): Observable<Rating> {\n    console.log(rating);\n    this.authService.loadAuthenticationHeaders();\n    return this.http.post(`${this.ratingsUrl}/add/`, rating, {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n  /** DELETE: delete the rating from the server */\n  deleteRating(rating: Rating): Observable<Rating> {\n    console.log(rating);\n    this.authService.loadAuthenticationHeaders();\n    const url = `${this.ratingsUrl}/delete/${rating._id}`;\n    return this.http.delete(url, {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n  /** PUT: update the rating on the server */\n  updateRating(rating: Rating): Observable<Rating> {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.put(`${this.ratingsUrl}/update`, rating, {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n  notifyRating() {\n    this.rating_Observable.next();\n  }\n\n  getDashboardRatings() {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.get(this.ratingsUrl + '/dashboard', {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthService } from './../authService/auth.service';\nimport { map } from 'rxjs/operators/';\nimport {Subject} from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class SubjectService {\n  public subject_Observable = new Subject();\n  domain = this.authService.domain; // URL to web api\n\n  constructor(\n    private authService: AuthService,\n    private http: Http\n    ) { }\n\n  notifySubject() {\n    this.authService.loadAuthenticationHeaders();\n    this.subject_Observable.next();\n  }\n  newSubject(subject) {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.post(this.domain + '/subjects/addSubject', subject, {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getAllSubjects() {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.get(this.domain + '/subjects/allSubjects', {headers:this.authService.headers})\n    .pipe(map(res => res.json()));\n  }\n\n  getDashboardSubjects() {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.get(this.domain + '/subjects/dashboard', {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getSingleSubject(id) {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.get(this.domain + '/subjects/singleSubject/' + id, {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n  editSubject(subject) {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.put(this.domain + '/subjects/updateSubject', subject, {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n  deleteSubject(id) {\n    this.authService.loadAuthenticationHeaders();\n    return this.http.delete(this.domain + '/subjects/deleteSubject/' + id, {headers: this.authService.headers})\n      .pipe(map(res => res.json()));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.password == undefined) {\n      console.log('no Error');\n        return false;\n    } else {\n      console.log(\"Error\")\n      return true;\n    }     \n  }\n\n  //Regex email validation to ensure that it uses correct email format\n  // validateEmail(controls) {\n  //   //Regex email validation\n  //   console.log(\"hello\");\n  // }\n}\n","module.exports = \".bg{\\n    background-image: url('login.jpg'); height: 100%; background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: cover;\\n    height: 1024px;\\n}\\n\\nnobg{\\n    background-color: grey;\\n}\\n\"","module.exports = \"\\n<!-- background image display according to the login status -->\\n<div [ngClass]=\\\"{'bg': authService.notLoggedIn(), 'nobg': !authService.notLoggedIn()}\\\">\\n\\n\\n    <app-layout>\\n    <flash-messages style=\\\"position: fixed; width: 100%; z-index: 1;\\\"></flash-messages>\\n    <app-header></app-header>\\n    <!--TODO: Get this flash message going\\n    <ng-flash-message></ng-flash-message> -->\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n    </app-layout>\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { AuthService } from './__services/authService/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'subject-review';\n\n  constructor(public authService: AuthService){}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, InjectionToken } from '@angular/core';\n\n//Forms Module for angular\nimport { FormsModule } from \"@angular/forms\";\n\n//Http module required for server connection\nimport { HttpModule } from \"@angular/http\"\nimport { HttpClientModule } from '@angular/common/http';\n\n//JWT\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n//importing Components\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './__components/subject/dashboard/dashboard.component';\n\n//ui\nimport { LayoutComponent } from './__components/ui/layout/layout.component';\nimport { HeaderComponent } from './__components/ui/header/header.component';\nimport { FooterComponent } from './__components/ui/footer/footer.component';\n\n//bootstrap\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n//user\nimport { LoggingComponent } from './__components/user/login/logging/logging.component';\nimport { ProfileComponent } from './__components/user/profile/profile.component';\nimport { RegisteringComponent } from './__components/user/register/registering/registering.component';\n\n//Importing Authentication Guard\nimport { AuthGuard } from './__guards/auth.guard';\nimport { NotAuthGuard } from './__guards/notAuth.guard';\n\n//Importing Service\nimport { ValidateService } from './__services/validateService/validate.service';\nimport { AuthService } from './__services/authService/auth.service';\n\n//Routing Module\nimport { AppRoutingModule } from './__routes/app-routing.module';\n\n//Reactive Forms\nimport { ReactiveFormsModule } from '@angular/forms';\n\n//importing flash message module\nimport { FlashMessagesModule, FlashMessagesService } from 'angular2-flash-messages';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n//Subject\nimport { SubjectFeedComponent } from './__components/subject/subject-feed/subject-feed.component';\nimport { SubjectAddComponent } from './__components/subject/subject-add/subject-add.component';\nimport { SubjectAddReviewComponent } from './__components/subject/subject-add-review/subject-add-review.component';\nimport { SubjectEditComponent } from './__components/subject/subject-edit/subject-edit.component';\nimport { SubjectDeleteComponent } from './__components/subject/subject-delete/subject-delete.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    RegisteringComponent,\n    LoggingComponent,\n    LayoutComponent,\n    HeaderComponent,\n    FooterComponent,\n    SubjectAddComponent,\n    DashboardComponent,\n    SubjectFeedComponent,\n    SubjectAddReviewComponent,\n    SubjectEditComponent,\n    SubjectDeleteComponent,\n  ],\n\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FlashMessagesModule,\n    NgxSpinnerModule,\n    NgbModule\n  ],\n  \n  providers: [ValidateService, AuthService, JwtHelperService, AuthGuard, NotAuthGuard, FlashMessagesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}